<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lieeber&#39;s Blog</title>
  <subtitle>欢迎光临我的技术博客。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-15T03:01:23.646Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>lieeber</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeakCanary的使用及原理</title>
    <link href="http://yoursite.com/2018/07/10/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/LeakCanary%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2018/07/10/第三方框架/LeakCanary的使用及原理/</id>
    <published>2018-07-10T04:18:15.000Z</published>
    <updated>2018-08-15T03:01:23.646Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用"><a class="header-anchor" href="#使用">¶</a>使用</h3>
<p>LeakCanary是Square为Android应用提供的一个监测内存泄露的工具，源码地址：<a href="https://github.com/square/leakcanary%E3%80%82" target="_blank" rel="external">https://github.com/square/leakcanary。</a>
在gradle文件中引入依赖：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">  debugImplementation <span class="string">'com.squareup.leakcanary:leakcanary-android:1.6.1'</span></div><div class="line">  releaseImplementation <span class="string">'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'</span></div><div class="line">  <span class="comment">// Optional, if you use support library fragments:</span></div><div class="line">  debugImplementation <span class="string">'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>在项目的Application中添加检测：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate();</div><div class="line">    <span class="keyword">if</span> (LeakCanary.isInAnalyzerProcess(<span class="keyword">this</span>)) &#123;</div><div class="line">      <span class="comment">// This process is dedicated to LeakCanary for heap analysis.</span></div><div class="line">      <span class="comment">// You should not init your app in this process.</span></div><div class="line">      <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    LeakCanary.install(<span class="keyword">this</span>);</div><div class="line">    <span class="comment">// Normal app init code...</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果检测到有内存泄漏，手机桌面会多出一个图标，点进去查看可以看见泄漏信息。
<img src="http://osphuquui.bkt.clouddn.com/18-8-15/87322123.jpg" alt=""></p>
<h3 id="原理"><a class="header-anchor" href="#原理">¶</a>原理</h3>
<h4 id="监听"><a class="header-anchor" href="#监听">¶</a>监听</h4>
<p>在Android中，当一个Activity走完onDestroy生命周期后，说明该页面已经被销毁了，应该被系统GC回收。通过Application.registerActivityLifecycleCallbacks()方法注册Activity生命周期的监听，每当一个Activity页面销毁时候，获取到这个Activity去检测这个Activity是否真的被系统GC。</p>
<h4 id="检测"><a class="header-anchor" href="#检测">¶</a>检测</h4>
<p>当获取了待分析的对象后，需要确定这个对象是否产生了内存泄漏。
通过WeakReference + ReferenceQueue来判断对象是否被系统GC回收，WeakReference 创建时，可以传入一个 ReferenceQueue 对象。当被 WeakReference 引用的对象的生命周期结束，一旦被 GC 检查到，GC 将会把该对象添加到 ReferenceQueue 中，待ReferenceQueue处理。当 GC 过后对象一直不被加入 ReferenceQueue，它可能存在内存泄漏。
当我们初步确定待分析对象未被GC回收时候，手动触发GC，二次确认。</p>
<h4 id="分析"><a class="header-anchor" href="#分析">¶</a>分析</h4>
<p>分析这块使用了Square的另一个开源库haha，<a href="https://github.com/square/haha%EF%BC%8C%E5%88%A9%E7%94%A8%E5%AE%83%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84heap%E5%A0%86%E4%BF%A1%E6%81%AF%E7%9A%84%E5%BF%AB%E7%85%A7snapshot%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%9A%E8%BF%87%E5%BE%85%E5%88%86%E6%9E%90%E5%AF%B9%E8%B1%A1%E5%8E%BBsnapshot%E9%87%8C%E9%9D%A2%E5%8E%BB%E6%9F%A5%E6%89%BE%E5%BC%BA%E5%BC%95%E7%94%A8%E5%85%B3%E7%B3%BB%E3%80%82" target="_blank" rel="external">https://github.com/square/haha，利用它获取当前内存中的heap堆信息的快照snapshot，然后通过待分析对象去snapshot里面去查找强引用关系。</a></p>
<h3 id="源码分析"><a class="header-anchor" href="#源码分析">¶</a>源码分析</h3>
<p>检测过程主要分为两个部分
监听Activity销毁，并判断是否存在内存泄漏
找到内存泄漏的对象的引用路径</p>
<h4 id="监听-v2"><a class="header-anchor" href="#监听-v2">¶</a>监听</h4>
<p>直接从LeakCanary.install()方法开始看。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Creates a &#123;<span class="doctag">@link</span> RefWatcher&#125; that works out of the box, and starts watching activity</div><div class="line"> * references (on ICS+).</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RefWatcher <span class="title">install</span><span class="params">(Application application)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> refWatcher(application).listenerServiceClass(DisplayLeakService.class)</div><div class="line">      .excludedRefs(AndroidExcludedRefs.createAppDefaults().build())</div><div class="line">      .buildAndInstall();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Builder to create a customized &#123;<span class="doctag">@link</span> RefWatcher&#125; with appropriate Android defaults.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AndroidRefWatcherBuilder <span class="title">refWatcher</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> AndroidRefWatcherBuilder(context);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>install()方法中首先实例化了一个AndroidRefWatcherBuilder类。
然后使用listenerServiceClass()方法设置了DisplayLeakService类，这个类用于分析内存泄漏结果信息，然后发送通知给用户。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">AndroidRefWatcherBuilder</span> <span class="keyword">extends</span> <span class="title">RefWatcherBuilder</span>&lt;<span class="title">AndroidRefWatcherBuilder</span>&gt; </span>&#123;</div><div class="line">    ...</div><div class="line">    <span class="comment">/**</span></div><div class="line">    * Sets a custom &#123;<span class="doctag">@link</span> AbstractAnalysisResultService&#125; to listen to analysis results. This</div><div class="line">    * overrides any call to &#123;<span class="doctag">@link</span> #heapDumpListener(HeapDump.Listener)&#125;.</div><div class="line">    */</div><div class="line">    <span class="function"><span class="keyword">public</span> AndroidRefWatcherBuilder <span class="title">listenerServiceClass</span><span class="params">(</span></span></div><div class="line">      Class&lt;? extends AbstractAnalysisResultService&gt; listenerServiceClass) &#123;</div><div class="line">        <span class="keyword">return</span> heapDumpListener(<span class="keyword">new</span> ServiceHeapDumpListener(context, listenerServiceClass));</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RefWatcherBuilder</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">RefWatcherBuilder</span>&lt;<span class="title">T</span>&gt;&gt; </span>&#123;</div><div class="line">    ...</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> T <span class="title">heapDumpListener</span><span class="params">(HeapDump.Listener heapDumpListener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.heapDumpListener = heapDumpListener;</div><div class="line">        <span class="keyword">return</span> self();</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后调用excludedRefs()方法设置添加一些白名单。在AndroidExcludedRefs类中以枚举的形式定义了忽略列表信息，如果这些列表中的类发生了内存泄漏，并不会显示出来，同时HeapAnalyzer在计算到GC roots的强引用路径，也会忽略这些类。如果你想自己的某个类泄漏了，LeakCanary不提示，就加到这个类中。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> AndroidExcludedRefs &#123;</div><div class="line">    ACTIVITY_CLIENT_RECORD__NEXT_IDLE(VERSION.SDK_INT &gt;= <span class="number">19</span> &amp;&amp; VERSION.SDK_INT &lt;= <span class="number">21</span>) &#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(Builder excluded)</span> </span>&#123;</div><div class="line">            excluded.instanceField(<span class="string">"android.app.ActivityThread$ActivityClientRecord"</span>, <span class="string">"nextIdle"</span>).reason(<span class="string">"Android AOSP sometimes keeps a reference to a destroyed activity as a nextIdle client record in the android.app.ActivityThread.mActivities map. Not sure what\'s going on there, input welcome."</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    SPAN_CONTROLLER(VERSION.SDK_INT &lt;= <span class="number">19</span>) &#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(Builder excluded)</span> </span>&#123;</div><div class="line">            String reason = <span class="string">"Editor inserts a special span, which has a reference to the EditText. That span is a NoCopySpan, which makes sure it gets dropped when creating a new SpannableStringBuilder from a given CharSequence. TextView.onSaveInstanceState() does a copy of its mText before saving it in the bundle. Prior to KitKat, that copy was done using the SpannableString constructor, instead of SpannableStringBuilder. The SpannableString constructor does not drop NoCopySpan spans. So we end up with a saved state that holds a reference to the textview and therefore the entire view hierarchy &amp; activity context. Fix: https://github.com/android/platform_frameworks_base/commit/af7dcdf35a37d7a7dbaad7d9869c1c91bce2272b . To fix this, you could override TextView.onSaveInstanceState(), and then use reflection to access TextView.SavedState.mText and clear the NoCopySpan spans."</span>;</div><div class="line">            excluded.instanceField(<span class="string">"android.widget.Editor$EasyEditSpanController"</span>, <span class="string">"this$0"</span>).reason(reason);</div><div class="line">            excluded.instanceField(<span class="string">"android.widget.Editor$SpanController"</span>, <span class="string">"this$0"</span>).reason(reason);</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后调用了buildAndInstall()方法，创建了一个RefWatcher对象并返回了，这个对象用于检测是否有对象未被回收导致内存泄漏。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">* Creates a &#123;<span class="doctag">@link</span> RefWatcher&#125; instance and starts watching activity references (on ICS+).</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> RefWatcher <span class="title">buildAndInstall</span><span class="params">()</span> </span>&#123;</div><div class="line">    RefWatcher refWatcher = build();</div><div class="line">    <span class="keyword">if</span> (refWatcher != DISABLED) &#123;</div><div class="line">        LeakCanary.enableDisplayLeakActivity(context);</div><div class="line">        ActivityRefWatcher.install((Application) context, refWatcher);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> refWatcher;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因为分析泄漏信息是在另一个进程，如果判断出当前Application启动是在分析泄漏信息的进程中，就返回DISABLED，不去执行后续的初始化操作。如果发现是在应用主进程中，就会进行一些初始化操作。
LeakCanary.enableDisplayLeakActivity(context);这个是调用PackageManager将DisplayLeakActivity设置为可用。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">enableDisplayLeakActivity</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">  LeakCanaryInternals.setEnabledBlocking(context, DisplayLeakActivity.class, <span class="keyword">true</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setEnabledBlocking</span><span class="params">(Context appContext, Class&lt;?&gt; componentClass,</span></span></div><div class="line">    <span class="keyword">boolean</span> enabled) &#123;</div><div class="line">  ComponentName component = <span class="keyword">new</span> ComponentName(appContext, componentClass);</div><div class="line">  PackageManager packageManager = appContext.getPackageManager();</div><div class="line">  <span class="keyword">int</span> newState = enabled ? COMPONENT_ENABLED_STATE_ENABLED : COMPONENT_ENABLED_STATE_DISABLED;</div><div class="line">  <span class="comment">// Blocks on IPC.</span></div><div class="line">  packageManager.setComponentEnabledSetting(component, newState, DONT_KILL_APP);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从配置文件中可以看见LeakCanary的这几个服务都是在新的进程中运行的，DisplayLeakActivity默认是不可用android:enabled=“false”，这样才能在一开始未存在内存泄漏时候，隐藏LeakCanary图标的。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">&lt;application&gt;</div><div class="line">    &lt;service</div><div class="line">        android:name=".internal.HeapAnalyzerService"</div><div class="line">        android:process=":leakcanary"</div><div class="line">        android:enabled="false"/&gt;</div><div class="line">    &lt;service</div><div class="line">        android:name=".DisplayLeakService"</div><div class="line">        android:process=":leakcanary"</div><div class="line">        android:enabled="false"/&gt;</div><div class="line">    &lt;activity</div><div class="line">        android:theme="@style/leak_canary_LeakCanary.Base"</div><div class="line">        android:name=".internal.DisplayLeakActivity"</div><div class="line">        android:process=":leakcanary"</div><div class="line">        android:enabled="false"</div><div class="line">        android:label="@string/leak_canary_display_activity_label"</div><div class="line">        android:icon="@drawable/leak_canary_icon"</div><div class="line">        android:taskAffinity="com.squareup.leakcanary.$&#123;applicationId&#125;"&gt;</div><div class="line">      &lt;intent-filter&gt;</div><div class="line">        &lt;action android:name="android.intent.action.MAIN"/&gt;</div><div class="line">        &lt;category android:name="android.intent.category.LAUNCHER"/&gt;</div><div class="line">      &lt;/intent-filter&gt;</div><div class="line">    &lt;/activity&gt;</div><div class="line">    &lt;activity</div><div class="line">        android:theme="@style/leak_canary_Theme.Transparent"</div><div class="line">        android:name=".internal.RequestStoragePermissionActivity"</div><div class="line">        android:process=":leakcanary"</div><div class="line">        android:taskAffinity="com.squareup.leakcanary.$&#123;applicationId&#125;"</div><div class="line">        android:enabled="false"</div><div class="line">        android:excludeFromRecents="true"</div><div class="line">        android:icon="@drawable/leak_canary_icon"</div><div class="line">        android:label="@string/leak_canary_storage_permission_activity_label"/&gt;</div><div class="line">&lt;/application&gt;</div><div class="line"></div><div class="line">``` </div><div class="line"></div><div class="line">紧接着执行了ActivityRefWatcher.install((Application) context, refWatcher);，这里将实例化的RefWatcher当做入参传入，同时对Activity的生命周期进行了监听。</div><div class="line">```java </div><div class="line">public static void install(Application application, RefWatcher refWatcher) &#123;</div><div class="line">    (new ActivityRefWatcher(application, refWatcher)).watchActivities();</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void watchActivities() &#123;</div><div class="line">    // Make sure you don't get installed twice.</div><div class="line">    stopWatchingActivities();</div><div class="line">    application.registerActivityLifecycleCallbacks(lifecycleCallbacks);</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void stopWatchingActivities() &#123;</div><div class="line">    application.unregisterActivityLifecycleCallbacks(lifecycleCallbacks);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void onActivityDestroyed(Activity activity) &#123;</div><div class="line">    this.refWatcher.watch(activity);</div><div class="line">&#125;</div><div class="line"></div><div class="line">private final ActivityLifecycleCallbacks lifecycleCallbacks = new ActivityLifecycleCallbacks() &#123;</div><div class="line">    public void onActivityCreated(Activity activity, Bundle savedInstanceState) &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onActivityStarted(Activity activity) &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onActivityResumed(Activity activity) &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onActivityPaused(Activity activity) &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onActivityStopped(Activity activity) &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onActivitySaveInstanceState(Activity activity, Bundle outState) &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void onActivityDestroyed(Activity activity) &#123;</div><div class="line">        ActivityRefWatcher.this.onActivityDestroyed(activity);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>可以看到为了保证不初始化两次监听，先移除了一次，然后再次添加了监听。每次当Activity执行完onDestroy生命周期，LeakCanary就会获取到这个Activity，然后对它进行分析，查看是否存在内存泄漏。
RefWatcher类中有一些成员变量，解释一下它们的作用。
watchExecutor 确保分析任务操作是在主线程进行的，同时默认延迟5秒执行分析任务，留时间给系统GC。
debuggerControl debug控制中心。
gcTrigger 内部调用Runtime.getRuntime().gc()，手动触发系统GC。
heapDumper 用于创建.hprof文件，用于储存heap堆的快照，可以获知程序的哪些部分正在使用大部分的内存。
heapDumpListener 分析结果完成后，会告诉这个监听者。
excludedRefs 白名单，分析内存泄漏忽略的名单。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">RefWatcher</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RefWatcher DISABLED = (<span class="keyword">new</span> RefWatcherBuilder()).build();</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> WatchExecutor watchExecutor;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DebuggerControl debuggerControl;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> GcTrigger gcTrigger;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HeapDumper heapDumper;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;String&gt; retainedKeys;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ReferenceQueue&lt;Object&gt; queue;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Listener heapdumpListener;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ExcludedRefs excludedRefs;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="判断是否存在内存泄漏"><a class="header-anchor" href="#判断是否存在内存泄漏">¶</a>判断是否存在内存泄漏</h4>
<p>从上面Activity生命周期监听回调可以看见，每次当Activity执行完onDestroy生命周期，会调用RefWatcher去分析是否存在内存泄漏。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">* Identical to &#123;<span class="doctag">@link</span> #watch(Object, String)&#125; with an empty string reference name.</div><div class="line">*</div><div class="line">* <span class="doctag">@see</span> #watch(Object, String)</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">watch</span><span class="params">(Object watchedReference)</span> </span>&#123;</div><div class="line">    watch(watchedReference, <span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* Watches the provided references and checks if it can be GCed. This method is non blocking,</div><div class="line">* the check is done on the &#123;<span class="doctag">@link</span> WatchExecutor&#125; this &#123;<span class="doctag">@link</span> RefWatcher&#125; has been constructed</div><div class="line">* with.</div><div class="line">*</div><div class="line">* <span class="doctag">@param</span> referenceName An logical identifier for the watched object.</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">watch</span><span class="params">(Object watchedReference, String referenceName)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == DISABLED) &#123;</div><div class="line">      <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    checkNotNull(watchedReference, <span class="string">"watchedReference"</span>);</div><div class="line">    checkNotNull(referenceName, <span class="string">"referenceName"</span>);</div><div class="line">    <span class="keyword">final</span> <span class="keyword">long</span> watchStartNanoTime = System.nanoTime();</div><div class="line">    String key = UUID.randomUUID().toString();</div><div class="line">    retainedKeys.add(key);</div><div class="line">    <span class="keyword">final</span> KeyedWeakReference reference =</div><div class="line">        <span class="keyword">new</span> KeyedWeakReference(watchedReference, key, referenceName, queue);</div><div class="line"></div><div class="line">    ensureGoneAsync(watchStartNanoTime, reference);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>checkNotNull()方法可以不用管，用来判断对象是否为null。在这里声明了一个弱引用，将Activity放入，然后调用了ensureGoneAsync()方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureGoneAsync</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> watchStartNanoTime, <span class="keyword">final</span> KeyedWeakReference reference)</span> </span>&#123;</div><div class="line">    watchExecutor.execute(<span class="keyword">new</span> Retryable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="keyword">public</span> Retryable.<span class="function">Result <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> ensureGone(reference, watchStartNanoTime);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>先生成一个随机数用作key放在retainedKeys容器里面，用来区分待分析对象是否被回收，然后使用watchExecutor去调度分析任务，主要有两点，一保证分析是在主线程进行，二延迟五秒分析内存泄漏，给系统GC时间。这部分有兴趣可以深入去看一下，与分析的主流程关系不大，我们接下继续看。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">Retryable.<span class="function">Result <span class="title">ensureGone</span><span class="params">(<span class="keyword">final</span> KeyedWeakReference reference, <span class="keyword">final</span> <span class="keyword">long</span> watchStartNanoTime)</span> </span>&#123;</div><div class="line">    <span class="keyword">long</span> gcStartNanoTime = System.nanoTime();</div><div class="line">    <span class="keyword">long</span> watchDurationMs = NANOSECONDS.toMillis(gcStartNanoTime - watchStartNanoTime);</div><div class="line"></div><div class="line">    removeWeaklyReachableReferences();</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (debuggerControl.isDebuggerAttached()) &#123;</div><div class="line">      <span class="comment">// The debugger can create false leaks.</span></div><div class="line">      <span class="keyword">return</span> RETRY;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (gone(reference)) &#123;</div><div class="line">      <span class="keyword">return</span> DONE;</div><div class="line">    &#125;</div><div class="line">    gcTrigger.runGc();</div><div class="line">    removeWeaklyReachableReferences();</div><div class="line">    <span class="keyword">if</span> (!gone(reference)) &#123;</div><div class="line">        <span class="keyword">long</span> startDumpHeap = System.nanoTime();</div><div class="line">        <span class="keyword">long</span> gcDurationMs = NANOSECONDS.toMillis(startDumpHeap - gcStartNanoTime);</div><div class="line"></div><div class="line">        File heapDumpFile = heapDumper.dumpHeap();</div><div class="line">        <span class="keyword">if</span> (heapDumpFile == RETRY_LATER) &#123;</div><div class="line">            <span class="comment">// Could not dump the heap.</span></div><div class="line">            <span class="keyword">return</span> RETRY;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">long</span> heapDumpDurationMs = NANOSECONDS.toMillis(System.nanoTime() - startDumpHeap);</div><div class="line">        heapdumpListener.analyze(</div><div class="line">            <span class="keyword">new</span> HeapDump(heapDumpFile, reference.key, reference.name, excludedRefs, watchDurationMs,</div><div class="line">            gcDurationMs, heapDumpDurationMs));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> DONE;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">removeWeaklyReachableReferences</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// WeakReferences are enqueued as soon as the object to which they point to becomes weakly</span></div><div class="line">    <span class="comment">// reachable. This is before finalization or garbage collection has actually happened.</span></div><div class="line">    KeyedWeakReference ref;</div><div class="line">    <span class="keyword">while</span> ((ref = (KeyedWeakReference) queue.poll()) != <span class="keyword">null</span>) &#123;</div><div class="line">        retainedKeys.remove(ref.key);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">gone</span><span class="params">(KeyedWeakReference reference)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> !<span class="keyword">this</span>.retainedKeys.contains(reference.key);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在这里首先执行removeWeaklyReachableReferences()尝试着从弱引用的队列中获取待分析对象，如果不为空，那么说明已经被系统回收了，就将retainedKeys中对应的key去掉。如果被系统回收了，直接就返回DONE；如果没有被系统回收，可能存在内存泄漏，为了保证结果的准确性，调用gcTrigger.runGc();，手动触发系统GC，然后再尝试移除待分析对象，如果还存在，说明存在内存泄漏。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runGc</span><span class="params">()</span> </span>&#123;</div><div class="line">    Runtime.getRuntime().gc();</div><div class="line">    <span class="keyword">this</span>.enqueueReferences();</div><div class="line">    System.runFinalization();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">enqueueReferences</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Thread.sleep(<span class="number">100L</span>);</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException var2) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>手动触发系统GC后，enqueueReference()方法通过沉睡100毫秒给系统GC时间，System.runFinalization()是强制调用已经失去引用的对象的finalize方法。
确定有内存泄漏后，调用heapDumper.dumpHeap()生成.hprof文件目录，然后回调heapdumpListener监听，这个监听者具体实现是ServiceHeapDumpListener类，会回调到analyze()方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">analyze</span><span class="params">(HeapDump heapDump)</span> </span>&#123;</div><div class="line">    Preconditions.checkNotNull(heapDump, <span class="string">"heapDump"</span>);</div><div class="line">    HeapAnalyzerService.runAnalysis(<span class="keyword">this</span>.context, heapDump, <span class="keyword">this</span>.listenerServiceClass);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>HeapDump是个model类，里面用于储存一些分析类强引用路径的需要的信息。HeapAnalyzerService.runAnalysis方法是发送了一个Intent，启动了HeapAnalyzerService服务，这个服务是IntentService。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">runAnalysis</span><span class="params">(Context context, HeapDump heapDump, Class&lt;? extends AbstractAnalysisResultService&gt; listenerServiceClass)</span></span>&#123;</div><div class="line">    Intent intent = <span class="keyword">new</span> Intent(context, HeapAnalyzerService.class);</div><div class="line">    intent.putExtra(<span class="string">"listener_class_extra"</span>, listenerServiceClass.getName());</div><div class="line">    intent.putExtra(<span class="string">"heapdump_extra"</span>, heapDump);</div><div class="line">    context.startService(intent);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>启动Service后，会在onHandleIntent分析，找到内存泄漏对象的引用关系。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onHandleIntent</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span>(intent == <span class="keyword">null</span>) &#123;</div><div class="line">        CanaryLog.d(<span class="string">"HeapAnalyzerService received a null intent, ignoring."</span>, <span class="keyword">new</span> Object[<span class="number">0</span>]);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        String listenerClassName = intent.getStringExtra(<span class="string">"listener_class_extra"</span>);</div><div class="line">        HeapDump heapDump = (HeapDump)intent.getSerializableExtra(<span class="string">"heapdump_extra"</span>);</div><div class="line">        HeapAnalyzer heapAnalyzer = <span class="keyword">new</span> HeapAnalyzer(heapDump.excludedRefs);</div><div class="line">        AnalysisResult result = heapAnalyzer.checkForLeak(heapDump.heapDumpFile, heapDump.referenceKey);</div><div class="line">        AbstractAnalysisResultService.sendResultToListener(<span class="keyword">this</span>, listenerClassName, heapDump, result);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="找到引用关系"><a class="header-anchor" href="#找到引用关系">¶</a>找到引用关系</h4>
<p>启动分析泄漏的服务后，会实例化一个HeapAnalyzer对象，然后调用它的checkForLeak()方法来分析最终得到结果。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> AnalysisResult <span class="title">checkForLeak</span><span class="params">(File heapDumpFile, String referenceKey)</span> </span>&#123;</div><div class="line">    <span class="keyword">long</span> analysisStartNanoTime = System.nanoTime();</div><div class="line">    <span class="keyword">if</span>(!heapDumpFile.exists()) &#123;</div><div class="line">        IllegalArgumentException e1 = <span class="keyword">new</span> IllegalArgumentException(<span class="string">"File does not exist: "</span> + heapDumpFile);</div><div class="line">        <span class="keyword">return</span> AnalysisResult.failure(e1, <span class="keyword">this</span>.since(analysisStartNanoTime));</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            MemoryMappedFileBuffer e = <span class="keyword">new</span> MemoryMappedFileBuffer(heapDumpFile);</div><div class="line">            HprofParser parser = <span class="keyword">new</span> HprofParser(e);</div><div class="line">            Snapshot snapshot = parser.parse();</div><div class="line">            <span class="keyword">this</span>.deduplicateGcRoots(snapshot);</div><div class="line">            Instance leakingRef = <span class="keyword">this</span>.findLeakingReference(referenceKey, snapshot);</div><div class="line">            <span class="keyword">return</span> leakingRef == <span class="keyword">null</span>?AnalysisResult.noLeak(<span class="keyword">this</span>.since(analysisStartNanoTime)):<span class="keyword">this</span>.findLeakTrace(analysisStartNanoTime, snapshot, leakingRef);</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable var9) &#123;</div><div class="line">            <span class="keyword">return</span> AnalysisResult.failure(var9, <span class="keyword">this</span>.since(analysisStartNanoTime));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里用到了Square的另一个库haha，哈哈哈哈哈，名字真的就是叫这个，开源地址：<a href="https://github.com/square/haha%E3%80%82" target="_blank" rel="external">https://github.com/square/haha。</a>
首先用HprofParser类获取到内存中的heap堆快照，然后对调用deduplicateGcRoots()对快照做了去重处理，去除一些重复的强引用关系。findLeakingReference()方法就是拿到待分析的类，去快照里面找引用关系，并将结果返回。
HeapAnalyzerService服务拿到分析结果后，调用了AbstractAnalysisResultService.sendResultToListener()方法，这个方法启动了另一个服务。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendResultToListener</span><span class="params">(Context context, String listenerServiceClassName, HeapDump heapDump, AnalysisResult result)</span> </span>&#123;</div><div class="line">    Class listenerServiceClass;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        listenerServiceClass = Class.forName(listenerServiceClassName);</div><div class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException var6) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(var6);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Intent intent = <span class="keyword">new</span> Intent(context, listenerServiceClass);</div><div class="line">    intent.putExtra(<span class="string">"heap_dump_extra"</span>, heapDump);</div><div class="line">    intent.putExtra(<span class="string">"result_extra"</span>, result);</div><div class="line">    context.startService(intent);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>listenerServiceClassName就是开始LeakCanary.install方法传入的DisplayLeakService类，它本身也是个IntentService服务。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">onHandleIntent</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">    HeapDump heapDump = (HeapDump)intent.getSerializableExtra(<span class="string">"heap_dump_extra"</span>);</div><div class="line">    AnalysisResult result = (AnalysisResult)intent.getSerializableExtra(<span class="string">"result_extra"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">this</span>.onHeapAnalyzed(heapDump, result);</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">        heapDump.heapDumpFile.delete();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>服务启动后，会调用自身的onHeapAnalyzed方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">onHeapAnalyzed</span><span class="params">(HeapDump heapDump, AnalysisResult result)</span> </span>&#123;</div><div class="line">    String leakInfo = LeakCanary.leakInfo(<span class="keyword">this</span>, heapDump, result, <span class="keyword">true</span>);</div><div class="line">    CanaryLog.d(<span class="string">"%s"</span>, <span class="keyword">new</span> Object[]&#123;leakInfo&#125;);</div><div class="line">    <span class="keyword">boolean</span> resultSaved = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">boolean</span> shouldSaveResult = result.leakFound || result.failure != <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">if</span>(shouldSaveResult) &#123;</div><div class="line">        heapDump = <span class="keyword">this</span>.renameHeapdump(heapDump);</div><div class="line">        resultSaved = <span class="keyword">this</span>.saveResult(heapDump, result);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    PendingIntent pendingIntent;</div><div class="line">    String contentTitle;</div><div class="line">    String contentText;</div><div class="line"></div><div class="line">    <span class="comment">// 设置消息通知的 pendingIntent/contentTitle/contentText</span></div><div class="line">    ...</div><div class="line"></div><div class="line">    <span class="keyword">int</span> notificationId1 = (<span class="keyword">int</span>)(SystemClock.uptimeMillis() / <span class="number">1000L</span>);</div><div class="line">    LeakCanaryInternals.showNotification(<span class="keyword">this</span>, contentTitle, contentText, pendingIntent, notificationId1);</div><div class="line">    <span class="keyword">this</span>.afterDefaultHandling(heapDump, result, leakInfo);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在这个方法中对判断是否需要将内存泄漏信息存到本地，如果需要就存到本地，然后设置消息通知的基本信息，通过LeakCanaryInternals.showNotification方法调用系统自身的通知栏通知，告诉用户应用有内存泄漏。
至此所有LeakCanary的检测过程通过源码的形式都梳理了一遍。</p>
<h3 id="总结"><a class="header-anchor" href="#总结">¶</a>总结</h3>
<p>LeakCanary对于内存泄漏的检测非常有效，但也并不是所有的内存泄漏都能检测出来。
无法检测出Service中的内存泄漏问题
如果最底层的MainActivity一直未走onDestroy生命周期(它在Activity栈的最底层)，无法检测出它的调用栈的内存泄漏。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;使用&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#使用&quot;&gt;¶&lt;/a&gt;使用&lt;/h3&gt;
&lt;p&gt;LeakCanary是Square为Android应用提供的一个监测内存泄露的工具，源码地址：&lt;a href=&quot;https://github.com/square/leakcanary%E3%80%82&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/square/leakcanary。&lt;/a&gt;
在gradle文件中引入依赖：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;dependencies &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  debugImplementation &lt;span class=&quot;string&quot;&gt;&#39;com.squareup.leakcanary:leakcanary-android:1.6.1&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  releaseImplementation &lt;span class=&quot;string&quot;&gt;&#39;com.squareup.leakcanary:leakcanary-android-no-op:1.6.1&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Optional, if you use support library fragments:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  debugImplementation &lt;span class=&quot;string&quot;&gt;&#39;com.squareup.leakcanary:leakcanary-support-fragment:1.6.1&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="第三方框架" scheme="http://yoursite.com/categories/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="LeakCanary" scheme="http://yoursite.com/tags/LeakCanary/"/>
    
      <category term="内存泄露" scheme="http://yoursite.com/tags/%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>适配器模式</title>
    <link href="http://yoursite.com/2018/06/12/java%E5%9F%BA%E7%A1%80/adapter%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/06/12/java基础/adapter设计模式/</id>
    <published>2018-06-12T04:18:15.000Z</published>
    <updated>2018-08-15T06:45:28.795Z</updated>
    
    <content type="html"><![CDATA[<h3 id="适配器模式的定义"><a class="header-anchor" href="#适配器模式的定义">¶</a>适配器模式的定义</h3>
<p>将一个接口转换成客户希望的另一个接口，适配器模式使接口不兼容的那些类可以一起工作。另外也称作包装器（Wrapper）</p>
<a id="more"></a>
<h3 id="三个角色"><a class="header-anchor" href="#三个角色">¶</a>三个角色</h3>
<p>Adapter(适配器接口):即目标角色，定义把其他类转换为何种接口，也就是我们期望的接口。</p>
<p>Adaptee(被适配角色):即源角色，一般是已存在的类，需要适配新的接口。</p>
<p>ConcreteAdapter(具体适配器):实现适配器接口，把源角色接口转换为目标角色期望的接口。</p>
<h3 id="对象适配器具体实现"><a class="header-anchor" href="#对象适配器具体实现">¶</a>对象适配器具体实现</h3>
<p>引用网上的一个例子：笔记本电脑电源一般用的都是5V电压，但是家用电是220V，我们要让笔记本充上电，最好的办法应该是通过一个工具把220V的电压转换成5V，这个工具就是适配器</p>
<h4 id="创建适配器接口"><a class="header-anchor" href="#创建适配器接口">¶</a>创建适配器接口</h4>
<p>现在我们需要定义一个220V转换成5V的接口：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Adapter</span> </span>&#123;<span class="comment">//适配器类</span></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">convert5v</span><span class="params">()</span></span>;<span class="comment">//装换成5V</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="创建被适配角色"><a class="header-anchor" href="#创建被适配角色">¶</a>创建被适配角色</h4>
<p>被适配角色，一般是已存在的类，需要适配新的接口。生活中的220V电源无处不在：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Electric</span> </span>&#123;<span class="comment">// 电源</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">output220v</span><span class="params">()</span> </span>&#123;<span class="comment">//输出220V</span></div><div class="line">        <span class="keyword">return</span> <span class="number">220</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="创建具体适配器"><a class="header-anchor" href="#创建具体适配器">¶</a>创建具体适配器</h4>
<p>我们需要一个具体适配器，这个适配器就是变压器，能够将220V转为5V输出：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PhoneAdapter</span> <span class="keyword">implements</span> <span class="title">Adapter</span> </span>&#123;<span class="comment">//手机适配器类</span></div><div class="line">    <span class="keyword">private</span> Electric mElectric;<span class="comment">//适配器持有源目标对象</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PhoneAdapter</span><span class="params">(Electric electric)</span> </span>&#123;<span class="comment">//通过构造方法传入对象</span></div><div class="line">        mElectric = electric;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">convert5v</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"适配器开始工作："</span>);</div><div class="line">        System.out.println(<span class="string">"输入电压："</span> + mElectric.output220v());</div><div class="line">        System.out.println(<span class="string">"输出电压："</span> + <span class="number">5</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">5</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="测试"><a class="header-anchor" href="#测试">¶</a>测试</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</div><div class="line">    Electric electric = <span class="keyword">new</span> Electric();</div><div class="line">    System.out.println(<span class="string">"默认电压："</span> + electric.output_220v());</div><div class="line">    Adapter phoneAdapter = <span class="keyword">new</span> PhoneAdapter(electric);<span class="comment">//传递一个对象给适配器</span></div><div class="line">    System.out.println(<span class="string">"适配转换后的电压："</span> + phoneAdapter.convert_5v());</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="输出结果"><a class="header-anchor" href="#输出结果">¶</a>输出结果</h4>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">默认电压：<span class="number">220</span></div><div class="line">适配器开始工作：</div><div class="line">输入电压：<span class="number">220</span></div><div class="line">输出电压：<span class="number">5</span></div><div class="line">适配转换后的电压：<span class="number">5</span></div></pre></td></tr></table></figure>
<h3 id="类适配器的实现"><a class="header-anchor" href="#类适配器的实现">¶</a>类适配器的实现</h3>
<p>创建具体适配器时，使用的是继承而不是组合，其他的和对象适配器一样</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PhoneAdapter</span> <span class="keyword">extends</span> <span class="title">Electric</span> <span class="keyword">implements</span> <span class="title">Adapter</span> </span>&#123;<span class="comment">//通过继承源目标类的方式，不持有源目标对象</span></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">convert_5v</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"适配器开始工作："</span>);</div><div class="line">        System.out.println(<span class="string">"输入电压："</span> + output_220v());</div><div class="line">        System.out.println(<span class="string">"输出电压："</span> + <span class="number">5</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">5</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="对象适配器模式与类适配器模式比较"><a class="header-anchor" href="#对象适配器模式与类适配器模式比较">¶</a>对象适配器模式与类适配器模式比较</h3>
<ul>
<li>类适配器采用了继承的方式来实现;而对象适配器是通过传递对象来实现，这是一种组合的方式。</li>
<li>类适配器由于采用了继承，可以重写父类的方法;对象适配器则不能修改对象本身的方法等。</li>
<li>适配器通过继承都获得了父类的方法，客户端使用时都会把这些方法暴露出去，增加了一定的使用成本;对象适配器则不会。</li>
<li>类适配器只能适配他的父类，这个父类的其他子类都不能适配到;而对象适配器可以适配不同的对象，只要这个对象的类型是同样的。</li>
<li>类适配器不需要额外的引用;对象适配器需要额外的引用来保存对象。</li>
</ul>
<p>总的来说，使用对象适配器比较好。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;适配器模式的定义&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#适配器模式的定义&quot;&gt;¶&lt;/a&gt;适配器模式的定义&lt;/h3&gt;
&lt;p&gt;将一个接口转换成客户希望的另一个接口，适配器模式使接口不兼容的那些类可以一起工作。另外也称作包装器（Wrapper）&lt;/p&gt;
    
    </summary>
    
      <category term="java基础" scheme="http://yoursite.com/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="设计模式" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="适配器模式" scheme="http://yoursite.com/tags/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>建造者模式</title>
    <link href="http://yoursite.com/2018/06/11/java%E5%9F%BA%E7%A1%80/Builder%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/06/11/java基础/Builder设计模式/</id>
    <published>2018-06-11T04:18:15.000Z</published>
    <updated>2018-08-15T05:53:49.842Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a class="header-anchor" href="#概念">¶</a>概念</h3>
<p>建造者模式是较为复杂的创建型模式，它将客户端与包含多个组成部分的复杂对象的创建过程分离，使得同样的构建过程可以创建不同的表示。</p>
<a id="more"></a>
<p>建造者模式包含以下几个核心模块</p>
<h4 id="builder-抽象建造者"><a class="header-anchor" href="#builder-抽象建造者">¶</a>Builder（抽象建造者）</h4>
<p>它为创建一个产品对象的各个部件指定抽象接口，在该接口中一般声明两类方法，一类方法是buildXXX()，它们用于创建复杂对象的各个部件；另一类方法是getXXX()，它们用于返回复杂对象。Builder既可以是抽象类，也可以是接口。</p>
<h4 id="concretebuilder-具体建造者"><a class="header-anchor" href="#concretebuilder-具体建造者">¶</a>ConcreteBuilder（具体建造者）</h4>
<p>它实现了Builder接口，实现各个部件的具体构造和装配方法，定义并明确它所创建的复杂对象，也可以提供一个方法返回创建好的复杂产品对象。</p>
<h4 id="product-产品角色"><a class="header-anchor" href="#product-产品角色">¶</a>Product（产品角色）</h4>
<p>它是被构建的复杂对象，包含多个组成部件，具体建造者ConcreteBuilder创建该产品的内部表示并定义它的装配过程。</p>
<h4 id="director-指挥者"><a class="header-anchor" href="#director-指挥者">¶</a>Director（指挥者）</h4>
<p>指挥者又称为导演类，它负责安排复杂对象的建造次序，指挥者与抽象建造者之间存在关联关系，可以在其construct()建造方法中调用建造者对象的部件构造与装配方法，完成复杂对象的建造。客户端一般只需要与指挥者进行交互，在客户端确定具体建造者的类型，并实例化具体建造者对象，然后通过指挥者类的构造函数或者Setter方法将该对象传入指挥者类中。</p>
<h3 id="使用场景"><a class="header-anchor" href="#使用场景">¶</a>使用场景</h3>
<p>当构造一个对象需要很多的参数，并且参数的个数或者类型不固定的时候，通过不同的参数组合，可以构建不同的对象，这时候我们就可以使用建造者模式。</p>
<p>下面是代码示例</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">*抽象建造者</div><div class="line">*/</div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</div><div class="line">    <span class="keyword">protected</span> Product product = <span class="keyword">new</span> Product();</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">buildPartA</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">buildPartB</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">buildPartC</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">getProduct</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> product;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">*具体建造者</div><div class="line">*/</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConcreteBuilder</span> <span class="keyword">extends</span> <span class="title">Builder</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buildPartA</span><span class="params">()</span> </span>&#123;</div><div class="line">        product.setPartA(<span class="string">"PartA"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buildPartB</span><span class="params">()</span> </span>&#123;</div><div class="line">        product.setPartB(<span class="string">"PartB"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buildPartC</span><span class="params">()</span> </span>&#123;</div><div class="line">        product.setPartC(<span class="string">"PartC"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">*产品角色</div><div class="line">*/</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String partA;</div><div class="line">    <span class="keyword">private</span> String partB;</div><div class="line">    <span class="keyword">private</span> String partC;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Product&#123;"</span> +</div><div class="line">                <span class="string">"partA='"</span> + partA + <span class="string">'\''</span> +</div><div class="line">                <span class="string">", partB='"</span> + partB + <span class="string">'\''</span> +</div><div class="line">                <span class="string">", partC='"</span> + partC + <span class="string">'\''</span> +</div><div class="line">                <span class="string">'&#125;'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPartA</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> partA;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPartA</span><span class="params">(String partA)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.partA = partA;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPartB</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> partB;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPartB</span><span class="params">(String partB)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.partB = partB;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPartC</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> partC;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPartC</span><span class="params">(String partC)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.partC = partC;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">*指挥者</div><div class="line">*/</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Director</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Builder builder = <span class="keyword">new</span> ConcreteBuilder();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">productFirst</span><span class="params">()</span> </span>&#123;</div><div class="line">        builder.buildPartA();</div><div class="line">        builder.buildPartC();</div><div class="line">        <span class="keyword">return</span> builder.getProduct();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">productSecond</span><span class="params">()</span> </span>&#123;</div><div class="line">        builder.buildPartB();</div><div class="line">        builder.buildPartC();</div><div class="line">        <span class="keyword">return</span> builder.getProduct();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Director director = <span class="keyword">new</span> Director();</div><div class="line">        Product productFirst = director.productFirst();</div><div class="line">        Product productSecond = director.productSecond();</div><div class="line">        productFirst.show();</div><div class="line">        productSecond.show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从代码中可以看出，我们构建了produtFirst和productSecond两种产品，是通过partA，partB和partC不同的组合实现的。</p>
<h3 id="builder模式在android中的实际运用：alertdialog"><a class="header-anchor" href="#builder模式在android中的实际运用：alertdialog">¶</a>builder模式在Android中的实际运用：AlertDialog</h3>
<p>AlertDialog的使用</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showDialog</span><span class="params">(Context context)</span> </span>&#123;  </div><div class="line">    AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(context);  </div><div class="line">    builder.setIcon(R.drawable.icon);  </div><div class="line">    builder.setTitle(<span class="string">"Title"</span>);  </div><div class="line">    builder.setMessage(<span class="string">"Message"</span>);  </div><div class="line">    builder.setPositiveButton(<span class="string">"Button1"</span>,  </div><div class="line">            <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;  </div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> whichButton)</span> </span>&#123;  </div><div class="line">                    setTitle(<span class="string">"点击了对话框上的Button1"</span>);  </div><div class="line">                &#125;  </div><div class="line">            &#125;);  </div><div class="line">    builder.setNeutralButton(<span class="string">"Button2"</span>,  </div><div class="line">            <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;  </div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> whichButton)</span> </span>&#123;  </div><div class="line">                    setTitle(<span class="string">"点击了对话框上的Button2"</span>);  </div><div class="line">                &#125;  </div><div class="line">            &#125;);  </div><div class="line">    builder.setNegativeButton(<span class="string">"Button3"</span>,  </div><div class="line">            <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;  </div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> whichButton)</span> </span>&#123;  </div><div class="line">                    setTitle(<span class="string">"点击了对话框上的Button3"</span>);  </div><div class="line">                &#125;  </div><div class="line">            &#125;);  </div><div class="line">    builder.create().show();  <span class="comment">// 构建AlertDialog， 并且显示</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>AlertDialog的源码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// AlertDialog</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AlertDialog</span> <span class="keyword">extends</span> <span class="title">Dialog</span> <span class="keyword">implements</span> <span class="title">DialogInterface</span> </span>&#123;</div><div class="line">    <span class="comment">// Controller, 接受Builder成员变量P中的各个参数</span></div><div class="line">    <span class="keyword">private</span> AlertController mAlert;</div><div class="line"> </div><div class="line">    <span class="comment">// 构造函数</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">AlertDialog</span><span class="params">(Context context, <span class="keyword">int</span> theme)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, theme, <span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="comment">// 4 : 构造AlertDialog</span></div><div class="line">    AlertDialog(Context context, <span class="keyword">int</span> theme, <span class="keyword">boolean</span> createContextWrapper) &#123;</div><div class="line">        <span class="keyword">super</span>(context, resolveDialogTheme(context, theme), createContextWrapper);</div><div class="line">        mWindow.alwaysReadCloseOnTouchAttr();</div><div class="line">        mAlert = <span class="keyword">new</span> AlertController(getContext(), <span class="keyword">this</span>, getWindow());</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="comment">// 实际上调用的是mAlert的setTitle方法</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(CharSequence title)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.setTitle(title);</div><div class="line">        mAlert.setTitle(title);</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="comment">// 实际上调用的是mAlert的setCustomTitle方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCustomTitle</span><span class="params">(View customTitleView)</span> </span>&#123;</div><div class="line">        mAlert.setCustomTitle(customTitleView);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(CharSequence message)</span> </span>&#123;</div><div class="line">        mAlert.setMessage(message);</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="comment">// AlertDialog其他的代码省略</span></div><div class="line">    </div><div class="line">    <span class="comment">// ************  Builder为AlertDialog的内部类   *******************</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</div><div class="line">        <span class="comment">// 1 : 存储AlertDialog的各个参数, 例如title, message, icon等.</span></div><div class="line">        <span class="keyword">private</span> <span class="keyword">final</span> AlertController.AlertParams P;</div><div class="line">        <span class="comment">// 属性省略</span></div><div class="line">        </div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Constructor using a context for this builder and the &#123;<span class="doctag">@link</span> AlertDialog&#125; it creates.</div><div class="line">         */</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">            <span class="keyword">this</span>(context, resolveDialogTheme(context, <span class="number">0</span>));</div><div class="line">        &#125;</div><div class="line"> </div><div class="line"> </div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(Context context, <span class="keyword">int</span> theme)</span> </span>&#123;</div><div class="line">            P = <span class="keyword">new</span> AlertController.AlertParams(<span class="keyword">new</span> ContextThemeWrapper(</div><div class="line">                    context, resolveDialogTheme(context, theme)));</div><div class="line">            mTheme = theme;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="comment">// Builder的其他代码省略 ......</span></div><div class="line"> </div><div class="line">        <span class="comment">// 2 : 设置各种参数</span></div><div class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setTitle</span><span class="params">(CharSequence title)</span> </span>&#123;</div><div class="line">            P.mTitle = title;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setMessage</span><span class="params">(CharSequence message)</span> </span>&#123;</div><div class="line">            P.mMessage = message;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line"> </div><div class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setIcon</span><span class="params">(<span class="keyword">int</span> iconId)</span> </span>&#123;</div><div class="line">            P.mIconId = iconId;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setPositiveButton</span><span class="params">(CharSequence text, <span class="keyword">final</span> OnClickListener listener)</span> </span>&#123;</div><div class="line">            P.mPositiveButtonText = text;</div><div class="line">            P.mPositiveButtonListener = listener;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setView</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">            P.mView = view;</div><div class="line">            P.mViewSpacingSpecified = <span class="keyword">false</span>;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="comment">// 3 : 构建AlertDialog, 传递参数</span></div><div class="line">        <span class="function"><span class="keyword">public</span> AlertDialog <span class="title">create</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="comment">// 调用new AlertDialog构造对象， 并且将参数传递个体AlertDialog </span></div><div class="line">            <span class="keyword">final</span> AlertDialog dialog = <span class="keyword">new</span> AlertDialog(P.mContext, mTheme, <span class="keyword">false</span>);</div><div class="line">            <span class="comment">// 5 : 将P中的参数应用的dialog中的mAlert对象中</span></div><div class="line">            P.apply(dialog.mAlert);</div><div class="line">            dialog.setCancelable(P.mCancelable);</div><div class="line">            <span class="keyword">if</span> (P.mCancelable) &#123;</div><div class="line">                dialog.setCanceledOnTouchOutside(<span class="keyword">true</span>);</div><div class="line">            &#125;</div><div class="line">            dialog.setOnCancelListener(P.mOnCancelListener);</div><div class="line">            <span class="keyword">if</span> (P.mOnKeyListener != <span class="keyword">null</span>) &#123;</div><div class="line">                dialog.setOnKeyListener(P.mOnKeyListener);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> dialog;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看到，通过Builder来设置AlertDialog中的title, message, button等参数，这些参数都存储在类型为AlertController.AlertParams的成员变量P中，AlertController.AlertParams中包含了与之对应的成员变量。在调用Builder类的create函数时才创建AlertDialog, 并且将Builder成员变量P中保存的参数应用到AlertDialog的mAlert对象中，即P.apply(dialog.mAlert)代码段。我们看看apply函数的实现 :</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">apply</span><span class="params">(AlertController dialog)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mCustomTitleView != <span class="keyword">null</span>) &#123;</div><div class="line">        dialog.setCustomTitle(mCustomTitleView);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (mTitle != <span class="keyword">null</span>) &#123;</div><div class="line">            dialog.setTitle(mTitle);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (mIcon != <span class="keyword">null</span>) &#123;</div><div class="line">            dialog.setIcon(mIcon);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (mIconId &gt;= <span class="number">0</span>) &#123;</div><div class="line">            dialog.setIcon(mIconId);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (mIconAttrId &gt; <span class="number">0</span>) &#123;</div><div class="line">            dialog.setIcon(dialog.getIconAttributeResId(mIconAttrId));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mMessage != <span class="keyword">null</span>) &#123;</div><div class="line">        dialog.setMessage(mMessage);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mPositiveButtonText != <span class="keyword">null</span>) &#123;</div><div class="line">        dialog.setButton(DialogInterface.BUTTON_POSITIVE, mPositiveButtonText,</div><div class="line">                mPositiveButtonListener, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mNegativeButtonText != <span class="keyword">null</span>) &#123;</div><div class="line">        dialog.setButton(DialogInterface.BUTTON_NEGATIVE, mNegativeButtonText,</div><div class="line">                mNegativeButtonListener, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mNeutralButtonText != <span class="keyword">null</span>) &#123;</div><div class="line">        dialog.setButton(DialogInterface.BUTTON_NEUTRAL, mNeutralButtonText,</div><div class="line">                mNeutralButtonListener, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mForceInverseBackground) &#123;</div><div class="line">        dialog.setInverseBackgroundForced(<span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// For a list, the client can either supply an array of items or an</span></div><div class="line">    <span class="comment">// adapter or a cursor</span></div><div class="line">    <span class="keyword">if</span> ((mItems != <span class="keyword">null</span>) || (mCursor != <span class="keyword">null</span>) || (mAdapter != <span class="keyword">null</span>)) &#123;</div><div class="line">        createListView(dialog);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mView != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (mViewSpacingSpecified) &#123;</div><div class="line">            dialog.setView(mView, mViewSpacingLeft, mViewSpacingTop, mViewSpacingRight,</div><div class="line">                    mViewSpacingBottom);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            dialog.setView(mView);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实际上就是把P中的参数挨个的设置到AlertController中， 也就是AlertDialog中的mAlert对象。从AlertDialog的各个setter方法中我们也可以看到，实际上也都是调用了mAlert对应的setter方法。在这里，Builder同时扮演了上文中提到的builder、ConcreteBuilder、Director的角色，简化了Builder模式的设计。</p>
<h3 id="builder模式的优点"><a class="header-anchor" href="#builder模式的优点">¶</a>builder模式的优点</h3>
<h4 id="易于解耦"><a class="header-anchor" href="#易于解耦">¶</a>易于解耦</h4>
<p>将产品本身与产品创建过程进行解耦，可以使用相同的创建过程来得到不同的产品。也就说细节依赖抽象。</p>
<h4 id="易于精确控制对象的创建"><a class="header-anchor" href="#易于精确控制对象的创建">¶</a>易于精确控制对象的创建</h4>
<p>将复杂产品的创建步骤分解在不同的方法中，使得创建过程更加清晰</p>
<h4 id="易于拓展"><a class="header-anchor" href="#易于拓展">¶</a>易于拓展</h4>
<p>增加新的具体建造者无需修改原有类库的代码，易于拓展，符合“开闭原则“。</p>
<h3 id="builder模式的缺点"><a class="header-anchor" href="#builder模式的缺点">¶</a>builder模式的缺点</h3>
<ol>
<li>
<p>建造者模式所创建的产品具有较多的共同点，其组成部分相似，如果产品之间的差异性很大，不适合使用建造者模式，因此其使用范围受到一定的限制</p>
</li>
<li>
<p>如果产品的内部变化复杂，可能会导致需要定义很多具体建造者类来实现这种变化，导致系统变得很庞大，增加系统的理解难度和运行成本。</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概念&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#概念&quot;&gt;¶&lt;/a&gt;概念&lt;/h3&gt;
&lt;p&gt;建造者模式是较为复杂的创建型模式，它将客户端与包含多个组成部分的复杂对象的创建过程分离，使得同样的构建过程可以创建不同的表示。&lt;/p&gt;
    
    </summary>
    
      <category term="java基础" scheme="http://yoursite.com/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="设计模式" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="建造者模式" scheme="http://yoursite.com/tags/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>单例模式的几种写法</title>
    <link href="http://yoursite.com/2018/06/10/java%E5%9F%BA%E7%A1%80/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95/"/>
    <id>http://yoursite.com/2018/06/10/java基础/单例模式的几种写法/</id>
    <published>2018-06-10T04:18:15.000Z</published>
    <updated>2018-08-15T05:32:00.885Z</updated>
    
    <content type="html"><![CDATA[<p>单例模式是平时开发中使用的最多的一种设计模式，虽然简单，但是写法却很多，下面是常见的几种单的写法。</p>
<a id="more"></a>
<h3 id="第一种-懒汉-线程不安全"><a class="header-anchor" href="#第一种-懒汉-线程不安全">¶</a>第一种（懒汉，线程不安全）</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;  </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </div><div class="line">    <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;  </div><div class="line">        instance = <span class="keyword">new</span> Singleton();  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">return</span> instance;  </div><div class="line">     &#125;  </div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>这种写法是线程不安全的，多线程情况下有可能会创建多个实例，不推荐使用。</p>
<h3 id="第二种-懒汉-线程安全"><a class="header-anchor" href="#第二种-懒汉-线程安全">¶</a>第二种（懒汉，线程安全）</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;  </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </div><div class="line">    <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;  </div><div class="line">        instance = <span class="keyword">new</span> Singleton();  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">return</span> instance;  </div><div class="line">    &#125;  </div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>这种写法是第一种的线程安全版，使用synchronized保证了多线程情况下只会有一个实例被创建，但是synchronized是悲观锁，一个线程访问时，会阻塞其他的线程，因此效率比较低。</p>
<h3 id="第三种-饿汉"><a class="header-anchor" href="#第三种-饿汉">¶</a>第三种（饿汉）</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">new</span> Singleton();  </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </div><div class="line">   <span class="keyword">return</span> instance;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>饿汉模式的写法简单，但是在类装载的时候就创建了对象的实例，无法做到延迟创建对象。</p>
<h3 id="第四种-静态内部类"><a class="header-anchor" href="#第四种-静态内部类">¶</a>第四种（静态内部类）</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span> </span>&#123;  </div><div class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();  </div><div class="line">    &#125;  </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </div><div class="line">        <span class="keyword">return</span> SingletonHolder.INSTANCE;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>采用静态内部类的形式，直接用jvm类加载机制处理异步加锁的问题，减小了内存消耗。</p>
<p>这个解决方案被称为Lazy initialization holder class 模式，这个模式综合使用了java的类级内部类和多线程缺省同步锁的知识， 很巧妙的同时实现了延迟加载和线程安全。</p>
<ol>
<li>
<p>相应的基础知识</p>
<ul>
<li>什么是类级内部类？简单点说，类级内部类指的是，有static修饰的成员内部类。如果没有static修饰的成员式内 部类被称为对象级内部类。</li>
<li>类级内部类相当于其外部类的static成分，它的对象与外部类对象间不存在依赖关系，因此 可以直接创建。而对象级内部类的实例，是绑定在外部对象实例中的。</li>
<li>类级内部类中，可以定义静态的方法。在静态方法中只能引用外部类中的静态成员方法或变量。</li>
<li>类级内部类相当于其外部类的成员，只有在第一次被使用的时候才会被装载。</li>
</ul>
</li>
<li>
<p>多线程缺省同步锁的知识： 在多线程开发中，为了解决并发问题，主要是通过使用synchronized来加互斥锁进行同步控制，但是在某些情况下，JVM已经隐含的为您执行了同步，这些情况下就不用自己再来进行同步控制了。 这些情况包括：</p>
<ul>
<li>由静态初始化器（在静态字段上或static{}块中的初始化器）初始化数据时</li>
<li>访问final字段时</li>
<li>在创建线程之前创建对象时</li>
<li>线程可以看见它将要处理的对象时</li>
</ul>
</li>
<li>
<p>解决方案的思路</p>
<ul>
<li>要想很简单的实现线程安全，可以采用静态初始化器的方式，它可以由JVM来保证线程的安全性。比如前面的饿汉式实现方式。但是这样一来，不是会浪费一定的空间吗？因为这种实现方式，会在类装载的时候就初始化对象，不管你需不需要。</li>
<li>如果现在有一种方法能够让类装载的时候不去初始化对象，那不就解决问题了？一种可行的方式就是采用类级内部类，在这个类级内部类里面去创建对象实例。这样一来，只要不使用到这个类级内部类， 那就不会创建对象实例，从而同步实现延迟加载和线程安全。</li>
</ul>
</li>
<li>
<p>补充说明下他是如何体现 懒加载的（Lazy initialization）：</p>
</li>
</ol>
<blockquote>
<p>因为内部静态类是要在有引用了以后才会装载到内存的。所以在你第一次调用getInstance()之前，SingletonHolder是没有被装载进来的，只有在你第一次调用了getInstance()之后，里面涉及到了return SingletonHolder.instance; 产生了对SingletonHolder的引用，内部静态类的实例才会真正装载。这也就是懒加载的意思</p>
</blockquote>
<ol start="5">
<li>关于 JVM来保证线程的安全性 这句话的意思：</li>
</ol>
<blockquote>
<p>利用了classloader的机制来保证初始化instance时只有一个线程，所以也是线程安全的，同时没有性能损耗。</p>
</blockquote>
<h3 id="第五种-枚举"><a class="header-anchor" href="#第五种-枚举">¶</a>第五种（枚举）</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Singleton &#123;  </div><div class="line">    INSTANCE;  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomeThing</span><span class="params">()</span> </span>&#123;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>枚举单例的好处有三个：线程安全，不会因为序列化而产生新的实例，防止反射攻击。由于安卓开发不推荐使用枚举，这种写法虽然好处很多，但是在Android开发中很少见。</p>
<h3 id="第六种-双重校验锁-dcl"><a class="header-anchor" href="#第六种-双重校验锁-dcl">¶</a>第六种（双重校验锁，DCL）</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </div><div class="line">   <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> Singleton singleton;  </div><div class="line">   <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span> </span>&#123;  </div><div class="line">   <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;  </div><div class="line">       <span class="keyword">synchronized</span> (Singleton.class) &#123;  </div><div class="line">       <span class="keyword">if</span> (singleton == <span class="keyword">null</span>) &#123;  </div><div class="line">           singleton = <span class="keyword">new</span> Singleton();  </div><div class="line">       &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">return</span> singleton;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这种写法考虑了线程安全，将对singleton的null判断以及new的部分使用synchronized进行加锁。同时，对singleton对象使用volatile关键字进行限制，保证其对所有线程的可见性，并且禁止对其进行指令重排序优化。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单例模式是平时开发中使用的最多的一种设计模式，虽然简单，但是写法却很多，下面是常见的几种单的写法。&lt;/p&gt;
    
    </summary>
    
      <category term="java基础" scheme="http://yoursite.com/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="单例" scheme="http://yoursite.com/tags/%E5%8D%95%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>PathMeasure在项目中的使用</title>
    <link href="http://yoursite.com/2018/06/10/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6-PathMeasure%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/06/10/自定义控件-PathMeasure的使用/</id>
    <published>2018-06-10T04:18:15.000Z</published>
    <updated>2018-06-26T09:36:11.352Z</updated>
    
    <content type="html"><![CDATA[<h3 id="控件预览"><a class="header-anchor" href="#控件预览">¶</a>控件预览</h3>
<p><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsop2jaj42j20f10hatbw.jpg" alt=""></p>
<a id="more"></a>
<p>上面这个图片是最近项目中要实现的一个效果，圆弧是一个四分之一的半圆，很容易实现；但是黄色圆环部分有一部分是橘色的弧线，并且橘色弧线要和黄色圆环部分完全重合，其实如果通过改变画圆环的角度，也是可以画出橘色部分的弧线的，但是如果黄色的曲线不是圆环，而是贝塞尔曲线或者其他不规则曲线的话，要使得另外一段曲线完全和前面这段曲线某一部分完全重合的话，就需要使用PathMeasure来完成这个操作了。</p>
<h3 id="pathmeasure相关函数"><a class="header-anchor" href="#pathmeasure相关函数">¶</a>PathMeasure相关函数</h3>
<ol>
<li>setPath(Path path,boolean forceClosed)
<ul>
<li>将Path和PathMeasure进行绑定.第一个参数是传入一个Path，代表我们需要进行测量的Path，第二个参数代表是否闭合，如果一段Path不是闭合的，但是forceClosed传true的话，就会按照闭合路径来测量这一段Path，比如计算路径长度就是计算的闭合的长度，但是path本身是没有这么长的。如果本来就是闭合path，这个参数就无所谓了。</li>
</ul>
</li>
<li>getLength()
<ul>
<li>计算Path的长度</li>
</ul>
</li>
<li>getSegment(float startD, float stopD, Path dst, boolean startWithMoveTo)
<ul>
<li>获取一段区间内的path，并生成一个新的对象，用dst来接收；第一个参数是起始长度，第二个参数是终止长度，第四个参数代表是否强制覆盖dst，如果设置为faslse，则每一次调用该方法，dst都会在已有path的基础上添加一段新path，如果设置为true，则dst会重新赋值，之前的path的值就都被覆盖了。</li>
</ul>
</li>
<li>nextContour()
<ul>
<li>nextContour()方法用的比较少，比较大部分情况下都只会有一个Path而不是多个，毕竟这样会增加Path的复杂度，但是如果真有一个Path，包含了多个Path，那么通过nextContour这个方法，就可以进行切换，同时，默认的API，例如getLength，获取的也是当前的这段Path所对应的长度，而不是所有的Path的长度，同时，nextContour获取Path的顺序，与Path的添加顺序是相同的。</li>
</ul>
</li>
<li>getPosTan (float distance, float[] pos, float[] tan)
<ul>
<li>获取某个位置的坐标和正切值，分别赋值给pos和tan。</li>
</ul>
</li>
</ol>
<p>通过上面的几个方法，我们就能完成今天的demo了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CurveView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Paint mPaint;</div><div class="line">    <span class="keyword">private</span> PathMeasure mPathMeasure;</div><div class="line">    <span class="keyword">private</span> Path mPath;</div><div class="line">    <span class="keyword">private</span> Path destPath;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> strokeWidth;</div><div class="line">    <span class="keyword">private</span> Paint orangePaint;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> width;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> height;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] leftTop;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] rightBottom;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] rightTop;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] point1;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] point2;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] point3;</div><div class="line">    <span class="keyword">private</span> Paint pointPaint;</div><div class="line">    <span class="keyword">private</span> Paint jianTouPaint;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] pointCurrent;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] pointTarget;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CurveView</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CurveView</span><span class="params">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CurveView</span><span class="params">(Context context, @Nullable AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        strokeWidth = DensityU.dip2px(getContext(), <span class="number">15</span>);</div><div class="line">        mPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</div><div class="line">        mPaint.setColor(Color.parseColor(<span class="string">"#ffe48a"</span>));</div><div class="line">        mPaint.setStrokeWidth(strokeWidth);</div><div class="line">        mPaint.setStyle(Style.STROKE);</div><div class="line">        mPaint.setStrokeCap(Cap.ROUND);</div><div class="line"></div><div class="line"></div><div class="line">        jianTouPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</div><div class="line">        jianTouPaint.setColor(Color.parseColor(<span class="string">"#ffe48a"</span>));</div><div class="line">        jianTouPaint.setStyle(Style.FILL_AND_STROKE);</div><div class="line">        jianTouPaint.setStrokeWidth(DensityU.dip2px(getContext(), <span class="number">4</span>));</div><div class="line">        jianTouPaint.setStrokeCap(Cap.ROUND);</div><div class="line">        jianTouPaint.setStrokeJoin(Join.ROUND);</div><div class="line"></div><div class="line">        orangePaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</div><div class="line">        orangePaint.setColor(Color.parseColor(<span class="string">"#ff7f00"</span>));</div><div class="line">        orangePaint.setStrokeCap(Cap.ROUND);</div><div class="line">        orangePaint.setStrokeWidth(strokeWidth);</div><div class="line">        orangePaint.setStyle(Style.STROKE);</div><div class="line"></div><div class="line"></div><div class="line">        pointPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</div><div class="line">        pointPaint.setStyle(Style.STROKE);</div><div class="line">        pointPaint.setStrokeWidth(strokeWidth);</div><div class="line">        pointPaint.setStrokeCap(Cap.ROUND);</div><div class="line">        pointPaint.setColor(Color.RED);</div><div class="line">        mPathMeasure = <span class="keyword">new</span> PathMeasure();</div><div class="line">        mPath = <span class="keyword">new</span> Path();</div><div class="line">        destPath = <span class="keyword">new</span> Path();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</div><div class="line">        width = w - DensityU.dip2px(getContext(), <span class="number">36</span>) + strokeWidth / <span class="number">2f</span>;</div><div class="line">        height = h;</div><div class="line"></div><div class="line"></div><div class="line">        leftTop = <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;-(width - strokeWidth / <span class="number">2f</span>), height - width - width + strokeWidth / <span class="number">2f</span>&#125;;</div><div class="line">        rightBottom = <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;width - strokeWidth / <span class="number">2f</span>, height - strokeWidth / <span class="number">2f</span>&#125;;</div><div class="line">        rightTop = <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;rightBottom[<span class="number">0</span>], leftTop[<span class="number">1</span>]&#125;;</div><div class="line">        RectF rectF = <span class="keyword">new</span> RectF(leftTop[<span class="number">0</span>], leftTop[<span class="number">1</span>], rightBottom[<span class="number">0</span>], rightBottom[<span class="number">1</span>]);</div><div class="line">        mPath.addArc(rectF, <span class="number">0</span>, <span class="number">88.4f</span>);</div><div class="line">        mPathMeasure.setPath(mPath, <span class="keyword">false</span>);</div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">float</span> length = mPathMeasure.getLength();</div><div class="line">        point1 = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">2</span>];</div><div class="line">        point2 = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">2</span>];</div><div class="line">        point3 = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">2</span>];</div><div class="line">        pointCurrent = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">2</span>];</div><div class="line">        pointTarget = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">2</span>];</div><div class="line">        <span class="comment">//通过getPosTan方法，获取三个点的坐标，方便后面画小圆点</span></div><div class="line">        mPathMeasure.getPosTan(<span class="number">0</span>, point1, <span class="keyword">null</span>);</div><div class="line">        mPathMeasure.getPosTan(length / <span class="number">9F</span> * <span class="number">2f</span>, point2, <span class="keyword">null</span>);</div><div class="line">        mPathMeasure.getPosTan(length / <span class="number">7F</span> * <span class="number">3f</span>, point3, <span class="keyword">null</span>);</div><div class="line"></div><div class="line">        <span class="keyword">float</span> currentLength = length - DensityU.dip2px(getContext(), <span class="number">50</span>);</div><div class="line">        <span class="keyword">float</span> targetLength = length - DensityU.dip2px(getContext(), <span class="number">150</span>);</div><div class="line">        mPathMeasure.getPosTan(targetLength, pointTarget, <span class="keyword">null</span>);</div><div class="line">        mPathMeasure.getPosTan(currentLength, pointCurrent, <span class="keyword">null</span>);</div><div class="line"></div><div class="line">        <span class="comment">//根据起点和终点位置的长度，生成新的Path.</span></div><div class="line">        mPathMeasure.getSegment(targetLength, currentLength, destPath, <span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</div><div class="line">        setMeasuredDimension(widthSpecSize, (<span class="keyword">int</span>) (widthSpecSize + DensityU.dip2px(getContext(), <span class="number">80</span>)- DensityU.dip2px(getContext(), <span class="number">36</span>) + strokeWidth / <span class="number">2f</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">        canvas.drawPath(mPath, mPaint);</div><div class="line"></div><div class="line"></div><div class="line">        canvas.drawPath(destPath, orangePaint);</div><div class="line"></div><div class="line"></div><div class="line">        Path path = <span class="keyword">new</span> Path();</div><div class="line">        path.moveTo(rightTop[<span class="number">0</span>], height - width + strokeWidth / <span class="number">2f</span> + <span class="number">5</span>);</div><div class="line">        path.lineTo(rightTop[<span class="number">0</span>], height - width + strokeWidth / <span class="number">2f</span> + <span class="number">5</span> - DensityU.dip2px(getContext(), <span class="number">60</span>));</div><div class="line"></div><div class="line"></div><div class="line">        canvas.drawPath(path, mPaint);</div><div class="line">        path.reset();</div><div class="line">        <span class="comment">//绘制箭头</span></div><div class="line">        path.moveTo(rightTop[<span class="number">0</span>], height - width + strokeWidth / <span class="number">2f</span> + <span class="number">8</span> - DensityU.dip2px(getContext(), <span class="number">60</span>));</div><div class="line">        path.lineTo(rightTop[<span class="number">0</span>] - DensityU.dip2px(getContext(), <span class="number">32</span>), height - width + strokeWidth / <span class="number">2f</span> - DensityU.dip2px(getContext(), <span class="number">50</span>));</div><div class="line">        path.lineTo(rightTop[<span class="number">0</span>], height - width + strokeWidth / <span class="number">2f</span> - DensityU.dip2px(getContext(), <span class="number">80</span>));</div><div class="line">        path.lineTo(rightTop[<span class="number">0</span>] + DensityU.dip2px(getContext(), <span class="number">32</span>), height - width + strokeWidth / <span class="number">2f</span> - DensityU.dip2px(getContext(), <span class="number">50</span>));</div><div class="line">        path.close();</div><div class="line">        canvas.drawPath(path, jianTouPaint);</div><div class="line"></div><div class="line"></div><div class="line">        pointPaint.setColor(Color.parseColor(<span class="string">"#FF4D30"</span>));</div><div class="line">        canvas.drawPoint(point1[<span class="number">0</span>], point1[<span class="number">1</span>], pointPaint);</div><div class="line">        pointPaint.setColor(Color.parseColor(<span class="string">"#70be1b"</span>));</div><div class="line">        canvas.drawPoint(point2[<span class="number">0</span>], point2[<span class="number">1</span>], pointPaint);</div><div class="line">        pointPaint.setColor(Color.parseColor(<span class="string">"#68a8f3"</span>));</div><div class="line">        canvas.drawPoint(point3[<span class="number">0</span>], point3[<span class="number">1</span>], pointPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span>[] getPoint1() &#123;</div><div class="line">        <span class="keyword">return</span> point1;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span>[] getPoint2() &#123;</div><div class="line">        <span class="keyword">return</span> point2;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span>[] getPoint3() &#123;</div><div class="line">        <span class="keyword">return</span> point3;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span>[] getPointCurrent() &#123;</div><div class="line">        <span class="keyword">return</span> pointCurrent;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span>[] getPointTarget() &#123;</div><div class="line">        <span class="keyword">return</span> pointTarget;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getStrokeWidth</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> strokeWidth;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样就完成了我们向上的抛物线箭头。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsopmcun2hj20f40h9wfb.jpg" alt=""></p>
<p>控件中还有一些其他的元素，这时候就需要给他们定位了，通过PathMeasure的getPosTan方法，我们是可以获取到所有位置的坐标的。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CurveLayout</span> <span class="keyword">extends</span> <span class="title">FrameLayout</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CurveLayout</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CurveLayout</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CurveLayout</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        LayoutInflater.from(getContext()).inflate(R.layout.curve_framelayout, <span class="keyword">this</span>, <span class="keyword">true</span>);</div><div class="line">        <span class="keyword">final</span> CurveView mCurveView = findViewById(R.id.curve_view);</div><div class="line">        <span class="keyword">final</span> RelativeLayout rlToefl = findViewById(R.id.rl_toefl);</div><div class="line">        <span class="keyword">final</span> RelativeLayout rlSenior = findViewById(R.id.rl_senior);</div><div class="line">        <span class="keyword">final</span> RelativeLayout rlJunior = findViewById(R.id.rl_junior);</div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">final</span> LinearLayout llToefl = findViewById(R.id.ll_toefl);</div><div class="line">        <span class="keyword">final</span> LinearLayout llSenior = findViewById(R.id.ll_senior);</div><div class="line">        <span class="keyword">final</span> LinearLayout llJunior = findViewById(R.id.ll_junior);</div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">final</span> LinearLayout llTarget = findViewById(R.id.ll_target);</div><div class="line">        <span class="keyword">final</span> FrameLayout flCurrent = findViewById(R.id.fl_current);</div><div class="line"></div><div class="line">        <span class="keyword">final</span> FrameLayout flCurrentText = findViewById(R.id.fl_current_text);</div><div class="line"></div><div class="line">        mCurveView.post(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                rlToefl.setTranslationY(mCurveView.getPoint1()[<span class="number">1</span>] - DensityU.dip2px(getContext(), <span class="number">30</span>));</div><div class="line">                rlSenior.setTranslationY(mCurveView.getPoint2()[<span class="number">1</span>] - rlSenior.getHeight() + DensityU.dip2px(getContext(), <span class="number">5</span>));</div><div class="line">                rlJunior.setTranslationY(mCurveView.getPoint3()[<span class="number">1</span>] - rlJunior.getHeight() + DensityU.dip2px(getContext(), <span class="number">5</span>));</div><div class="line"></div><div class="line">                llToefl.setTranslationY(mCurveView.getPoint1()[<span class="number">1</span>] - DensityU.dip2px(getContext(), <span class="number">10</span>));</div><div class="line">                llSenior.setTranslationY(mCurveView.getPoint2()[<span class="number">1</span>] - DensityU.dip2px(getContext(), <span class="number">10</span>));</div><div class="line">                llJunior.setTranslationY(mCurveView.getPoint3()[<span class="number">1</span>] - DensityU.dip2px(getContext(), <span class="number">10</span>));</div><div class="line"></div><div class="line">                rlToefl.setTranslationX(mCurveView.getPoint1()[<span class="number">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class="number">10</span>));</div><div class="line">                rlSenior.setTranslationX(mCurveView.getPoint2()[<span class="number">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class="number">10</span>));</div><div class="line">                rlJunior.setTranslationX(mCurveView.getPoint3()[<span class="number">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class="number">10</span>));</div><div class="line"></div><div class="line">                llToefl.setTranslationX(mCurveView.getPoint1()[<span class="number">0</span>] + DensityU.dip2px(getContext(), <span class="number">10</span>));</div><div class="line">                llSenior.setTranslationX(mCurveView.getPoint2()[<span class="number">0</span>] + DensityU.dip2px(getContext(), <span class="number">20</span>));</div><div class="line">                llJunior.setTranslationX(mCurveView.getPoint3()[<span class="number">0</span>] + DensityU.dip2px(getContext(), <span class="number">20</span>));</div><div class="line"></div><div class="line"></div><div class="line">                llTarget.setTranslationX(mCurveView.getPointTarget()[<span class="number">0</span>] - llTarget.getWidth() / <span class="number">2</span>);</div><div class="line">                llTarget.setTranslationY(mCurveView.getPointTarget()[<span class="number">1</span>] - llTarget.getHeight() - DensityU.dip2px(getContext(), <span class="number">8</span>));</div><div class="line"></div><div class="line">                flCurrent.setTranslationX(mCurveView.getPointCurrent()[<span class="number">0</span>] - flCurrent.getWidth() / <span class="number">2</span> - DensityU.dip2px(getContext(), <span class="number">2</span>));</div><div class="line">                flCurrent.setTranslationY(mCurveView.getPointCurrent()[<span class="number">1</span>] - flCurrent.getHeight() - DensityU.dip2px(getContext(), <span class="number">3</span>));</div><div class="line"></div><div class="line"></div><div class="line">                flCurrentText.setTranslationX(mCurveView.getPointCurrent()[<span class="number">0</span>] - flCurrent.getWidth() / <span class="number">2</span> - DensityU.dip2px(getContext(), <span class="number">2</span>));</div><div class="line">                flCurrentText.setTranslationY(mCurveView.getPointCurrent()[<span class="number">1</span>] + DensityU.dip2px(getContext(), <span class="number">13</span>));</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面是组合控件用到的一个布局：curve_framelayout</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span></div><div class="line">    <span class="attr">tools:showIn</span>=<span class="string">"@layout/activity_main"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">lieeber.com.guihua.CurveView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/curve_view"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"20dp"</span></div><div class="line">        <span class="attr">android:layout_marginRight</span>=<span class="string">"15dp"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/rl_toefl"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"right"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_toefl_num"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"8.8"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#ff0000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"30sp"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignBottom</span>=<span class="string">"@+id/tv_toefl_num"</span></div><div class="line">            <span class="attr">android:layout_marginBottom</span>=<span class="string">"7dp"</span></div><div class="line">            <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/tv_toefl_num"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"万小学生学到托福难度课程"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#ff0000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"14sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_below</span>=<span class="string">"@+id/tv_toefl_num"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">com.facebook.drawee.view.SimpleDraweeView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/iv_avatar"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"40dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"40dp"</span></div><div class="line">                <span class="attr">android:layout_marginRight</span>=<span class="string">"5dp"</span></div><div class="line">                <span class="attr">app:placeholderImage</span>=<span class="string">"@drawable/small_boy"</span></div><div class="line">                <span class="attr">app:roundAsCircle</span>=<span class="string">"true"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_desc"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"8dp"</span></div><div class="line">                <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/iv_avatar"</span></div><div class="line">                <span class="attr">android:text</span>=<span class="string">"六年级孩子与外教交流托福雅思难度话题"</span></div><div class="line">                <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></div><div class="line">                <span class="attr">android:textSize</span>=<span class="string">"8sp"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_below</span>=<span class="string">"@+id/tv_desc"</span></div><div class="line">                <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/iv_avatar"</span></div><div class="line">                <span class="attr">android:text</span>=<span class="string">"成都泡桐树小学 六年级 牟天恒"</span></div><div class="line">                <span class="attr">android:textColor</span>=<span class="string">"#888888"</span></div><div class="line">                <span class="attr">android:textSize</span>=<span class="string">"7sp"</span>/&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/rl_senior"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"right"</span></div><div class="line">        <span class="attr">tools:layout_gravity</span>=<span class="string">"right|center_vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_senior_num"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"62"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#FF000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></div><div class="line">            /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignBottom</span>=<span class="string">"@+id/tv_senior_num"</span></div><div class="line">            <span class="attr">android:layout_marginBottom</span>=<span class="string">"7dp"</span></div><div class="line">            <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/tv_senior_num"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"万小学生"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#FF000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_below</span>=<span class="string">"@+id/tv_senior_num"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"学到高中难度课程"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#FF000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"11sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/rl_junior"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"right"</span></div><div class="line">        <span class="attr">tools:layout_gravity</span>=<span class="string">"right|bottom"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_junior_num"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"218"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#FF000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></div><div class="line">            /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignBottom</span>=<span class="string">"@+id/tv_junior_num"</span></div><div class="line">            <span class="attr">android:layout_marginBottom</span>=<span class="string">"7dp"</span></div><div class="line">            <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/tv_junior_num"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"万小学生"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#FF000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"10sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_below</span>=<span class="string">"@+id/tv_junior_num"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"学到初中难度课程"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#FF000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"11sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ll_toefl"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"left"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        <span class="attr">tools:layout_gravity</span>=<span class="string">"left"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"39dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"24dp"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/toefl_icon"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"托福"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"10sp"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ll_senior"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"left"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        <span class="attr">tools:layout_gravity</span>=<span class="string">"left|bottom"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"26dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"28dp"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/senior_icon"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"高中"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"10sp"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ll_junior"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"left"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        <span class="attr">tools:layout_gravity</span>=<span class="string">"left|center_vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"22dp"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/junior_icon"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"初中"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"10sp"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ll_target"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"44dp"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@drawable/drip_orange"</span></div><div class="line">        <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></div><div class="line">        <span class="attr">android:paddingTop</span>=<span class="string">"9dp"</span></div><div class="line">        <span class="attr">tools:layout_marginTop</span>=<span class="string">"100dp"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"第"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#ffffff"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"11sp"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"7"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#ffffff"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"20sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"阶"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#ffffff"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"11sp"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/fl_current"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"34dp"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"46dp"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@drawable/drip_yellow"</span></div><div class="line">        <span class="attr">tools:layout_marginTop</span>=<span class="string">"180dp"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">com.facebook.drawee.view.SimpleDraweeView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"2dp"</span></div><div class="line">            <span class="attr">app:placeholderImage</span>=<span class="string">"@drawable/small_boy"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/fl_current_text"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"当前年级 三年级上"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"9sp"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;控件预览&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#控件预览&quot;&gt;¶&lt;/a&gt;控件预览&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/5cc1a78ely1fsop2jaj42j20f10hatbw.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自定义控件" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="PathMeasure" scheme="http://yoursite.com/tags/PathMeasure/"/>
    
  </entry>
  
  <entry>
    <title>Android studio中用gradle统一版本。</title>
    <link href="http://yoursite.com/2018/05/03/Android%20Studio-%E7%94%A8gradle%E7%BB%9F%E4%B8%80%E7%89%88%E6%9C%AC/"/>
    <id>http://yoursite.com/2018/05/03/Android Studio-用gradle统一版本/</id>
    <published>2018-05-03T07:30:22.000Z</published>
    <updated>2018-06-26T09:54:31.267Z</updated>
    
    <content type="html"><![CDATA[<p>如果我们的项目比较小，只有一个moudle，那么我们在导入第三方库，或者设置minSdkVersion，targetSdkVersion等参数时，直接在moudle的build.gradle的相关位置进行设置就可以了，如果我们的项目比较庞大，有很多个moudle，特别是当我们使用组件化开发时，有多个gradle文件需要导入相同的配置，这时候如果按照老方法在build.gradle中写死我们的配置的话，是非常不方便修改的。这时候，我们就需要将gradle中的参数抽取出来，放到另外一个文件中，然后再在每个build.gradle文件中进行引入即可。</p>
<a id="more"></a>
<h3 id="创建配置文件config-gradle"><a class="header-anchor" href="#创建配置文件config-gradle">¶</a>创建配置文件config.gradle</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">ext &#123;</div><div class="line"></div><div class="line">    android = [</div><div class="line">            targetSdkVersion : 27,</div><div class="line">            compileSdkVersion: 27,</div><div class="line">            buildToolsVersion: <span class="string">'25.0.2'</span>,</div><div class="line">            minSdkVersion    : 21,</div><div class="line">            versionCode      : 1,</div><div class="line">            versionName      : <span class="string">"1.0"</span>,</div><div class="line">    ]</div><div class="line">    dependVersion = [</div><div class="line">            support: <span class="string">'27.1.1'</span></div><div class="line">    ]</div><div class="line">    gradle = [</div><div class="line">            gradle_version: <span class="string">"3.1.3"</span></div><div class="line">    ]</div><div class="line">    kotlin = [</div><div class="line">            kotlin_version: <span class="string">'1.2.31'</span>,</div><div class="line">    ]</div><div class="line">    dependencies = [</div><div class="line">            // ------------- Android -------------</div><div class="line">            supportV4            : <span class="string">"com.android.support:support-v4:<span class="variable">$&#123;dependVersion.support&#125;</span>"</span>,</div><div class="line">            appcompatV7          : <span class="string">"com.android.support:appcompat-v7:<span class="variable">$&#123;dependVersion.support&#125;</span>"</span>,</div><div class="line">            design               : <span class="string">"com.android.support:design:<span class="variable">$&#123;dependVersion.support&#125;</span>"</span>,</div><div class="line">            constraintLayout     : <span class="string">'com.android.support.constraint:constraint-layout:1.1.2'</span>,</div><div class="line">            //------------- 测试 -------------</div><div class="line">            junit                : <span class="string">'junit:junit:4.12'</span>,</div><div class="line">            testRunner           : <span class="string">'com.android.support.test:runner:1.0.2'</span>,</div><div class="line">            espresso             : <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span>,</div><div class="line">            // ------------- 网络请求 -------------</div><div class="line">            okhttp               : <span class="string">'com.squareup.okhttp3:okhttp:3.3.1'</span>,</div><div class="line">            retrofit             : <span class="string">'com.squareup.retrofit2:retrofit:2.1.0'</span>,</div><div class="line"></div><div class="line">            // ------------- 图片加载 -------------</div><div class="line">            fresco               : <span class="string">'com.facebook.fresco:fresco:0.11.0'</span>,</div><div class="line">            animatedGif          : <span class="string">'com.facebook.fresco:animated-gif:0.12.0'</span>,</div><div class="line">            picasso              : <span class="string">'com.squareup.picasso:picasso:2.5.2'</span>,</div><div class="line">            photoView            : <span class="string">'com.github.chrisbanes:PhotoView:1.3.1'</span>,</div><div class="line"></div><div class="line">            // ------------- RxAndroid -------------</div><div class="line">            rxAndroid            : <span class="string">'io.reactivex:rxandroid:1.2.1'</span>,</div><div class="line">            rxJava               : <span class="string">'io.reactivex:rxjava:1.2.2'</span>,</div><div class="line"></div><div class="line">            // ------------- json解析 -------------</div><div class="line">            fastJson             : <span class="string">'com.alibaba:fastjson:1.1.54.android'</span>,</div><div class="line">            gson                 : <span class="string">'com.google.code.gson:gson:2.8.0'</span>,</div><div class="line"></div><div class="line">            // ------------- <span class="built_in">log</span>打印工具 -------------</div><div class="line">            logger               : <span class="string">'com.orhanobut:logger:1.15'</span>,</div><div class="line"></div><div class="line">            greendao             : <span class="string">'org.greenrobot:greendao:3.2.0'</span>,</div><div class="line"></div><div class="line">            // ------------- ButterKnife -------------</div><div class="line">            butterknife          : <span class="string">'com.jakewharton:butterknife:8.4.0'</span>,</div><div class="line">            butterknifeCompiler  : <span class="string">'com.jakewharton:butterknife-compiler:8.4.0'</span>,</div><div class="line"></div><div class="line">            // ------------- LeakCanary -------------</div><div class="line">            leakcanaryAndroid    : <span class="string">'com.squareup.leakcanary:leakcanary-android:1.5'</span>,</div><div class="line">            leakcanaryAndroidNoOp: <span class="string">'com.squareup.leakcanary:leakcanary-android-no-op:1.5'</span>,</div><div class="line">            // ------------- activityrouter -------------</div><div class="line">            activityrouter       : <span class="string">'com.github.mzule.activityrouter:activityrouter:1.2.2'</span>,</div><div class="line">    ]</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="项目project中的build-gradle对该配置文件进行引入"><a class="header-anchor" href="#项目project中的build-gradle对该配置文件进行引入">¶</a>项目Project中的build.gradle对该配置文件进行引入</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">buildscript &#123;</div><div class="line">    apply from: <span class="string">"config.gradle"</span></div><div class="line">    repositories &#123;</div><div class="line">        google()</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath <span class="string">"com.android.tools.build:gradle:<span class="variable">$rootProject</span>.ext.gradle.gradle_version"</span></div><div class="line">        classpath <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:<span class="variable">$rootProject</span>.ext.kotlin.kotlin_version"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">allprojects &#123;</div><div class="line">    repositories &#123;</div><div class="line">        google()</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">task clean(<span class="built_in">type</span>: Delete) &#123;</div><div class="line">    delete rootProject.buildDir</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="moudle中的build-gradle的配置方式"><a class="header-anchor" href="#moudle中的build-gradle的配置方式">¶</a>moudle中的build.gradle的配置方式</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.android.application'</span></div><div class="line"></div><div class="line">apply plugin: <span class="string">'kotlin-android'</span></div><div class="line"></div><div class="line">apply plugin: <span class="string">'kotlin-android-extensions'</span></div><div class="line"></div><div class="line">android &#123;</div><div class="line">    compileSdkVersion rootProject.android.compileSdkVersion</div><div class="line">    defaultConfig &#123;</div><div class="line">        applicationId <span class="string">"lieeber.com.androidcomponent"</span></div><div class="line">        minSdkVersion rootProject.android.minSdkVersion</div><div class="line">        targetSdkVersion rootProject.android.targetSdkVersion</div><div class="line">        versionCode rootProject.android.versionCode</div><div class="line">        versionName rootProject.android.versionName</div><div class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></div><div class="line">    &#125;</div><div class="line">    buildTypes &#123;</div><div class="line">        release &#123;</div><div class="line">            minifyEnabled <span class="literal">false</span></div><div class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">dependencies &#123;</div><div class="line">    implementation fileTree(include: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</div><div class="line">    implementation project(<span class="string">':common'</span>)</div><div class="line">    implementation <span class="string">"org.jetbrains.kotlin:kotlin-stdlib-jre7:<span class="variable">$rootProject</span>.ext.kotlin.kotlin_version"</span></div><div class="line">    implementation rootProject.ext.dependencies.appcompatV7</div><div class="line">    implementation rootProject.ext.dependencies.constraintLayout</div><div class="line">    testImplementation rootProject.ext.dependencies.junit</div><div class="line">    androidTestImplementation rootProject.ext.dependencies.testRunner</div><div class="line">    androidTestImplementation rootProject.ext.dependencies.espresso</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看出，配置文件是很灵活的，我们可以按照自己的习惯或者项目的情况来进行分组，不同的moudle都可以进行引入，当需要修改版本号或者对第三方库进行升级时，只需要在config.gradle修改就可以了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果我们的项目比较小，只有一个moudle，那么我们在导入第三方库，或者设置minSdkVersion，targetSdkVersion等参数时，直接在moudle的build.gradle的相关位置进行设置就可以了，如果我们的项目比较庞大，有很多个moudle，特别是当我们使用组件化开发时，有多个gradle文件需要导入相同的配置，这时候如果按照老方法在build.gradle中写死我们的配置的话，是非常不方便修改的。这时候，我们就需要将gradle中的参数抽取出来，放到另外一个文件中，然后再在每个build.gradle文件中进行引入即可。&lt;/p&gt;
    
    </summary>
    
      <category term="Android studio" scheme="http://yoursite.com/categories/Android-studio/"/>
    
    
      <category term="Android studio" scheme="http://yoursite.com/tags/Android-studio/"/>
    
      <category term="gradle" scheme="http://yoursite.com/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>TextureVideoView的使用</title>
    <link href="http://yoursite.com/2018/03/20/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6-TextureVideoView%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/03/20/自定义控件-TextureVideoView的使用/</id>
    <published>2018-03-20T03:30:22.000Z</published>
    <updated>2018-06-26T10:27:50.993Z</updated>
    
    <content type="html"><![CDATA[<p>平时在项目中需要用到播放视频时，使用的最多的就是VideoView或者是其他第三方的播放器了。嗯，之前我也一直是这么用的，但是最近在项目中遇到了一个非常诡异的bug，我们项目使用到了腾讯云直播，并且在全屏直播的时候，屏幕上面需要通过一个小窗口播放一个视频，视频嵌套在scrollview中，可以通过向上滑动，划出scrollView所包裹的区域。</p>
<ol>
<li>遇到的第一个问题，当直播控件开启的情况下，VideoView看不到任何效果，处于完全透明的状态。后来调查才知道，SurfaceView和普通的View不一样，它拥有一个独立于Activity之外的Window，当SurfaceView被设置为不可见的时候，其所对应的Window就会销毁，再想去显示这个SurfaceView的时候就不得不重新创建；另外，SurfaceView创建的先后顺序也是不受FrameLayout的规则影响的，一般来说，布局xml文件中FrameLayout布局靠后的view会覆盖考前的view，但SurfaceView是根据其对应的Surface创建的先后顺序决定的。</li>
</ol>
<a id="more"></a>
<p>于是采用的网上的方法，使用setZOrderOnTop(true)或者setZOrderMediaOverlay(true)来控制SurfaceView的显示层次。完美解决了重叠无法显示视频的问题。</p>
<ol start="2">
<li>
<p>但是却还存在第二个问题，我滑动ScrollView时，将VideoView划出了ScrollView，可是却依然可见，其他控件因为划出了父控件的范围都消失了，但VideoView依然顽强地显示着。原来ScrollView因为有自己的Window，是不会受父控件约束的。看来，只能放弃使用VideoView，去寻找其他的方式了。</p>
</li>
<li>
<p>通过查找，发现除了能用SurfaceView来播放视频之外，还有一个控件TextureView也可以用来播放视频。只不过SurfaceView使用了双离屏缓冲，性能会更好，但是，我们只能试一试TextureView这个救命稻草了。由于TextureView直接使用起来比较麻烦，需要封装一下</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextureVideoView</span> <span class="keyword">extends</span> <span class="title">TextureView</span></span></div><div class="line">        <span class="keyword">implements</span> <span class="title">MediaPlayerControl</span> &#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"TextureVideoView"</span>;</div><div class="line"></div><div class="line">    <span class="comment">// all possible internal states</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATE_ERROR = -<span class="number">1</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATE_IDLE = <span class="number">0</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATE_PREPARING = <span class="number">1</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATE_PREPARED = <span class="number">2</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATE_PLAYING = <span class="number">3</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATE_PAUSED = <span class="number">4</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STATE_PLAYBACK_COMPLETED = <span class="number">5</span>;</div><div class="line"></div><div class="line">    <span class="comment">// settable by the client</span></div><div class="line">    <span class="keyword">private</span> Uri mUri;</div><div class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; mHeaders;</div><div class="line"></div><div class="line">    <span class="comment">// mCurrentState is a TextureVideoView object's current state.</span></div><div class="line">    <span class="comment">// mTargetState is the state that a method caller intends to reach.</span></div><div class="line">    <span class="comment">// For instance, regardless the TextureVideoView object's current state,</span></div><div class="line">    <span class="comment">// calling pause() intends to bring the object to a target state</span></div><div class="line">    <span class="comment">// of STATE_PAUSED.</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mCurrentState = STATE_IDLE;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mTargetState = STATE_IDLE;</div><div class="line"></div><div class="line">    <span class="comment">// All the stuff we need for playing and showing a video</span></div><div class="line">    <span class="keyword">private</span> Surface mSurface = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> MediaPlayer mMediaPlayer = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mAudioSession;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mVideoWidth;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mVideoHeight;</div><div class="line">    <span class="keyword">private</span> MediaController mMediaController;</div><div class="line">    <span class="keyword">private</span> OnCompletionListener mOnCompletionListener;</div><div class="line">    <span class="keyword">private</span> MediaPlayer.OnPreparedListener mOnPreparedListener;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mCurrentBufferPercentage;</div><div class="line">    <span class="keyword">private</span> OnErrorListener mOnErrorListener;</div><div class="line">    <span class="keyword">private</span> OnInfoListener mOnInfoListener;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mSeekWhenPrepared;  <span class="comment">// recording the seek position while preparing</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mCanPause;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mCanSeekBack;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mCanSeekForward;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mShouldRequestAudioFocus = <span class="keyword">true</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TextureVideoView</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TextureVideoView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TextureVideoView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyle)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyle);</div><div class="line"></div><div class="line">        mVideoWidth = <span class="number">0</span>;</div><div class="line">        mVideoHeight = <span class="number">0</span>;</div><div class="line"></div><div class="line">        setSurfaceTextureListener(mSurfaceTextureListener);</div><div class="line"></div><div class="line">        setFocusable(<span class="keyword">true</span>);</div><div class="line">        setFocusableInTouchMode(<span class="keyword">true</span>);</div><div class="line">        requestFocus();</div><div class="line"></div><div class="line">        mCurrentState = STATE_IDLE;</div><div class="line">        mTargetState = STATE_IDLE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class="line">        <span class="comment">//Log.i("@@@@", "onMeasure(" + MeasureSpec.toString(widthMeasureSpec) + ", "</span></div><div class="line">        <span class="comment">//        + MeasureSpec.toString(heightMeasureSpec) + ")");</span></div><div class="line"></div><div class="line">        <span class="keyword">int</span> width = getDefaultSize(mVideoWidth, widthMeasureSpec);</div><div class="line">        <span class="keyword">int</span> height = getDefaultSize(mVideoHeight, heightMeasureSpec);</div><div class="line">        <span class="keyword">if</span> (mVideoWidth &gt; <span class="number">0</span> &amp;&amp; mVideoHeight &gt; <span class="number">0</span>) &#123;</div><div class="line"></div><div class="line">            <span class="keyword">int</span> widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);</div><div class="line">            <span class="keyword">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</div><div class="line">            <span class="keyword">int</span> heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);</div><div class="line">            <span class="keyword">int</span> heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (widthSpecMode == MeasureSpec.EXACTLY &amp;&amp; heightSpecMode == MeasureSpec.EXACTLY) &#123;</div><div class="line">                <span class="comment">// the size is fixed</span></div><div class="line">                width = widthSpecSize;</div><div class="line">                height = heightSpecSize;</div><div class="line"></div><div class="line">                <span class="comment">// for compatibility, we adjust size based on aspect ratio</span></div><div class="line">                <span class="keyword">if</span> ( mVideoWidth * height  &lt; width * mVideoHeight ) &#123;</div><div class="line">                    <span class="comment">//Log.i("@@@", "image too wide, correcting");</span></div><div class="line">                    width = height * mVideoWidth / mVideoHeight;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ( mVideoWidth * height  &gt; width * mVideoHeight ) &#123;</div><div class="line">                    <span class="comment">//Log.i("@@@", "image too tall, correcting");</span></div><div class="line">                    height = width * mVideoHeight / mVideoWidth;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (widthSpecMode == MeasureSpec.EXACTLY) &#123;</div><div class="line">                <span class="comment">// only the width is fixed, adjust the height to match aspect ratio if possible</span></div><div class="line">                width = widthSpecSize;</div><div class="line">                height = width * mVideoHeight / mVideoWidth;</div><div class="line">                <span class="keyword">if</span> (heightSpecMode == MeasureSpec.AT_MOST &amp;&amp; height &gt; heightSpecSize) &#123;</div><div class="line">                    <span class="comment">// couldn't match aspect ratio within the constraints</span></div><div class="line">                    height = heightSpecSize;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (heightSpecMode == MeasureSpec.EXACTLY) &#123;</div><div class="line">                <span class="comment">// only the height is fixed, adjust the width to match aspect ratio if possible</span></div><div class="line">                height = heightSpecSize;</div><div class="line">                width = height * mVideoWidth / mVideoHeight;</div><div class="line">                <span class="keyword">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; width &gt; widthSpecSize) &#123;</div><div class="line">                    <span class="comment">// couldn't match aspect ratio within the constraints</span></div><div class="line">                    width = widthSpecSize;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// neither the width nor the height are fixed, try to use actual video size</span></div><div class="line">                width = mVideoWidth;</div><div class="line">                height = mVideoHeight;</div><div class="line">                <span class="keyword">if</span> (heightSpecMode == MeasureSpec.AT_MOST &amp;&amp; height &gt; heightSpecSize) &#123;</div><div class="line">                    <span class="comment">// too tall, decrease both width and height</span></div><div class="line">                    height = heightSpecSize;</div><div class="line">                    width = height * mVideoWidth / mVideoHeight;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; width &gt; widthSpecSize) &#123;</div><div class="line">                    <span class="comment">// too wide, decrease both width and height</span></div><div class="line">                    width = widthSpecSize;</div><div class="line">                    height = width * mVideoHeight / mVideoWidth;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">// no size yet, just adopt the given spec sizes</span></div><div class="line">        &#125;</div><div class="line">        setMeasuredDimension(width, height);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInitializeAccessibilityEvent</span><span class="params">(AccessibilityEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onInitializeAccessibilityEvent(event);</div><div class="line">        event.setClassName(TextureVideoView.class.getName());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInitializeAccessibilityNodeInfo</span><span class="params">(AccessibilityNodeInfo info)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onInitializeAccessibilityNodeInfo(info);</div><div class="line">        info.setClassName(TextureVideoView.class.getName());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">resolveAdjustedSize</span><span class="params">(<span class="keyword">int</span> desiredSize, <span class="keyword">int</span> measureSpec)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> getDefaultSize(desiredSize, measureSpec);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Sets video path.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> path the path of the video.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVideoPath</span><span class="params">(String path)</span> </span>&#123;</div><div class="line">        setVideoURI(Uri.parse(path));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Sets video URI.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> uri the URI of the video.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVideoURI</span><span class="params">(Uri uri)</span> </span>&#123;</div><div class="line">        setVideoURI(uri, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Sets video URI using specific headers.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> uri     the URI of the video.</div><div class="line">     * <span class="doctag">@param</span> headers the headers for the URI request.</div><div class="line">     *                Note that the cross domain redirection is allowed by default, but that can be</div><div class="line">     *                changed with key/value pairs through the headers parameter with</div><div class="line">     *                "android-allow-cross-domain-redirect" as the key and "0" or "1" as the value</div><div class="line">     *                to disallow or allow cross domain redirection.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVideoURI</span><span class="params">(Uri uri, Map&lt;String, String&gt; headers)</span> </span>&#123;</div><div class="line">        mUri = uri;</div><div class="line">        mHeaders = headers;</div><div class="line">        mSeekWhenPrepared = <span class="number">0</span>;</div><div class="line">        openVideo();</div><div class="line">        requestLayout();</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopPlayback</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mMediaPlayer != <span class="keyword">null</span>) &#123;</div><div class="line">            mMediaPlayer.stop();</div><div class="line">            mMediaPlayer.release();</div><div class="line">            mMediaPlayer = <span class="keyword">null</span>;</div><div class="line">            mCurrentState = STATE_IDLE;</div><div class="line">            mTargetState  = STATE_IDLE;</div><div class="line">            <span class="keyword">if</span> (mShouldRequestAudioFocus) &#123;</div><div class="line">                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</div><div class="line">                am.abandonAudioFocus(<span class="keyword">null</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        clearSurface();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Clears the surface texture by attaching a GL context and clearing it.</div><div class="line">     * Code taken from &lt;a href="http://stackoverflow.com/a/31582209"&gt;Hugo Gresse's answer on stackoverflow.com&lt;/a&gt;.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">clearSurface</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mSurface == <span class="keyword">null</span> || Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.JELLY_BEAN) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        EGL10 egl = (EGL10) EGLContext.getEGL();</div><div class="line">        EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);</div><div class="line">        egl.eglInitialize(display, <span class="keyword">null</span>);</div><div class="line"></div><div class="line">        <span class="keyword">int</span>[] attribList = &#123;</div><div class="line">                EGL10.EGL_RED_SIZE, <span class="number">8</span>,</div><div class="line">                EGL10.EGL_GREEN_SIZE, <span class="number">8</span>,</div><div class="line">                EGL10.EGL_BLUE_SIZE, <span class="number">8</span>,</div><div class="line">                EGL10.EGL_ALPHA_SIZE, <span class="number">8</span>,</div><div class="line">                EGL10.EGL_RENDERABLE_TYPE, EGL10.EGL_WINDOW_BIT,</div><div class="line">                EGL10.EGL_NONE, <span class="number">0</span>,      <span class="comment">// placeholder for recordable [@-3]</span></div><div class="line">                EGL10.EGL_NONE</div><div class="line">        &#125;;</div><div class="line">        EGLConfig[] configs = <span class="keyword">new</span> EGLConfig[<span class="number">1</span>];</div><div class="line">        <span class="keyword">int</span>[] numConfigs = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>];</div><div class="line">        egl.eglChooseConfig(display, attribList, configs, configs.length, numConfigs);</div><div class="line">        EGLConfig config = configs[<span class="number">0</span>];</div><div class="line">        EGLContext context = egl.eglCreateContext(display, config, EGL10.EGL_NO_CONTEXT, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;</div><div class="line">                <span class="number">12440</span>, <span class="number">2</span>, EGL10.EGL_NONE</div><div class="line">        &#125;);</div><div class="line">        EGLSurface eglSurface = egl.eglCreateWindowSurface(display, config, mSurface, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;</div><div class="line">                EGL10.EGL_NONE</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        egl.eglMakeCurrent(display, eglSurface, eglSurface, context);</div><div class="line">        GLES20.glClearColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</div><div class="line">        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);</div><div class="line">        egl.eglSwapBuffers(display, eglSurface);</div><div class="line">        egl.eglDestroySurface(display, eglSurface);</div><div class="line">        egl.eglMakeCurrent(display, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);</div><div class="line">        egl.eglDestroyContext(display, context);</div><div class="line">        egl.eglTerminate(display);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">openVideo</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mUri == <span class="keyword">null</span> || mSurface == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="comment">// not ready for playback just yet, will try again later</span></div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// we shouldn't clear the target state, because somebody might have</span></div><div class="line">        <span class="comment">// called start() previously</span></div><div class="line">        release(<span class="keyword">false</span>);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mShouldRequestAudioFocus) &#123;</div><div class="line">            AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</div><div class="line">            am.requestAudioFocus(<span class="keyword">null</span>, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            mMediaPlayer = <span class="keyword">new</span> MediaPlayer();</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (mAudioSession != <span class="number">0</span>) &#123;</div><div class="line">                mMediaPlayer.setAudioSessionId(mAudioSession);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                mAudioSession = mMediaPlayer.getAudioSessionId();</div><div class="line">            &#125;</div><div class="line">            mMediaPlayer.setOnPreparedListener(mPreparedListener);</div><div class="line">            mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);</div><div class="line">            mMediaPlayer.setOnCompletionListener(mCompletionListener);</div><div class="line">            mMediaPlayer.setOnErrorListener(mErrorListener);</div><div class="line">            mMediaPlayer.setOnInfoListener(mInfoListener);</div><div class="line">            mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);</div><div class="line">            mCurrentBufferPercentage = <span class="number">0</span>;</div><div class="line">            mMediaPlayer.setDataSource(getContext().getApplicationContext(), mUri, mHeaders);</div><div class="line">            mMediaPlayer.setSurface(mSurface);</div><div class="line">            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);</div><div class="line">            mMediaPlayer.setScreenOnWhilePlaying(<span class="keyword">true</span>);</div><div class="line">            mMediaPlayer.prepareAsync();</div><div class="line"></div><div class="line">            <span class="comment">// we don't set the target state here either, but preserve the</span></div><div class="line">            <span class="comment">// target state that was there before.</span></div><div class="line">            mCurrentState = STATE_PREPARING;</div><div class="line">            attachMediaController();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</div><div class="line">            Log.w(TAG, <span class="string">"Unable to open content: "</span> + mUri, ex);</div><div class="line">            mCurrentState = STATE_ERROR;</div><div class="line">            mTargetState = STATE_ERROR;</div><div class="line">            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, <span class="number">0</span>);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException ex) &#123;</div><div class="line">            Log.w(TAG, <span class="string">"Unable to open content: "</span> + mUri, ex);</div><div class="line">            mCurrentState = STATE_ERROR;</div><div class="line">            mTargetState = STATE_ERROR;</div><div class="line">            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, <span class="number">0</span>);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMediaController</span><span class="params">(MediaController controller)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">            mMediaController.hide();</div><div class="line">        &#125;</div><div class="line">        mMediaController = controller;</div><div class="line">        attachMediaController();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">attachMediaController</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mMediaPlayer != <span class="keyword">null</span> &amp;&amp; mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">            mMediaController.setMediaPlayer(<span class="keyword">this</span>);</div><div class="line">            View anchorView = <span class="keyword">this</span>.getParent() <span class="keyword">instanceof</span> View ?</div><div class="line">                    (View)<span class="keyword">this</span>.getParent() : <span class="keyword">this</span>;</div><div class="line">            mMediaController.setAnchorView(anchorView);</div><div class="line">            mMediaController.setEnabled(isInPlaybackState());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    MediaPlayer.OnVideoSizeChangedListener mSizeChangedListener =</div><div class="line">            <span class="keyword">new</span> MediaPlayer.OnVideoSizeChangedListener() &#123;</div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onVideoSizeChanged</span><span class="params">(MediaPlayer mp, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</div><div class="line">                    mVideoWidth = mp.getVideoWidth();</div><div class="line">                    mVideoHeight = mp.getVideoHeight();</div><div class="line">                    <span class="keyword">if</span> (mVideoWidth != <span class="number">0</span> &amp;&amp; mVideoHeight != <span class="number">0</span>) &#123;</div><div class="line">                        getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);</div><div class="line">                        requestLayout();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">    MediaPlayer.OnPreparedListener mPreparedListener = <span class="keyword">new</span> MediaPlayer.OnPreparedListener() &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPrepared</span><span class="params">(MediaPlayer mp)</span> </span>&#123;</div><div class="line">            mCurrentState = STATE_PREPARED;</div><div class="line"></div><div class="line">            mCanPause = mCanSeekBack = mCanSeekForward = <span class="keyword">true</span>;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (mOnPreparedListener != <span class="keyword">null</span>) &#123;</div><div class="line">                mOnPreparedListener.onPrepared(mMediaPlayer);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">                mMediaController.setEnabled(<span class="keyword">true</span>);</div><div class="line">            &#125;</div><div class="line">            mVideoWidth = mp.getVideoWidth();</div><div class="line">            mVideoHeight = mp.getVideoHeight();</div><div class="line"></div><div class="line">            <span class="keyword">int</span> seekToPosition = mSeekWhenPrepared;  <span class="comment">// mSeekWhenPrepared may be changed after seekTo() call</span></div><div class="line">            <span class="keyword">if</span> (seekToPosition != <span class="number">0</span>) &#123;</div><div class="line">                seekTo(seekToPosition);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (mVideoWidth != <span class="number">0</span> &amp;&amp; mVideoHeight != <span class="number">0</span>) &#123;</div><div class="line">                <span class="comment">//Log.i("@@@@", "video size: " + mVideoWidth +"/"+ mVideoHeight);</span></div><div class="line">                getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);</div><div class="line">                <span class="comment">// We won't get a "surface changed" callback if the surface is already the right size, so</span></div><div class="line">                <span class="comment">// start the video here instead of in the callback.</span></div><div class="line">                <span class="keyword">if</span> (mTargetState == STATE_PLAYING) &#123;</div><div class="line">                    start();</div><div class="line">                    <span class="keyword">if</span> (mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">                        mMediaController.show();</div><div class="line">                    &#125;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!isPlaying() &amp;&amp;</div><div class="line">                        (seekToPosition != <span class="number">0</span> || getCurrentPosition() &gt; <span class="number">0</span>)) &#123;</div><div class="line">                    <span class="keyword">if</span> (mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">                        <span class="comment">// Show the media controls when we're paused into a video and make 'em stick.</span></div><div class="line">                        mMediaController.show(<span class="number">0</span>);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// We don't know the video size yet, but should start anyway.</span></div><div class="line">                <span class="comment">// The video size might be reported to us later.</span></div><div class="line">                <span class="keyword">if</span> (mTargetState == STATE_PLAYING) &#123;</div><div class="line">                    start();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MediaPlayer.OnCompletionListener mCompletionListener =</div><div class="line">            <span class="keyword">new</span> MediaPlayer.OnCompletionListener() &#123;</div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompletion</span><span class="params">(MediaPlayer mp)</span> </span>&#123;</div><div class="line">                    mCurrentState = STATE_PLAYBACK_COMPLETED;</div><div class="line">                    mTargetState = STATE_PLAYBACK_COMPLETED;</div><div class="line">                    <span class="keyword">if</span> (mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">                        mMediaController.hide();</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">if</span> (mOnCompletionListener != <span class="keyword">null</span>) &#123;</div><div class="line">                        mOnCompletionListener.onCompletion(mMediaPlayer);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MediaPlayer.OnInfoListener mInfoListener =</div><div class="line">            <span class="keyword">new</span> MediaPlayer.OnInfoListener() &#123;</div><div class="line">                <span class="function"><span class="keyword">public</span>  <span class="keyword">boolean</span> <span class="title">onInfo</span><span class="params">(MediaPlayer mp, <span class="keyword">int</span> arg1, <span class="keyword">int</span> arg2)</span> </span>&#123;</div><div class="line">                    <span class="keyword">if</span> (mOnInfoListener != <span class="keyword">null</span>) &#123;</div><div class="line">                        mOnInfoListener.onInfo(mp, arg1, arg2);</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MediaPlayer.OnErrorListener mErrorListener =</div><div class="line">            <span class="keyword">new</span> MediaPlayer.OnErrorListener() &#123;</div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onError</span><span class="params">(MediaPlayer mp, <span class="keyword">int</span> framework_err, <span class="keyword">int</span> impl_err)</span> </span>&#123;</div><div class="line">                    Log.d(TAG, <span class="string">"Error: "</span> + framework_err + <span class="string">","</span> + impl_err);</div><div class="line">                    mCurrentState = STATE_ERROR;</div><div class="line">                    mTargetState = STATE_ERROR;</div><div class="line">                    <span class="keyword">if</span> (mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">                        mMediaController.hide();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="comment">/* If an error handler has been supplied, use it and finish. */</span></div><div class="line">                    <span class="keyword">if</span> (mOnErrorListener != <span class="keyword">null</span>) &#123;</div><div class="line">                        <span class="keyword">if</span> (mOnErrorListener.onError(mMediaPlayer, framework_err, impl_err)) &#123;</div><div class="line">                            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="comment">/* Otherwise, pop up an error dialog so the user knows that</span></div><div class="line">                     * something bad has happened. Only try and pop up the dialog</div><div class="line">                     * if we're attached to a window. When we're going away and no</div><div class="line">                     * longer have a window, don't bother showing the user an error.</div><div class="line">                     */</div><div class="line">                    <span class="keyword">if</span> (getWindowToken() != <span class="keyword">null</span>) &#123;</div><div class="line">                        Resources r = getContext().getResources();</div><div class="line">                        <span class="keyword">int</span> messageId;</div><div class="line"></div><div class="line">                        <span class="keyword">if</span> (framework_err == MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK) &#123;</div><div class="line">                            messageId = android.R.string.VideoView_error_text_invalid_progressive_playback;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            messageId = android.R.string.VideoView_error_text_unknown;</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="keyword">new</span> AlertDialog.Builder(getContext())</div><div class="line">                                .setMessage(messageId)</div><div class="line">                                .setPositiveButton(android.R.string.VideoView_error_button,</div><div class="line">                                        <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">                                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> whichButton)</span> </span>&#123;</div><div class="line">                                                <span class="comment">/* If we get here, there is no onError listener, so</span></div><div class="line">                                                 * at least inform them that the video is over.</div><div class="line">                                                 */</div><div class="line">                                                <span class="keyword">if</span> (mOnCompletionListener != <span class="keyword">null</span>) &#123;</div><div class="line">                                                    mOnCompletionListener.onCompletion(mMediaPlayer);</div><div class="line">                                                &#125;</div><div class="line">                                            &#125;</div><div class="line">                                        &#125;)</div><div class="line">                                .setCancelable(<span class="keyword">false</span>)</div><div class="line">                                .show();</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MediaPlayer.OnBufferingUpdateListener mBufferingUpdateListener =</div><div class="line">            <span class="keyword">new</span> MediaPlayer.OnBufferingUpdateListener() &#123;</div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBufferingUpdate</span><span class="params">(MediaPlayer mp, <span class="keyword">int</span> percent)</span> </span>&#123;</div><div class="line">                    mCurrentBufferPercentage = percent;</div><div class="line">                &#125;</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Register a callback to be invoked when the media file</div><div class="line">     * is loaded and ready to go.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> l The callback that will be run</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnPreparedListener</span><span class="params">(MediaPlayer.OnPreparedListener l)</span></span></div><div class="line">    &#123;</div><div class="line">        mOnPreparedListener = l;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Register a callback to be invoked when the end of a media file</div><div class="line">     * has been reached during playback.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> l The callback that will be run</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnCompletionListener</span><span class="params">(OnCompletionListener l)</span></span></div><div class="line">    &#123;</div><div class="line">        mOnCompletionListener = l;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Register a callback to be invoked when an error occurs</div><div class="line">     * during playback or setup.  If no listener is specified,</div><div class="line">     * or if the listener returned false, TextureVideoView will inform</div><div class="line">     * the user of any errors.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> l The callback that will be run</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnErrorListener</span><span class="params">(OnErrorListener l)</span></span></div><div class="line">    &#123;</div><div class="line">        mOnErrorListener = l;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Register a callback to be invoked when an informational event</div><div class="line">     * occurs during playback or setup.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> l The callback that will be run</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnInfoListener</span><span class="params">(OnInfoListener l)</span> </span>&#123;</div><div class="line">        mOnInfoListener = l;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    TextureView.SurfaceTextureListener mSurfaceTextureListener = <span class="keyword">new</span> SurfaceTextureListener()</div><div class="line">    &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureSizeChanged</span><span class="params">(<span class="keyword">final</span> SurfaceTexture surface, <span class="keyword">final</span> <span class="keyword">int</span> width, <span class="keyword">final</span> <span class="keyword">int</span> height)</span> </span>&#123;</div><div class="line">            <span class="keyword">boolean</span> isValidState =  (mTargetState == STATE_PLAYING);</div><div class="line">            <span class="keyword">boolean</span> hasValidSize = (width &gt; <span class="number">0</span> &amp;&amp; height &gt; <span class="number">0</span>);</div><div class="line">            <span class="keyword">if</span> (mMediaPlayer != <span class="keyword">null</span> &amp;&amp; isValidState &amp;&amp; hasValidSize) &#123;</div><div class="line">                <span class="keyword">if</span> (mSeekWhenPrepared != <span class="number">0</span>) &#123;</div><div class="line">                    seekTo(mSeekWhenPrepared);</div><div class="line">                &#125;</div><div class="line">                start();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureAvailable</span><span class="params">(<span class="keyword">final</span> SurfaceTexture surface, <span class="keyword">final</span> <span class="keyword">int</span> width, <span class="keyword">final</span> <span class="keyword">int</span> height)</span> </span>&#123;</div><div class="line">            mSurface = <span class="keyword">new</span> Surface(surface);</div><div class="line">            openVideo();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSurfaceTextureDestroyed</span><span class="params">(<span class="keyword">final</span> SurfaceTexture surface)</span> </span>&#123;</div><div class="line">            <span class="comment">// after we return from this we can't use the surface any more</span></div><div class="line">            <span class="keyword">if</span> (mSurface != <span class="keyword">null</span>) &#123;</div><div class="line">                mSurface.release();</div><div class="line">                mSurface = <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (mMediaController != <span class="keyword">null</span>) mMediaController.hide();</div><div class="line">            release(<span class="keyword">true</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceTextureUpdated</span><span class="params">(<span class="keyword">final</span> SurfaceTexture surface)</span> </span>&#123;</div><div class="line">            <span class="comment">// do nothing</span></div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line">     * release the media player in any state</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(<span class="keyword">boolean</span> cleartargetstate)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mMediaPlayer != <span class="keyword">null</span>) &#123;</div><div class="line">            mMediaPlayer.reset();</div><div class="line">            mMediaPlayer.release();</div><div class="line">            mMediaPlayer = <span class="keyword">null</span>;</div><div class="line">            mCurrentState = STATE_IDLE;</div><div class="line">            <span class="keyword">if</span> (cleartargetstate) &#123;</div><div class="line">                mTargetState  = STATE_IDLE;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (mShouldRequestAudioFocus) &#123;</div><div class="line">                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</div><div class="line">                am.abandonAudioFocus(<span class="keyword">null</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isInPlaybackState() &amp;&amp; mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">            toggleMediaControlsVisiblity();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTrackballEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isInPlaybackState() &amp;&amp; mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">            toggleMediaControlsVisiblity();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKeyDown</span><span class="params">(<span class="keyword">int</span> keyCode, KeyEvent event)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">boolean</span> isKeyCodeSupported = keyCode != KeyEvent.KEYCODE_BACK &amp;&amp;</div><div class="line">                keyCode != KeyEvent.KEYCODE_VOLUME_UP &amp;&amp;</div><div class="line">                keyCode != KeyEvent.KEYCODE_VOLUME_DOWN &amp;&amp;</div><div class="line">                keyCode != KeyEvent.KEYCODE_VOLUME_MUTE &amp;&amp;</div><div class="line">                keyCode != KeyEvent.KEYCODE_MENU &amp;&amp;</div><div class="line">                keyCode != KeyEvent.KEYCODE_CALL &amp;&amp;</div><div class="line">                keyCode != KeyEvent.KEYCODE_ENDCALL;</div><div class="line">        <span class="keyword">if</span> (isInPlaybackState() &amp;&amp; isKeyCodeSupported &amp;&amp; mMediaController != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_HEADSETHOOK ||</div><div class="line">                    keyCode == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) &#123;</div><div class="line">                <span class="keyword">if</span> (mMediaPlayer.isPlaying()) &#123;</div><div class="line">                    pause();</div><div class="line">                    mMediaController.show();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    start();</div><div class="line">                    mMediaController.hide();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_MEDIA_PLAY) &#123;</div><div class="line">                <span class="keyword">if</span> (!mMediaPlayer.isPlaying()) &#123;</div><div class="line">                    start();</div><div class="line">                    mMediaController.hide();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_MEDIA_STOP</div><div class="line">                    || keyCode == KeyEvent.KEYCODE_MEDIA_PAUSE) &#123;</div><div class="line">                <span class="keyword">if</span> (mMediaPlayer.isPlaying()) &#123;</div><div class="line">                    pause();</div><div class="line">                    mMediaController.show();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                toggleMediaControlsVisiblity();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onKeyDown(keyCode, event);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">toggleMediaControlsVisiblity</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mMediaController.isShowing()) &#123;</div><div class="line">            mMediaController.hide();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            mMediaController.show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isInPlaybackState()) &#123;</div><div class="line">            mMediaPlayer.start();</div><div class="line">            mCurrentState = STATE_PLAYING;</div><div class="line">        &#125;</div><div class="line">        mTargetState = STATE_PLAYING;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pause</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isInPlaybackState()) &#123;</div><div class="line">            <span class="keyword">if</span> (mMediaPlayer.isPlaying()) &#123;</div><div class="line">                mMediaPlayer.pause();</div><div class="line">                mCurrentState = STATE_PAUSED;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        mTargetState = STATE_PAUSED;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">suspend</span><span class="params">()</span> </span>&#123;</div><div class="line">        release(<span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resume</span><span class="params">()</span> </span>&#123;</div><div class="line">        openVideo();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDuration</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isInPlaybackState()) &#123;</div><div class="line">            <span class="keyword">return</span> mMediaPlayer.getDuration();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCurrentPosition</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isInPlaybackState()) &#123;</div><div class="line">            <span class="keyword">return</span> mMediaPlayer.getCurrentPosition();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">seekTo</span><span class="params">(<span class="keyword">int</span> msec)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isInPlaybackState()) &#123;</div><div class="line">            mMediaPlayer.seekTo(msec);</div><div class="line">            mSeekWhenPrepared = <span class="number">0</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            mSeekWhenPrepared = msec;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPlaying</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> isInPlaybackState() &amp;&amp; mMediaPlayer.isPlaying();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBufferPercentage</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mMediaPlayer != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> mCurrentBufferPercentage;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isInPlaybackState</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> (mMediaPlayer != <span class="keyword">null</span> &amp;&amp;</div><div class="line">                mCurrentState != STATE_ERROR &amp;&amp;</div><div class="line">                mCurrentState != STATE_IDLE &amp;&amp;</div><div class="line">                mCurrentState != STATE_PREPARING);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canPause</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mCanPause;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canSeekBackward</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mCanSeekBack;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canSeekForward</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mCanSeekForward;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAudioSessionId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mAudioSession == <span class="number">0</span>) &#123;</div><div class="line">            MediaPlayer foo = <span class="keyword">new</span> MediaPlayer();</div><div class="line">            mAudioSession = foo.getAudioSessionId();</div><div class="line">            foo.release();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> mAudioSession;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Sets the request audio focus flag. If enabled, &#123;<span class="doctag">@link</span> TextureVideoView&#125; will request</div><div class="line">     * audio focus when opening a video by calling &#123;<span class="doctag">@link</span> AudioManager&#125;. This flag</div><div class="line">     * should be set before calling &#123;<span class="doctag">@link</span> TextureVideoView#setVideoPath(String)&#125; or</div><div class="line">     * &#123;<span class="doctag">@link</span> TextureVideoView#setVideoURI(Uri)&#125;. By default, &#123;<span class="doctag">@link</span> TextureVideoView&#125; will</div><div class="line">     * request audio focus.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> shouldRequestAudioFocus  If &#123;<span class="doctag">@code</span> true&#125;, &#123;<span class="doctag">@link</span> TextureVideoView&#125; will request</div><div class="line">     * audio focus before opening a video, else audio focus is not requested</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShouldRequestAudioFocus</span><span class="params">(<span class="keyword">boolean</span> shouldRequestAudioFocus)</span> </span>&#123;</div><div class="line">        mShouldRequestAudioFocus = shouldRequestAudioFocus;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Returns the current state of the audio focus request flag.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125;, if &#123;<span class="doctag">@link</span> TextureVideoView&#125; will request</div><div class="line">     * audio focus before opening a video, else &#123;<span class="doctag">@code</span> false&#125;</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldRequestAudioFocus</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mShouldRequestAudioFocus;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用时调用setVideoPath传入视频的地址即可，其他方法也和VideoView大体一致。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;平时在项目中需要用到播放视频时，使用的最多的就是VideoView或者是其他第三方的播放器了。嗯，之前我也一直是这么用的，但是最近在项目中遇到了一个非常诡异的bug，我们项目使用到了腾讯云直播，并且在全屏直播的时候，屏幕上面需要通过一个小窗口播放一个视频，视频嵌套在scrollview中，可以通过向上滑动，划出scrollView所包裹的区域。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遇到的第一个问题，当直播控件开启的情况下，VideoView看不到任何效果，处于完全透明的状态。后来调查才知道，SurfaceView和普通的View不一样，它拥有一个独立于Activity之外的Window，当SurfaceView被设置为不可见的时候，其所对应的Window就会销毁，再想去显示这个SurfaceView的时候就不得不重新创建；另外，SurfaceView创建的先后顺序也是不受FrameLayout的规则影响的，一般来说，布局xml文件中FrameLayout布局靠后的view会覆盖考前的view，但SurfaceView是根据其对应的Surface创建的先后顺序决定的。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="自定义控件" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="TextVideoView" scheme="http://yoursite.com/tags/TextVideoView/"/>
    
  </entry>
  
  <entry>
    <title>发布自己的开源库到JitPack</title>
    <link href="http://yoursite.com/2018/02/15/Android%20Studio-%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E6%BA%90%E5%BA%93%E5%88%B0JitPack/"/>
    <id>http://yoursite.com/2018/02/15/Android Studio-发布自己的开源库到JitPack/</id>
    <published>2018-02-15T04:28:15.000Z</published>
    <updated>2018-06-28T00:43:16.721Z</updated>
    
    <content type="html"><![CDATA[<p>  之前我们使用过jCenter,虽然也很简单，步骤也只有简单几步，不过与JitPack比起来，还是显得太麻烦了。看看JitPack发布开源库的流程有多简单。</p>
<a id="more"></a>
<h3 id="创建项目"><a class="header-anchor" href="#创建项目">¶</a>创建项目</h3>
<p>通过Android studio 创建开源库，然后上传到github.</p>
<h3 id="登录网站"><a class="header-anchor" href="#登录网站">¶</a>登录网站</h3>
<p>打开 <a href="http://jitpack.io" target="_blank" rel="external">http://jitpack.io</a> ,使用github登录账号，在输入框中输入你的项目的github地址。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fspvea5y1vj214y0hvabr.jpg" alt=""></p>
<h3 id="发布版本"><a class="header-anchor" href="#发布版本">¶</a>发布版本</h3>
<p>可以看到下面有一个Version，如果你没有发布release，这里默认显示的是master，如果需要显得正式一点，可以每次修改重新发布一个版本，提交release更新版本号。</p>
<p>在github中打开你的项目，点击release。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fspvhn7wlnj20xb05nmxq.jpg" alt="">
然后创建一个新的release，这里创建了一个v1.2的版本，并简单描述了这次改动。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fspvjjd8nnj20od0lkwfs.jpg" alt="">
然后再JitPack就可以看到这次修改的release了。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fspvkzpq0tj20kn0aagly.jpg" alt="">
我们点击Get it。</p>
<h3 id="引入并使用"><a class="header-anchor" href="#引入并使用">¶</a>引入并使用</h3>
<p>然后JitPack自动帮我们生成了开源库的地址。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fspvm6j708j20la0h6myn.jpg" alt="">
按照提示在android studio中引入即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  之前我们使用过jCenter,虽然也很简单，步骤也只有简单几步，不过与JitPack比起来，还是显得太麻烦了。看看JitPack发布开源库的流程有多简单。&lt;/p&gt;
    
    </summary>
    
      <category term="Android studio" scheme="http://yoursite.com/categories/Android-studio/"/>
    
    
      <category term="Android studio" scheme="http://yoursite.com/tags/Android-studio/"/>
    
      <category term="JitPack" scheme="http://yoursite.com/tags/JitPack/"/>
    
  </entry>
  
  <entry>
    <title>Android发布开源库到jCenter</title>
    <link href="http://yoursite.com/2018/02/10/Android%20Studio-Android%E5%8F%91%E5%B8%83%E9%A1%B9%E7%9B%AE%E5%88%B0jcenter/"/>
    <id>http://yoursite.com/2018/02/10/Android Studio-Android发布项目到jcenter/</id>
    <published>2018-02-10T04:18:15.000Z</published>
    <updated>2018-06-28T00:43:16.721Z</updated>
    
    <content type="html"><![CDATA[<p>  对于一些常用的工具类，我们经常会在很多项目中都使用到，如果每个项目中都对这些代码进行拷贝，确实是一件比较麻烦的事情；另外，我们经常会创造一些比较实用的项目，也希望能够拿这些项目去帮助别人。因此，将自己的工具类或者项目开源是一个很必要的事情。</p>
<p>  android studio中引入第三方库，基本都是来自于jcenter仓库，我们也可以把自己的项目放到jcenter仓库。</p>
<p>下面是具体的操作流程</p>
<a id="more"></a>
<h3 id="注册bintray-com账号"><a class="header-anchor" href="#注册bintray-com账号">¶</a>注册bintray.com账号。</h3>
<ol>
<li>进入https://bintray.com/，注册账号。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsoyyn80fyj20rx0euaqp.jpg" alt=""></li>
<li>注意jcenter的首页如上图所示，我们应该点击右边的‘Singn Up Here’进行注册，因为左边的对应的的是用户，30天免费期过后是需要付费的。</li>
<li>注册并登录后点击右上角View Profile，再点击左上角的Edit，然后可以看到以下界面。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1f8j38aj20td0fl0tv.jpg" alt=""></li>
<li>点击API Key获取到属于你个人的API Key</li>
<li>点击Repositories，创建一个叫做maven的仓库
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1gm6xl9j20hy0ja75a.jpg" alt=""></li>
</ol>
<h3 id="在项目中引入bintray-release"><a class="header-anchor" href="#在项目中引入bintray-release">¶</a>在项目中引入bintray-release</h3>
<ol>
<li>打开project的build.gradle文件</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        google()</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath <span class="string">'com.android.tools.build:gradle:3.1.3'</span></div><div class="line">        classpath <span class="string">'com.novoda:bintray-release:0.8.0'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol start="2">
<li>将需要上传的library的build.gradle中添加如下配置。</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.novoda.bintray-release'</span></div><div class="line">.....</div><div class="line">publish &#123;</div><div class="line">    userOrg = <span class="string">'lieeber1'</span><span class="comment">//bintray.com用户名</span></div><div class="line">    groupId = <span class="string">'com.lieeber'</span><span class="comment">//jcenter上的路径</span></div><div class="line">    artifactId = <span class="string">'jcenterlibrary'</span><span class="comment">//项目名称</span></div><div class="line">    publishVersion = <span class="string">'1.1.0'</span><span class="comment">//版本号</span></div><div class="line">    desc = <span class="string">'you can write everything whatever you want.'</span><span class="comment">//描述</span></div><div class="line">    website = <span class="string">'https://github.com/lieeber/demolibrary'</span><span class="comment">//网站</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>完成上面的配置后，就准备上传了。</p>
<h3 id="上传"><a class="header-anchor" href="#上传">¶</a>上传</h3>
<ol>
<li>mac执行下面的代码</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">./gradlew clean build bintrayUpload</div><div class="line">-PbintrayUser=lieeber1</div><div class="line">-PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx</div><div class="line">-PdryRun=<span class="keyword">false</span></div></pre></td></tr></table></figure>
<ol start="2">
<li>windows执行以下代码</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gradlew clean build bintrayUpload -PbintrayUser=lieeber -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx -PdryRun=<span class="keyword">false</span></div></pre></td></tr></table></figure>
<p>上传完成后，可以通过 <a href="https://bintray.com/%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/maven%E5%AF%B9%E8%AE%BF%E9%97%AE%E5%88%9A%E5%88%9A%E4%B8%8A%E4%BC%A0%E7%9A%84%E4%BB%93%E5%BA%93%E3%80%82%EF%BC%88%E6%88%91%E8%BF%99%E9%87%8C%E6%98%AFhttps://bintray.com/lieeber1/maven%EF%BC%89" target="_blank" rel="external">https://bintray.com/你的用户名/maven对访问刚刚上传的仓库。（我这里是https://bintray.com/lieeber1/maven）</a>
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1l5pin9j20po0jpwfu.jpg" alt="">
但是到了这一步，不代表我们的仓库就能在项目中进行引用了，我们还需要添加到jcenter，并且通过人工审核之后才能正常使用。
点击仓库，打开仓库详情。
<img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1lnlypmj20xf0jz41a.jpg" alt="">
点击右下角的Add to jCenter.在提交页面，需要你描述一下你的仓库，填完之后，提交并等待人工审核。通过之后，你就可以成功在项目中引入你的仓库了。</p>
<p>比如我这个仓库的引用地址为：implementation ‘com.lieeber:jcenterlibrary:1.1.0’。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  对于一些常用的工具类，我们经常会在很多项目中都使用到，如果每个项目中都对这些代码进行拷贝，确实是一件比较麻烦的事情；另外，我们经常会创造一些比较实用的项目，也希望能够拿这些项目去帮助别人。因此，将自己的工具类或者项目开源是一个很必要的事情。&lt;/p&gt;
&lt;p&gt;  android studio中引入第三方库，基本都是来自于jcenter仓库，我们也可以把自己的项目放到jcenter仓库。&lt;/p&gt;
&lt;p&gt;下面是具体的操作流程&lt;/p&gt;
    
    </summary>
    
      <category term="Android studio" scheme="http://yoursite.com/categories/Android-studio/"/>
    
    
      <category term="Android studio" scheme="http://yoursite.com/tags/Android-studio/"/>
    
      <category term="jCenter" scheme="http://yoursite.com/tags/jCenter/"/>
    
  </entry>
  
  <entry>
    <title>自定义画板</title>
    <link href="http://yoursite.com/2018/02/05/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%BB%E6%9D%BF/"/>
    <id>http://yoursite.com/2018/02/05/自定义控件-自定义画板/</id>
    <published>2018-02-05T12:39:04.000Z</published>
    <updated>2018-06-28T00:43:16.727Z</updated>
    
    <content type="html"><![CDATA[<p>买了个ipad pro，发现用proCreate画画挺有意思，于是决定用Andorid实现一个自定义View画板效果。</p>
<a id="more"></a>
<h3 id="运行效果"><a class="header-anchor" href="#运行效果">¶</a>运行效果</h3>
<img height="400" align="center" src="http://osphuquui.bkt.clouddn.com/drawsomething.gif">
<h3 id="先贴代码-再分析"><a class="header-anchor" href="#先贴代码-再分析">¶</a>先贴代码，再分析</h3>
<h4 id="继承view-绘制画板"><a class="header-anchor" href="#继承view-绘制画板">¶</a>继承View，绘制画板</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by lieeber on 2017/6/28.</div><div class="line"> * 自定义画板，可以更换画笔颜色，粗细，实现了前进，后退，保存到本地等功能。</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DrawSomethingView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Paint linePaint;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Paint paintPaint;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Path fillPath;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Paint eraserPaint;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> downX;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> downY;</div><div class="line">    <span class="keyword">private</span> Path linePath;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> DRAW_LINE = <span class="number">0</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> DRAW_FILL = <span class="number">1</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> DRAW_PAINT = <span class="number">2</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> DRAW_ERASER = <span class="number">3</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> drawStyle = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> lineColor = Color.BLACK;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> paintColor = Color.BLUE;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> lineWidth = <span class="number">20</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> paintWidthProgress = <span class="number">50</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> lineWidthProgress = <span class="number">50</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> paintWidth = <span class="number">70</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> eraserWidthProgress = <span class="number">50</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> eraserWidth = <span class="number">100</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getEraserWidthProgress</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> eraserWidthProgress;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEraserWidthProgress</span><span class="params">(<span class="keyword">float</span> eraserWidthProgress)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.eraserWidthProgress = eraserWidthProgress;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getEraserWidth</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> eraserWidth;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEraserWidth</span><span class="params">()</span> </span>&#123;</div><div class="line">        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / <span class="number">100</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getPaintWidthProgress</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> paintWidthProgress;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPaintWidthProgress</span><span class="params">(<span class="keyword">float</span> paintWidthProgress)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.paintWidthProgress = paintWidthProgress;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getLineWidthProgress</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lineWidthProgress;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLineWidthProgress</span><span class="params">(<span class="keyword">float</span> lineWidthProgress)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.lineWidthProgress = lineWidthProgress;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLineColor</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lineColor;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLineColor</span><span class="params">(<span class="keyword">int</span> lineColor)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.lineColor = lineColor;</div><div class="line">        linePaint.setColor(lineColor);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPaintColor</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> paintColor;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPaintColor</span><span class="params">(<span class="keyword">int</span> paintColor)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.paintColor = paintColor;</div><div class="line">        paintPaint.setColor(paintColor);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLineWidth</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lineWidth;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLineWidth</span><span class="params">()</span> </span>&#123;</div><div class="line">        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / <span class="number">100</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPaintWidth</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> paintWidth;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPaintWidth</span><span class="params">()</span> </span>&#123;</div><div class="line">        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / <span class="number">100</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> ArrayList&lt;PathBean&gt; pathlist = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;PathBean&gt; deletePathList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Canvas mCanvas;</div><div class="line">    <span class="keyword">private</span> Bitmap mBitmap;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> viewWidth;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> viewHeight;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DrawSomethingView</span><span class="params">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">        linePaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);</div><div class="line">        linePaint.setStyle(Style.STROKE);</div><div class="line">        linePaint.setColor(lineColor);</div><div class="line">        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / <span class="number">100</span>);</div><div class="line">        linePaint.setPathEffect(<span class="keyword">new</span> CornerPathEffect(<span class="number">100f</span>));</div><div class="line">        linePaint.setStrokeCap(Cap.ROUND);</div><div class="line">        linePaint.setStrokeJoin(Join.ROUND);</div><div class="line"></div><div class="line">        paintPaint = <span class="keyword">new</span> Paint();</div><div class="line">        paintPaint.setStyle(Style.STROKE);</div><div class="line">        paintPaint.setColor(paintColor);</div><div class="line">        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / <span class="number">100</span>);</div><div class="line">        paintPaint.setStrokeCap(Cap.ROUND);</div><div class="line">        paintPaint.setPathEffect(<span class="keyword">new</span> CornerPathEffect(<span class="number">100f</span>));</div><div class="line">        paintPaint.setStrokeJoin(Join.ROUND);</div><div class="line"></div><div class="line">        eraserPaint = <span class="keyword">new</span> Paint();</div><div class="line">        eraserPaint.setStyle(Style.STROKE);</div><div class="line">        eraserPaint.setAlpha(<span class="number">0</span>);</div><div class="line">        eraserPaint.setXfermode(<span class="keyword">new</span> PorterDuffXfermode(Mode.CLEAR));</div><div class="line">        eraserPaint.setColor(Color.TRANSPARENT);</div><div class="line">        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / <span class="number">100</span>);</div><div class="line">        eraserPaint.setStrokeCap(Cap.ROUND);</div><div class="line">        eraserPaint.setPathEffect(<span class="keyword">new</span> CornerPathEffect(<span class="number">100f</span>));</div><div class="line">        eraserPaint.setStrokeJoin(Join.ROUND);</div><div class="line"></div><div class="line">        linePath = <span class="keyword">new</span> Path();</div><div class="line">        fillPath = <span class="keyword">new</span> Path();</div><div class="line"></div><div class="line">        mCanvas = <span class="keyword">new</span> Canvas();</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</div><div class="line">        viewWidth = w;</div><div class="line">        viewHeight = h;</div><div class="line">        blankBitmap();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</div><div class="line">                downX = event.getX();</div><div class="line">                downY = event.getY();</div><div class="line">                linePath = <span class="keyword">new</span> Path();</div><div class="line">                linePath.moveTo(downX, downY);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line">                downX = event.getX();</div><div class="line">                downY = event.getY();</div><div class="line">                <span class="keyword">switch</span> (drawStyle) &#123;</div><div class="line">                    <span class="keyword">case</span> DRAW_LINE:</div><div class="line">                        linePath.lineTo(downX, downY);</div><div class="line">                        mCanvas.drawPath(linePath, linePaint);</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">case</span> DRAW_PAINT:</div><div class="line">                        linePath.lineTo(downX, downY);</div><div class="line">                        mCanvas.drawPath(linePath, paintPaint);</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">case</span> DRAW_ERASER:</div><div class="line">                        linePath.lineTo(downX, downY);</div><div class="line">                        mCanvas.drawPath(linePath, eraserPaint);</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                invalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">                <span class="keyword">switch</span> (drawStyle) &#123;</div><div class="line">                    <span class="keyword">case</span> DRAW_LINE:</div><div class="line">                        pathlist.add(<span class="keyword">new</span> PathBean(linePath, linePaint, lineWidthProgress * lineWidth / <span class="number">100</span>, lineColor));</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">case</span> DRAW_PAINT:</div><div class="line">                        pathlist.add(<span class="keyword">new</span> PathBean(linePath, paintPaint, paintWidthProgress * paintWidth / <span class="number">100</span>, paintColor));</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">case</span> DRAW_ERASER:</div><div class="line">                        pathlist.add(<span class="keyword">new</span> PathBean(linePath, eraserPaint, eraserWidthProgress * eraserWidth / <span class="number">100</span>, Color.TRANSPARENT));</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                deletePathList.clear();</div><div class="line"></div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">        canvas.drawBitmap(mBitmap, <span class="keyword">new</span> Matrix(), <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">blankBitmap</span><span class="params">()</span> </span>&#123;</div><div class="line">        mBitmap = Bitmap.createBitmap(viewWidth, viewHeight, Config.ARGB_8888);</div><div class="line">        mCanvas.setBitmap(mBitmap);</div><div class="line"><span class="comment">//        mCanvas.drawColor(Color.WHITE);</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</div><div class="line">        pathlist.clear();</div><div class="line">        deletePathList.clear();</div><div class="line">        blankBitmap();</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reset</span><span class="params">()</span> </span>&#123;</div><div class="line">        blankBitmap();</div><div class="line">        <span class="keyword">if</span> (pathlist.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            PathBean pathBean = pathlist.get(pathlist.size() - <span class="number">1</span>);</div><div class="line">            pathlist.remove(pathBean);</div><div class="line">            deletePathList.add(pathBean);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pathlist.size(); i++) &#123;</div><div class="line">            pathlist.get(i).paint.setStrokeWidth(pathlist.get(i).width);</div><div class="line">            pathlist.get(i).paint.setColor(pathlist.get(i).color);</div><div class="line">            mCanvas.drawPath(pathlist.get(i).path, pathlist.get(i).paint);</div><div class="line">        &#125;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">forward</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (deletePathList.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            PathBean pathBean = deletePathList.get(deletePathList.size() - <span class="number">1</span>);</div><div class="line">            pathBean.paint.setStrokeWidth(pathBean.width);</div><div class="line">            pathBean.paint.setColor(pathBean.color);</div><div class="line">            mCanvas.drawPath(pathBean.path, pathBean.paint);</div><div class="line">            deletePathList.remove(deletePathList.size() - <span class="number">1</span>);</div><div class="line">            pathlist.add(pathBean);</div><div class="line">        &#125;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDrawLine</span><span class="params">()</span> </span>&#123;</div><div class="line">        drawStyle = DRAW_LINE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDrawPaint</span><span class="params">()</span> </span>&#123;</div><div class="line">        drawStyle = DRAW_PAINT;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEraser</span><span class="params">()</span> </span>&#123;</div><div class="line">        drawStyle = DRAW_ERASER;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getlineColor</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lineColor;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (ContextCompat.checkSelfPermission(getContext(),</div><div class="line">                Manifest.permission.WRITE_EXTERNAL_STORAGE)</div><div class="line">                == PackageManager.PERMISSION_GRANTED) &#123;</div><div class="line">            <span class="comment">//拥有读写文件权限</span></div><div class="line">            Log.i(TAG,<span class="string">"拥有读写文件权限"</span>);</div><div class="line">            <span class="comment">//获得系统当前时间，并以该时间作为文件名</span></div><div class="line">            SimpleDateFormat formatter = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMddHHmmss"</span>);</div><div class="line">            Date curDate = <span class="keyword">new</span> Date(System.currentTimeMillis());<span class="comment">//获取当前时间</span></div><div class="line">            String dir = Environment.getExternalStorageDirectory().getAbsolutePath();</div><div class="line">            String str = formatter.format(curDate) + <span class="string">"paint.png"</span>;</div><div class="line">            File file = <span class="keyword">new</span> File(dir + <span class="string">"/"</span>+str);</div><div class="line">            FileOutputStream fos = <span class="keyword">null</span>;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                fos = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">                Toast.makeText(getContext(), <span class="string">"保存成功"</span>, Toast.LENGTH_LONG).show();</div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">            mBitmap.compress(CompressFormat.PNG, <span class="number">100</span>, fos);</div><div class="line">            getContext().sendBroadcast(<span class="keyword">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(<span class="string">"file://"</span> + Environment.getExternalStorageDirectory())));</div><div class="line">            Toast.makeText(getContext(), <span class="string">"保存成功"</span>, Toast.LENGTH_LONG).show();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            Log.i(TAG,<span class="string">"没有读写权限"</span>);</div><div class="line"></div><div class="line">            Toast.makeText(getContext(), <span class="string">"没有读写权限"</span>, Toast.LENGTH_LONG).show();</div><div class="line">            <span class="comment">//没有读写权限</span></div><div class="line">            <span class="keyword">if</span> (ActivityCompat.shouldShowRequestPermissionRationale((Activity) getContext(),</div><div class="line">                    Manifest.permission.WRITE_EXTERNAL_STORAGE))&#123;</div><div class="line">                ActivityCompat.requestPermissions((Activity) getContext(),</div><div class="line">                        <span class="keyword">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,</div><div class="line">                        <span class="number">140</span>);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line"><span class="comment">//                showPermissionDialog();</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="在activity中添加逻辑操作"><a class="header-anchor" href="#在activity中添加逻辑操作">¶</a>在Activity中添加逻辑操作</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> DrawSomethingView myView;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        myView = (DrawSomethingView) findViewById(R.id.myView);</div><div class="line"></div><div class="line">        findViewById(R.id.tvLine).setOnLongClickListener(<span class="keyword">new</span> OnLongClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                SheetUtil sheetUtil = SheetUtil.getInstance();</div><div class="line">                <span class="keyword">int</span> color = myView.getlineColor();</div><div class="line">                <span class="keyword">float</span> progress = myView.getLineWidthProgress();</div><div class="line">                sheetUtil.addSheet(MainActivity.<span class="keyword">this</span>, color, progress);</div><div class="line">                sheetUtil.showSheet();</div><div class="line">                sheetUtil.setSeekBarChangeListener(<span class="keyword">new</span> SeekBarChangeListener() &#123;</div><div class="line">                    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">float</span> progress)</span> </span>&#123;</div><div class="line">                        myView.setLineWidthProgress(progress);</div><div class="line">                        myView.setLineWidth();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onColorChange</span><span class="params">(<span class="keyword">int</span> color)</span> </span>&#123;</div><div class="line">                        myView.setLineColor(color);</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        findViewById(R.id.tvPaint).setOnLongClickListener(<span class="keyword">new</span> OnLongClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                SheetUtil sheetUtil = SheetUtil.getInstance();</div><div class="line">                <span class="keyword">int</span> color = myView.getPaintColor();</div><div class="line">                <span class="keyword">float</span> progress = myView.getPaintWidthProgress();</div><div class="line">                sheetUtil.addSheet(MainActivity.<span class="keyword">this</span>, color, progress);</div><div class="line">                sheetUtil.showSheet();</div><div class="line">                sheetUtil.setSeekBarChangeListener(<span class="keyword">new</span> SeekBarChangeListener() &#123;</div><div class="line">                    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">float</span> progress)</span> </span>&#123;</div><div class="line">                        myView.setPaintWidthProgress(progress);</div><div class="line">                        myView.setPaintWidth();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onColorChange</span><span class="params">(<span class="keyword">int</span> color)</span> </span>&#123;</div><div class="line">                        myView.setPaintColor(color);</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        findViewById(R.id.tvEraser).setOnLongClickListener(<span class="keyword">new</span> OnLongClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="keyword">float</span> progress = myView.getEraserWidthProgress();</div><div class="line">                SheetUtil sheetUtil = SheetUtil.getInstance();</div><div class="line">                sheetUtil.addSheet(MainActivity.<span class="keyword">this</span>,-<span class="number">1</span>, progress);</div><div class="line">                sheetUtil.showSheet();</div><div class="line">                sheetUtil.setSeekBarChangeListener(<span class="keyword">new</span> SeekBarChangeListener() &#123;</div><div class="line">                    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">float</span> progress)</span> </span>&#123;</div><div class="line">                        myView.setEraserWidthProgress(progress);</div><div class="line">                        myView.setEraserWidth();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onColorChange</span><span class="params">(<span class="keyword">int</span> color)</span> </span>&#123;</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        findViewById(R.id.tvLine).setSelected(<span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        myView.clear();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reset</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        myView.reset();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">forward</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        myView.forward();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawLine</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        clearSelect();</div><div class="line">        findViewById(R.id.tvLine).setSelected(<span class="keyword">true</span>);</div><div class="line">        myView.setDrawLine();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawPaint</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        clearSelect();</div><div class="line">        findViewById(R.id.tvPaint).setSelected(<span class="keyword">true</span>);</div><div class="line">        myView.setDrawPaint();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eraser</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        clearSelect();</div><div class="line">        findViewById(R.id.tvEraser).setSelected(<span class="keyword">true</span>);</div><div class="line">        myView.setEraser();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">clearSelect</span><span class="params">()</span> </span>&#123;</div><div class="line">        findViewById(R.id.tvEraser).setSelected(<span class="keyword">false</span>);</div><div class="line">        findViewById(R.id.tvLine).setSelected(<span class="keyword">false</span>);</div><div class="line">        findViewById(R.id.tvPaint).setSelected(<span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        myView.save();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="activity对应布局文件"><a class="header-anchor" href="#activity对应布局文件">¶</a>Activity对应布局文件</h4>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">activity_main.xml</div><div class="line"></div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!--&lt;ImageView--&gt;</span></div><div class="line">    <span class="comment">&lt;!--android:layout_width="match_parent"--&gt;</span></div><div class="line">    <span class="comment">&lt;!--android:src="@drawable/timg"--&gt;</span></div><div class="line">    <span class="comment">&lt;!--android:scaleType="fitXY"--&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--android:layout_height="match_parent"/&gt;--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ll"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_alignParentStart</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tvClear"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/tv_bg"</span></div><div class="line">            <span class="attr">android:clickable</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"clear"</span></div><div class="line">            <span class="attr">android:paddingLeft</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"清除"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tvReset"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/tv_bg_2"</span></div><div class="line">            <span class="attr">android:clickable</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"reset"</span></div><div class="line">            <span class="attr">android:paddingLeft</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"撤销"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/tv_bg_3"</span></div><div class="line">            <span class="attr">android:clickable</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"forward"</span></div><div class="line">            <span class="attr">android:paddingLeft</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"前进"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tvLine"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/tv_bg_4"</span></div><div class="line">            <span class="attr">android:clickable</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"drawLine"</span></div><div class="line">            <span class="attr">android:paddingLeft</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"线条"</span>/&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tvPaint"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/tv_bg_4"</span></div><div class="line">            <span class="attr">android:clickable</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"drawPaint"</span></div><div class="line">            <span class="attr">android:paddingLeft</span>=<span class="string">"5dp"</span></div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"5dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"画笔"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tvEraser"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/tv_bg_4"</span></div><div class="line">            <span class="attr">android:clickable</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"eraser"</span></div><div class="line">            <span class="attr">android:paddingLeft</span>=<span class="string">"5dp"</span></div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"5dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"橡皮擦"</span>/&gt;</div><div class="line"></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tvSave"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/tv_bg_2"</span></div><div class="line">            <span class="attr">android:clickable</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"save"</span></div><div class="line">            <span class="attr">android:paddingLeft</span>=<span class="string">"5dp"</span></div><div class="line">            <span class="attr">android:paddingRight</span>=<span class="string">"5dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"保存"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">studentsdemo.lieeber.com.lbview.views.DrawSomethingView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/myView"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line"></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_below</span>=<span class="string">"@+id/ll"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="相关资源文件"><a class="header-anchor" href="#相关资源文件">¶</a>相关资源文件</h4>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">tv_bg.xml</div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@color/colorPrimary"</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@color/colorAccent"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></div><div class="line"></div><div class="line">tv_bg2.xml</div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@color/colorPrimary"</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@color/color1"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></div><div class="line"></div><div class="line">tv_bg3.xml</div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@color/colorPrimary"</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@color/color2"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></div><div class="line"></div><div class="line">tv_bg4.xml</div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>  <span class="attr">android:state_selected</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">shape</span> <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"3dp"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">stroke</span> <span class="attr">android:color</span>=<span class="string">"@color/colorAccent"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">stroke</span> <span class="attr">android:width</span>=<span class="string">"1dp"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">shape</span> <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"6dp"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">stroke</span> <span class="attr">android:color</span>=<span class="string">"#ffffffff"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">stroke</span> <span class="attr">android:width</span>=<span class="string">"3dp"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="自定义弹框"><a class="header-anchor" href="#自定义弹框">¶</a>自定义弹框</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SheetUtil</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> ViewGroup contentView;</div><div class="line">    <span class="keyword">private</span> View sheetContent;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SheetUtil sheetUtil = <span class="keyword">new</span> SheetUtil();</div><div class="line">    <span class="keyword">private</span> Activity activity;</div><div class="line">    <span class="keyword">private</span> View llSheet;</div><div class="line">    <span class="keyword">private</span> View viewSheetBg;</div><div class="line">    <span class="keyword">private</span> ColorPickerView colorPickerView;</div><div class="line">    <span class="keyword">private</span> View colorView;</div><div class="line">    <span class="keyword">private</span> SeekBar seekBar;</div><div class="line">    <span class="keyword">private</span> TextView tvProgress;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SheetUtil <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> sheetUtil;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addSheet</span><span class="params">(Activity activity, <span class="keyword">int</span> originColor, <span class="keyword">float</span> originProgress)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.activity = activity;</div><div class="line">        contentView = (ViewGroup) activity.findViewById(android.R.id.content);</div><div class="line">        sheetContent = LayoutInflater.from(activity).inflate(R.layout.setting_dialog, contentView, <span class="keyword">false</span>);</div><div class="line">        sheetContent.setVisibility(View.GONE);</div><div class="line">        <span class="keyword">if</span> (contentView.findViewById(R.id.view_sheet_bg) == <span class="keyword">null</span>) &#123;</div><div class="line">            contentView.addView(sheetContent);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        viewSheetBg = sheetContent.findViewById(R.id.view_sheet_bg);</div><div class="line">        llSheet = sheetContent.findViewById(R.id.ll_sheet);</div><div class="line">        colorPickerView = (ColorPickerView) sheetContent.findViewById(R.id.color_picker);</div><div class="line">        colorView = sheetContent.findViewById(R.id.colorView);</div><div class="line">        seekBar = (SeekBar) sheetContent.findViewById(R.id.seek_bar);</div><div class="line">        tvProgress = (TextView) sheetContent.findViewById(R.id.tv_progress);</div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">if</span> (originColor == -<span class="number">1</span>) &#123;</div><div class="line">            sheetContent.findViewById(R.id.rl_color_picker).setVisibility(View.GONE);</div><div class="line">        &#125;</div><div class="line">        seekBar.setProgress((<span class="keyword">int</span>) originProgress);</div><div class="line">        tvProgress.setText((<span class="keyword">int</span>) originProgress + <span class="string">"%"</span>);</div><div class="line">        colorView.setBackgroundColor(originColor);</div><div class="line">        colorPickerView.setOnSeekColorListener(<span class="keyword">new</span> OnSeekColorListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSeekColorListener</span><span class="params">(<span class="keyword">int</span> color)</span> </span>&#123;</div><div class="line">                colorView.setBackgroundColor(color);</div><div class="line">                <span class="keyword">if</span> (seekBarChangeListener != <span class="keyword">null</span>) &#123;</div><div class="line">                    seekBarChangeListener.onColorChange(color);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        viewSheetBg.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                disMissSheet();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        seekBar.setOnSeekBarChangeListener(<span class="keyword">new</span> OnSeekBarChangeListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(SeekBar seekBar, <span class="keyword">int</span> progress, <span class="keyword">boolean</span> fromUser)</span> </span>&#123;</div><div class="line">                System.out.println(progress);</div><div class="line">                <span class="keyword">if</span> (seekBarChangeListener != <span class="keyword">null</span>) &#123;</div><div class="line">                    seekBarChangeListener.onProgress(progress);</div><div class="line">                &#125;</div><div class="line">                tvProgress.setText(progress + <span class="string">"%"</span>);</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStopTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showSheet</span><span class="params">()</span> </span>&#123;</div><div class="line">        sheetContent.setVisibility(View.VISIBLE);</div><div class="line">        sheetContent.bringToFront();</div><div class="line"></div><div class="line">        llSheet.setTranslationY(activity.getResources().getDisplayMetrics().heightPixels);</div><div class="line">        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(<span class="number">0</span>, <span class="number">1</span>);</div><div class="line">        alphaAnimator.setInterpolator(<span class="keyword">new</span> DecelerateInterpolator());</div><div class="line">        alphaAnimator.setDuration(<span class="number">300</span>);</div><div class="line">        alphaAnimator.addUpdateListener(<span class="keyword">new</span> AnimatorUpdateListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</div><div class="line">                <span class="keyword">float</span> alpha = (<span class="keyword">float</span>) animation.getAnimatedValue();</div><div class="line">                viewSheetBg.setAlpha(alpha);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        alphaAnimator.start();</div><div class="line">        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(activity.getResources().getDisplayMetrics().heightPixels, <span class="number">0</span>);</div><div class="line">        translationAniamtor.setInterpolator(<span class="keyword">new</span> DecelerateInterpolator());</div><div class="line">        translationAniamtor.setDuration(<span class="number">300</span>);</div><div class="line">        translationAniamtor.addUpdateListener(<span class="keyword">new</span> AnimatorUpdateListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</div><div class="line">                <span class="keyword">float</span> translationY = (<span class="keyword">float</span>) animation.getAnimatedValue();</div><div class="line">                llSheet.setTranslationY(translationY);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        translationAniamtor.start();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">disMissSheet</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (viewSheetBg != <span class="keyword">null</span> &amp;&amp; llSheet != <span class="keyword">null</span>) &#123;</div><div class="line">            disMissSheet(viewSheetBg, llSheet);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">disMissSheet</span><span class="params">(<span class="keyword">final</span> View viewSheetBg, <span class="keyword">final</span> View llSheet)</span> </span>&#123;</div><div class="line">        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(<span class="number">1</span>, <span class="number">0</span>);</div><div class="line">        alphaAnimator.setInterpolator(<span class="keyword">new</span> DecelerateInterpolator());</div><div class="line">        alphaAnimator.setDuration(<span class="number">300</span>);</div><div class="line">        alphaAnimator.addUpdateListener(<span class="keyword">new</span> AnimatorUpdateListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</div><div class="line">                <span class="keyword">float</span> alpha = (<span class="keyword">float</span>) animation.getAnimatedValue();</div><div class="line">                viewSheetBg.setAlpha(alpha);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        alphaAnimator.start();</div><div class="line"></div><div class="line">        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(<span class="number">0</span>, activity.getResources().getDisplayMetrics().heightPixels);</div><div class="line">        translationAniamtor.setInterpolator(<span class="keyword">new</span> DecelerateInterpolator());</div><div class="line">        translationAniamtor.setDuration(<span class="number">300</span>);</div><div class="line">        translationAniamtor.addUpdateListener(<span class="keyword">new</span> AnimatorUpdateListener() &#123;</div><div class="line">            <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</div><div class="line">                <span class="keyword">float</span> translationY = (<span class="keyword">float</span>) animation.getAnimatedValue();</div><div class="line">                llSheet.setTranslationY(translationY);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        translationAniamtor.start();</div><div class="line">        translationAniamtor.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</div><div class="line">                contentView.removeView(sheetContent);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isShowingSheet</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (contentView == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (contentView.findViewById(R.id.view_sheet_bg) == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SeekBarChangeListener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">float</span> progress)</span></span>;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onColorChange</span><span class="params">(<span class="keyword">int</span> color)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> SeekBarChangeListener seekBarChangeListener;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSeekBarChangeListener</span><span class="params">(SeekBarChangeListener seekBarChangeListener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.seekBarChangeListener = seekBarChangeListener;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="自定义弹框对应布局"><a class="header-anchor" href="#自定义弹框对应布局">¶</a>自定义弹框对应布局</h4>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">setting_dialog.xml</div><div class="line"></div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/view_sheet_bg"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"#88000000"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/ll_sheet"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"300dp"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"#ffffff"</span></div><div class="line">        <span class="attr">android:clickable</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        <span class="attr">android:padding</span>=<span class="string">"20dp"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"粗细"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">SeekBar</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/seek_bar"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_progress"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"5dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"50%"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/rl_color_picker"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">studentsdemo.lieeber.com.lbview.views.ColorPickerView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/color_picker"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"150dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"150dp"</span></div><div class="line">                <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true"</span>/&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/colorView"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"20dp"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"20dp"</span></div><div class="line">                <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></div><div class="line">                <span class="attr">android:layout_marginLeft</span>=<span class="string">"40dp"</span></div><div class="line">                <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/color_picker"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"#ff0000"</span>/&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="自定义画笔颜色更改器"><a class="header-anchor" href="#自定义画笔颜色更改器">¶</a>自定义画笔颜色更改器</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by lieeber on 2017/6/28.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColorPickerView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Context context;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Currently selected color</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span>[] colorHSV = <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0f</span>, <span class="number">1f</span>, <span class="number">1f</span>&#125;;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Paint colorWheelPaint;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Paint touchCirclePaint;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> radius;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> centerX;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> centerY;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> touchCircleX;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> touchCircleY;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> OnSeekColorListener onSeekColorListener;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ColorPickerView</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ColorPickerView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ColorPickerView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</div><div class="line">        init(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        setLayerType(LAYER_TYPE_SOFTWARE, <span class="keyword">null</span>);</div><div class="line">        <span class="keyword">this</span>.context = context;</div><div class="line">        colorWheelPaint = <span class="keyword">new</span> Paint();</div><div class="line">        colorWheelPaint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">        touchCirclePaint = <span class="keyword">new</span> Paint();</div><div class="line">        touchCirclePaint.setStyle(Paint.Style.STROKE);</div><div class="line">        touchCirclePaint.setColor(Color.WHITE);</div><div class="line">        touchCirclePaint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line"></div><div class="line">        <span class="keyword">int</span> widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);</div><div class="line">        <span class="keyword">int</span> heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);</div><div class="line"></div><div class="line">        <span class="keyword">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</div><div class="line">        <span class="keyword">int</span> heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);</div><div class="line"></div><div class="line">        <span class="comment">//处理 wrap_content问题</span></div><div class="line">        <span class="keyword">int</span> defaultDimension = dip2px(<span class="number">200</span>);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; heightSpecMode == MeasureSpec.AT_MOST) &#123;</div><div class="line">            setMeasuredDimension(defaultDimension, defaultDimension);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (widthSpecMode == MeasureSpec.AT_MOST) &#123;</div><div class="line">            setMeasuredDimension(defaultDimension, heightSpecSize);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (heightSpecMode == MeasureSpec.AT_MOST) &#123;</div><div class="line">            setMeasuredDimension(widthSpecSize, defaultDimension);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</div><div class="line">        centerX = w / <span class="number">2</span>;</div><div class="line">        centerY = h / <span class="number">2</span>;</div><div class="line">        radius = Math.min(centerX, centerY);</div><div class="line">        createColorWheel();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">        canvas.drawCircle(centerX, centerY, radius, colorWheelPaint);</div><div class="line">        canvas.drawCircle(touchCircleX, touchCircleY, <span class="number">10</span>, touchCirclePaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * create color wheel</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createColorWheel</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> colorCount = <span class="number">30</span>;</div><div class="line">        <span class="keyword">float</span> colorAngleStep = <span class="number">360</span> / <span class="number">30.0f</span>;</div><div class="line">        <span class="keyword">int</span> colors[] = <span class="keyword">new</span> <span class="keyword">int</span>[colorCount];</div><div class="line">        <span class="keyword">float</span> hsv[] = <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0f</span>, <span class="number">1f</span>, <span class="number">1f</span>&#125;;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; colors.length; i++) &#123;</div><div class="line">            hsv[<span class="number">0</span>] = (i * colorAngleStep + <span class="number">180</span>) % <span class="number">360</span>;</div><div class="line">            colors[i] = Color.HSVToColor(hsv);</div><div class="line">        &#125;</div><div class="line">        SweepGradient sweepGradient = <span class="keyword">new</span> SweepGradient(centerX, centerY, colors, <span class="keyword">null</span>);</div><div class="line">        RadialGradient radialGradient = <span class="keyword">new</span> RadialGradient(centerX, centerY,</div><div class="line">                radius, <span class="number">0xFFFFFFFF</span>, <span class="number">0x00FFFFFF</span>, Shader.TileMode.CLAMP);</div><div class="line">        ComposeShader composeShader = <span class="keyword">new</span> ComposeShader(sweepGradient, radialGradient, PorterDuff.Mode.SRC_OVER);</div><div class="line">        colorWheelPaint.setShader(composeShader);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">        ViewParent parent = getParent();</div><div class="line">        <span class="keyword">if</span> (parent != <span class="keyword">null</span>)</div><div class="line">            parent.requestDisallowInterceptTouchEvent(<span class="keyword">true</span>);</div><div class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line">                <span class="keyword">int</span> x = (<span class="keyword">int</span>) event.getX();</div><div class="line">                <span class="keyword">int</span> y = (<span class="keyword">int</span>) event.getY();</div><div class="line">                <span class="keyword">int</span> cx = x - centerX;</div><div class="line">                <span class="keyword">int</span> cy = y - centerY;</div><div class="line">                <span class="keyword">double</span> d = Math.sqrt(cx * cx + cy * cy);</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (d &lt;= radius) &#123;</div><div class="line">                    colorHSV[<span class="number">0</span>] = (<span class="keyword">float</span>) (Math.toDegrees(Math.atan2(cy, cx)) + <span class="number">180f</span>);</div><div class="line">                    colorHSV[<span class="number">1</span>] = Math.max(<span class="number">0f</span>, Math.min(<span class="number">1f</span>, (<span class="keyword">float</span>) (d / radius)));</div><div class="line">                    <span class="keyword">if</span> (onSeekColorListener != <span class="keyword">null</span>) &#123;</div><div class="line">                        touchCircleY = y;</div><div class="line">                        touchCircleX = x;</div><div class="line">                        onSeekColorListener.onSeekColorListener(getColor());</div><div class="line">                        postInvalidate();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnSeekColorListener</span><span class="params">(OnSeekColorListener listener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.onSeekColorListener = listener;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> color 0~360</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHSVColor</span><span class="params">(<span class="keyword">int</span> color)</span> </span>&#123;</div><div class="line">        colorHSV[<span class="number">0</span>] = color;</div><div class="line">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</div><div class="line">        postInvalidate();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> value 0~1.0</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHSVValue</span><span class="params">(<span class="keyword">float</span> value)</span> </span>&#123;</div><div class="line">        colorHSV[<span class="number">2</span>] = value;</div><div class="line">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</div><div class="line">        postInvalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> saturation 0~1.0</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHSVSaturation</span><span class="params">(<span class="keyword">float</span> saturation)</span> </span>&#123;</div><div class="line">        colorHSV[<span class="number">1</span>] = saturation;</div><div class="line">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</div><div class="line">        postInvalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(<span class="keyword">int</span> color)</span> </span>&#123;</div><div class="line">        Color.colorToHSV(color, colorHSV);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getColor</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> Color.HSVToColor(colorHSV);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> Parcelable <span class="title">onSaveInstanceState</span><span class="params">()</span> </span>&#123;</div><div class="line">        Bundle state = <span class="keyword">new</span> Bundle();</div><div class="line">        state.putFloatArray(<span class="string">"color"</span>, colorHSV);</div><div class="line">        state.putParcelable(<span class="string">"super"</span>, <span class="keyword">super</span>.onSaveInstanceState());</div><div class="line">        <span class="keyword">return</span> state;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestoreInstanceState</span><span class="params">(Parcelable state)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (state <span class="keyword">instanceof</span> Bundle) &#123;</div><div class="line">            Bundle bundle = (Bundle) state;</div><div class="line">            colorHSV = bundle.getFloatArray(<span class="string">"color"</span>);</div><div class="line">            <span class="keyword">super</span>.onRestoreInstanceState(bundle.getParcelable(<span class="string">"super"</span>));</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">super</span>.onRestoreInstanceState(state);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">dip2px</span><span class="params">(<span class="keyword">float</span> dpValue)</span> </span>&#123;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">float</span> scale = context.getResources().getDisplayMetrics().density;</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) (dpValue * scale + <span class="number">0.5f</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnSeekColorListener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onSeekColorListener</span><span class="params">(<span class="keyword">int</span> color)</span></span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;买了个ipad pro，发现用proCreate画画挺有意思，于是决定用Andorid实现一个自定义View画板效果。&lt;/p&gt;
    
    </summary>
    
      <category term="自定义控件" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>自定义View绘制顺序</title>
    <link href="http://yoursite.com/2017/11/12/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6-%E8%87%AA%E5%AE%9A%E4%B9%89View%E7%BB%98%E5%88%B6%E9%A1%BA%E5%BA%8F/"/>
    <id>http://yoursite.com/2017/11/12/自定义控件-自定义View绘制顺序/</id>
    <published>2017-11-12T04:18:15.000Z</published>
    <updated>2018-06-26T08:14:33.715Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsonff5trdj20ru0c8dia.jpg" alt=""></p>
<a id="more"></a>
<p><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsonfmwhs8j20q70e0tcc.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/5cc1a78ely1fsonff5trdj20ru0c8dia.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自定义控件" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>属性动画大集合</title>
    <link href="http://yoursite.com/2017/11/12/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6-%E5%B1%9E%E6%80%A7%E5%8A%A8%E7%94%BB/"/>
    <id>http://yoursite.com/2017/11/12/自定义控件-属性动画/</id>
    <published>2017-11-12T04:18:15.000Z</published>
    <updated>2018-06-26T08:26:10.800Z</updated>
    
    <content type="html"><![CDATA[<h3 id="属性动画思维导图"><a class="header-anchor" href="#属性动画思维导图">¶</a>属性动画思维导图</h3>
<p><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsonhp7d3dj21k31431a2.jpg" alt=""></p>
<a id="more"></a>
<h3 id="viewpropertyanimator"><a class="header-anchor" href="#viewpropertyanimator">¶</a>ViewPropertyAnimator</h3>
<ol>
<li>动画带by和不带by的不同
<ul>
<li>带有 By() 后缀的是增量版本的方法，每次调用会在控件在原有值的基础上改变by方法中的数。</li>
</ul>
</li>
</ol>
<h3 id="objectanimator"><a class="header-anchor" href="#objectanimator">¶</a>ObjectAnimator</h3>
<ol>
<li>如果是自定义控件，需要添加 setter / getter 方法</li>
<li>用 ObjectAnimator.ofXXX() 创建 ObjectAnimator 对象；</li>
</ol>
<h3 id="interpolator"><a class="header-anchor" href="#interpolator">¶</a>Interpolator</h3>
<ol>
<li>AccelerateDecelerateInterpolator
<ul>
<li>先加速再减速</li>
</ul>
</li>
<li>LinearInterpolator
<ul>
<li>匀速</li>
</ul>
</li>
<li>AccelerateInterpolator
<ul>
<li>加速</li>
</ul>
</li>
<li>DecelerateInterpolator
<ul>
<li>减速</li>
</ul>
</li>
<li>AnticipateInterpolator
<ul>
<li>先回拉一下再进行正常动画轨迹</li>
</ul>
</li>
<li>OvershootInterpolator
<ul>
<li>动画会超过目标值一些，然后再弹回来</li>
</ul>
</li>
<li>AnticipateOvershootInterpolator
<ul>
<li>开始前回拉，最后超过一些然后回弹</li>
</ul>
</li>
<li>BounceInterpolator
<ul>
<li>在目标值处弹跳</li>
</ul>
</li>
<li>CycleInterpolator
<ul>
<li>回弹的次数由曲线的周期决定</li>
</ul>
</li>
<li>PathInterpolator
<ul>
<li>定制的方式是使用一个 Path 对象来绘制出你要的动画完成度 / 时间完成度曲线</li>
</ul>
</li>
<li>FastOutLinearInInterpolator
<ul>
<li>贝塞尔曲线加速运动</li>
</ul>
</li>
<li>FastOutSlowInInterpolator
<ul>
<li>贝塞尔曲线先加速再减速</li>
</ul>
</li>
<li>LinearOutSlowInInterpolator
<ul>
<li>贝塞尔曲线持续减速
##$ ValueAnimator</li>
</ul>
</li>
<li>ViewPropertyAnimator 和 ObjectAnimator 的内部实现其实都是 ValueAnimator，ObjectAnimator 更是本来就是 ValueAnimator 的子类</li>
</ol>
<h3 id="概要-通用功能"><a class="header-anchor" href="#概要-通用功能">¶</a>概要: 通用功能</h3>
<ol>
<li>setDuration</li>
<li>setInterpolator</li>
</ol>
<h3 id="设置监听器"><a class="header-anchor" href="#设置监听器">¶</a>设置监听器</h3>
<ol>
<li>setListener
<ul>
<li>onAnimationStart</li>
<li>onAnimationEnd</li>
<li>onAnimationCancel</li>
<li>就算动画被取消，onAnimationEnd() 也会被调用，onAnimationCancel() 会先于 onAnimationEnd() 被调用</li>
</ul>
</li>
<li>setUpdateListener
<ul>
<li>onAnimationUpdate</li>
</ul>
</li>
<li>withStartAction/EndAction
<ul>
<li>withStartAction() / withEndAction() 是一次性的，在动画执行结束后就自动弃掉了，就算之后再重用 ViewPropertyAnimator 来做别的动画，用它们设置的回调也不会再被调用。而  set/addListener() 所设置的 AnimatorListener 是持续有效的，当动画重复执行时，回调总会被调用。</li>
<li>withEndAction() 设置的回调只有在动画正常结束时才会被调用，而在动画被取消时不会被执行。这点和 AnimatorListener.onAnimationEnd() 的行为是不一致的。</li>
</ul>
</li>
</ol>
<h3 id="概要-移除监听"><a class="header-anchor" href="#概要-移除监听">¶</a>概要: 移除监听</h3>
<pre><code>* set[Update]Listener(null)
</code></pre>
<h3 id="propertyvaluesholder"><a class="header-anchor" href="#propertyvaluesholder">¶</a>PropertyValuesHolder</h3>
<ol>
<li>直接用连写的方式来在一个动画中同时改变多个属性</li>
</ol>
<h3 id="设置监听器-v2"><a class="header-anchor" href="#设置监听器-v2">¶</a>设置监听器</h3>
<ol>
<li>addListener
<ul>
<li>onAnimationStart</li>
<li>onAnimationEnd</li>
<li>onAnimationCancel</li>
<li>onAnimationRepeat</li>
</ul>
</li>
<li>addUpdateListener
<ul>
<li>onAnimationUpdate</li>
</ul>
</li>
<li>addPauseListener</li>
<li>概要: 移除监听
<ul>
<li>remove[Update/Pause]Listener()</li>
</ul>
</li>
</ol>
<h3 id="typeevaluator"><a class="header-anchor" href="#typeevaluator">¶</a>TypeEvaluator</h3>
<ol>
<li>ArgbEvaluator</li>
<li>自定义 Evaluator</li>
<li>PointFEvaluator
<ul>
<li>ofObject()</li>
</ul>
</li>
<li>ofMultiFloat</li>
<li>ofMultiInt</li>
</ol>
<h3 id="animatorset"><a class="header-anchor" href="#animatorset">¶</a>AnimatorSet</h3>
<h3 id="propertyvaluesholder-v2"><a class="header-anchor" href="#propertyvaluesholder-v2">¶</a>PropertyValuesHolder</h3>
<h3 id="propertyvaluesholders-ofkeyframe-把同一个属性拆分"><a class="header-anchor" href="#propertyvaluesholders-ofkeyframe-把同一个属性拆分">¶</a>PropertyValuesHolders.ofKeyframe() 把同一个属性拆分</h3>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;属性动画思维导图&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#属性动画思维导图&quot;&gt;¶&lt;/a&gt;属性动画思维导图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/5cc1a78ely1fsonhp7d3dj21k31431a2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自定义控件" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="属性动画" scheme="http://yoursite.com/tags/%E5%B1%9E%E6%80%A7%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>Canvas对绘制的辅助</title>
    <link href="http://yoursite.com/2017/10/02/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6-Canvas%E5%AF%B9%E7%BB%98%E5%88%B6%E7%9A%84%E8%BE%85%E5%8A%A9/"/>
    <id>http://yoursite.com/2017/10/02/自定义控件-Canvas对绘制的辅助/</id>
    <published>2017-10-02T04:18:15.000Z</published>
    <updated>2018-06-26T08:03:16.387Z</updated>
    
    <content type="html"><![CDATA[<h3 id="canvas对绘制的辅助思维导图"><a class="header-anchor" href="#canvas对绘制的辅助思维导图">¶</a>Canvas对绘制的辅助思维导图</h3>
<p><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fson1xokr8j222e0sg7bj.jpg" alt=""></p>
<a id="more"></a>
<h3 id="范围裁切"><a class="header-anchor" href="#范围裁切">¶</a>范围裁切</h3>
<ol>
<li>clipRect</li>
<li>clipPath</li>
</ol>
<h3 id="几何变换"><a class="header-anchor" href="#几何变换">¶</a>几何变换</h3>
<ol>
<li>使用 Canvas 来做常见的二维变换
<ul>
<li>translate 平移</li>
<li>rotate 旋转</li>
<li>scale 缩放</li>
<li>skew 错切</li>
</ul>
</li>
<li>使用 Matrix 来做变换
<ul>
<li>使用 Matrix 来做常见变换
<ul>
<li>创建 Matrix 对象</li>
<li>调用 Matrix 的 pre/postTranslate/Rotate/Scale/Skew() 方法来设置几何变换</li>
<li>使用 Canvas.setMatrix(matrix) 或 Canvas.concat(matrix) 来把几何变换应用到 Canvas</li>
</ul>
</li>
<li>使用 Matrix 来做自定义变换
<ul>
<li>Matrix.setPolyToPoly</li>
</ul>
</li>
</ul>
</li>
<li>使用 Camera 来做三维变换
<ul>
<li>Camera.rotate*() 三维旋转
<ul>
<li>rotateX(deg) rotateY(deg) rotateZ(deg) rotate(x, y, z)</li>
<li>Camera 和 Canvas 一样也需要保存和恢复状态才能正常绘制</li>
</ul>
</li>
<li>Camera.translate</li>
<li>Camera.setLocation(x, y, z) 设置虚拟相机的位置
<ul>
<li>它的参数的单位不是像素，而是 inch，英寸</li>
</ul>
</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;canvas对绘制的辅助思维导图&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#canvas对绘制的辅助思维导图&quot;&gt;¶&lt;/a&gt;Canvas对绘制的辅助思维导图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/5cc1a78ely1fson1xokr8j222e0sg7bj.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自定义控件" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="Canvas" scheme="http://yoursite.com/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>文字的绘制</title>
    <link href="http://yoursite.com/2017/10/02/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6-%E6%96%87%E5%AD%97%E7%9A%84%E7%BB%98%E5%88%B6/"/>
    <id>http://yoursite.com/2017/10/02/自定义控件-文字的绘制/</id>
    <published>2017-10-02T04:18:15.000Z</published>
    <updated>2018-06-26T08:12:23.225Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文字的绘制思维导图"><a class="header-anchor" href="#文字的绘制思维导图">¶</a>文字的绘制思维导图</h3>
<p><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fson861mekj20zk0s3tgf.jpg" alt=""></p>
<a id="more"></a>
<h3 id="canvas-绘制文字的方式"><a class="header-anchor" href="#canvas-绘制文字的方式">¶</a>Canvas 绘制文字的方式</h3>
<ol>
<li>drawText</li>
<li>drawTextRun
<ul>
<li>可以设置文字的上下文（汉字和英文用不到）</li>
<li>设置文字的方向</li>
</ul>
</li>
<li>drawTextOnPath
<ul>
<li>沿着一条 Path 来绘制文字</li>
</ul>
</li>
<li>StaticLayout
<ul>
<li>解决换行的问题</li>
</ul>
</li>
</ol>
<h3 id="paint-对文字绘制的辅助"><a class="header-anchor" href="#paint-对文字绘制的辅助">¶</a>Paint 对文字绘制的辅助</h3>
<ol>
<li>设置显示效果类
<ul>
<li>setTextSize：设置文字大小</li>
<li>setTypeface：设置字体</li>
<li>setFakeBoldText：是否使用伪粗体</li>
<li>setStrikeThruText：是否加删除线</li>
<li>setUnderlineText：是否加下划线</li>
<li>setTextSkewX：设置文字横向错切角度，即文字倾斜度</li>
<li>setTextScaleX：设置文字横向放缩</li>
<li>setLetterSpacing：设置字符间距</li>
<li>setFontFeatureSettings：用 CSS 的 font-feature-settings 的方式来设置文字</li>
<li>setTextAlign：设置文字的对齐方式。一共有三个值：LEFT CETNER 和 RIGHT。默认值为 LEFT。</li>
<li>setTextLocale/setTextLocales：设置绘制所使用的 Locale</li>
<li>setHinting：通过向字体中加入 hinting 信息，让矢量字体在尺寸过小的时候得到针对性的修正，从而提高显示效果</li>
<li>setElegantTextHeight
<ul>
<li>把「大高个」文字的高度恢复为原始高度；</li>
<li>增大每行文字的上下边界，来容纳被加高了的文字。</li>
</ul>
</li>
<li>setSubpixelText：是否开启次像素级的抗锯齿</li>
<li>setLinearText</li>
</ul>
</li>
<li>测量文字尺寸类
<ul>
<li>getFontSpacing：* 获取推荐的行距。</li>
<li>getFontMetrics
<ul>
<li>获取 Paint 的 FontMetrics
<ul>
<li>baseline：* 文字显示的基准线</li>
<li>ascent / descent：限制普通字符的顶部和底部范围</li>
<li>top / bottom：限制所有字形（ glyph ）的顶部和底部范围</li>
<li>leading：上行的 bottom 线和下行的 top 线的距离</li>
</ul>
</li>
<li>ascent 和 descent 这两个值还可以通过 Paint.ascent() 和 Paint.descent()</li>
</ul>
</li>
<li>getTextBounds：获取文字的显示范围</li>
<li>measureText：测量文字的宽度并返回</li>
<li>getTextWidths：获取字符串中每个字符的宽度，并把结果填入参数 widths</li>
<li>breakText</li>
<li>光标相关
<ul>
<li>getRunAdvance：对于一段文字，计算出某个字符处光标的 x 坐标。 start end 是文字的起始和结束坐标；contextStart contextEnd 是上下文的起始和结束坐标；isRtl 是文字的方向；offset 是字数的偏移，即计算第几个字符处的光标。</li>
<li>getOffsetForAdvance：给出一个位置的像素值，计算出文字中最接近这个位置的字符偏移量（即第几个字符最接近这个坐标）。</li>
</ul>
</li>
<li>hasGlyph：检查指定的字符串中是否是一个单独的字形。</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;文字的绘制思维导图&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#文字的绘制思维导图&quot;&gt;¶&lt;/a&gt;文字的绘制思维导图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/5cc1a78ely1fson861mekj20zk0s3tgf.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自定义控件" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="Canvas" scheme="http://yoursite.com/tags/Canvas/"/>
    
      <category term="Paint" scheme="http://yoursite.com/tags/Paint/"/>
    
  </entry>
  
  <entry>
    <title>自定义绘制</title>
    <link href="http://yoursite.com/2017/08/30/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%98%E5%88%B6/"/>
    <id>http://yoursite.com/2017/08/30/自定义控件-自定义绘制/</id>
    <published>2017-08-30T14:18:15.000Z</published>
    <updated>2018-06-26T07:57:03.869Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自定义绘制思维导图"><a class="header-anchor" href="#自定义绘制思维导图">¶</a>自定义绘制思维导图</h3>
<p><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsomf4p6dsj24742doqv6.jpg" alt=""></p>
<a id="more"></a>
<h3 id="canvas-drawxxx"><a class="header-anchor" href="#canvas-drawxxx">¶</a>Canvas.drawXXX()</h3>
<ol>
<li>drawColor</li>
<li>canvas.drawRGB</li>
<li>canvas.drawARGB</li>
<li>drawCircle</li>
<li>drawRect</li>
<li>drawPoint</li>
<li>drawPoints</li>
<li>drawOval</li>
<li>drawLine</li>
<li>drawLines</li>
<li>drawRoundRect</li>
<li>drawArc</li>
<li>drawPath</li>
<li>drawBitmap</li>
<li>drawBitmapMesh
<ul>
<li>可以绘制具有网格拉伸效果的 Bitmap</li>
</ul>
</li>
<li>drawText</li>
</ol>
<h3 id="paint"><a class="header-anchor" href="#paint">¶</a>Paint</h3>
<ol>
<li>颜色
<ul>
<li>setColor(int color)</li>
<li>setARGB</li>
<li>setShader
<ul>
<li>LinearGradient 线性渐变
<ul>
<li>CLAMP:</li>
<li>MIRROR:</li>
<li>REPEAT:</li>
<li>概要: 三种着色规则</li>
</ul>
</li>
<li>RadialGradient 辐射渐变</li>
<li>SweepGradient 扫描渐变</li>
<li>BitmapShader</li>
<li>ComposeShader 混合着色器
<ul>
<li>ComposeShader() 在硬件加速下是不支持两个相同类型的 Shader 的</li>
</ul>
</li>
</ul>
</li>
<li>setColorFilter
<ul>
<li>LightingColorFilter
<ul>
<li>参数里的 mul 和  add 都是和颜色值格式相同的 int 值，其中 mul 用来和目标像素相乘，add 用来和目标像素相加</li>
</ul>
</li>
<li>PorterDuffColorFilter
<ul>
<li>使用一个指定的颜色和一种指定的 PorterDuff.Mode 来与绘制对象进行合成</li>
</ul>
</li>
<li>ColorMatrixColorFilter</li>
</ul>
</li>
<li>setXfermode
<ul>
<li>PorterDuffXfermode</li>
</ul>
</li>
<li>概要:  PorterDuff.Mode 在 Paint 一共有三处 API
<ul>
<li><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsomplwiv6j20h705176f.jpg" alt=""></li>
</ul>
</li>
<li>概要: Xfermode注意事项
<ul>
<li>使用离屏缓冲</li>
<li>控制好透明区域</li>
</ul>
</li>
</ul>
</li>
<li>效果
<ul>
<li>setTextSize</li>
<li>setPathEffect
<ul>
<li>DashPathEffect
<ul>
<li>使用虚线来绘制线条</li>
</ul>
</li>
<li>CornerPathEffect
<ul>
<li>把所有拐角变成圆角</li>
</ul>
</li>
<li>DiscretePathEffect
<ul>
<li>把线条进行随机的偏离，让轮廓变得乱七八糟
<ul>
<li>segmentLength  用来拼接的每个线段的长度</li>
<li>deviation 偏离量</li>
</ul>
</li>
</ul>
</li>
<li>PathDashPathEffect
<ul>
<li>使用一个 Path 来绘制「虚线」</li>
<li>最后一个参数 style，是用来指定拐弯改变的时候 shape 的转换方式
<ul>
<li>TRANSLATE：位移</li>
<li>ROTATE：旋转</li>
<li>MORPH：变体</li>
</ul>
</li>
</ul>
</li>
<li>SumPathEffect
<ul>
<li>分别按照两种 PathEffect 分别对目标进行绘制</li>
</ul>
</li>
<li>ComposePathEffect
<ul>
<li>它是先对目标 Path 使用一个 PathEffect，然后再对这个改变后的 Path 使用另一个 PathEffect</li>
</ul>
</li>
<li>PathEffect 在有些情况下不支持硬件加速
<ul>
<li>Canvas.drawLine() 和 Canvas.drawLines() 方法画直线时，setPathEffect() 是不支持硬件加速的；</li>
<li>PathDashPathEffect 对硬件加速的支持也有问题，所以当使用 PathDashPathEffect 的时候，最好也把硬件加速关了。</li>
</ul>
</li>
</ul>
</li>
<li>setShadowLayer
<ul>
<li>在之后的绘制内容下面加一层阴影</li>
</ul>
</li>
<li>setMaskFilter
<ul>
<li>BlurMaskFilter
<ul>
<li>模糊效果的 MaskFilter
<ul>
<li>NORMAL: 内外都模糊绘制</li>
<li>SOLID: 内部正常绘制，外部模糊</li>
<li>INNER: 内部模糊，外部不绘制</li>
<li>OUTER: 内部不绘制，外部模糊（什么鬼？）</li>
</ul>
</li>
</ul>
</li>
<li>EmbossMaskFilter
<ul>
<li>浮雕效果的 MaskFilter</li>
</ul>
</li>
</ul>
</li>
<li>setStyle(Paint.Style style)</li>
<li>setAntiAlias</li>
<li>setStrokeWidth</li>
<li>setStrokeCap
<ul>
<li>BUTT 平头、ROUND 圆头、SQUARE 方头</li>
</ul>
</li>
<li>setStrokeJoin
<ul>
<li>MITER 尖角、 BEVEL 平角和 ROUND 圆角</li>
</ul>
</li>
<li>setStrokeMiter
<ul>
<li>它用于设置 MITER 型拐角的延长线的最大值</li>
</ul>
</li>
<li>setDither
<ul>
<li>设置图像的抖动</li>
</ul>
</li>
<li>setFilterBitmap
<ul>
<li>设置是否使用双线性过滤来绘制 Bitmap</li>
</ul>
</li>
<li>getFillPath
<ul>
<li>getFillPath(src, dst) 会计算出实际 Path，然后把结果保存在 dst 里。</li>
</ul>
</li>
<li>getTextPath</li>
<li>概要: 色彩优化</li>
<li>概要: 线条形状</li>
<li>概要: 获取绘制的 Path</li>
</ul>
</li>
<li>文字绘制相关</li>
<li>初始化类
<ul>
<li>reset
<ul>
<li>重置 Paint 的所有属性为默认值。相当于重新 new 一个。</li>
</ul>
</li>
<li>set
<ul>
<li>把 src 的所有属性全部复制过来。</li>
</ul>
</li>
<li>setFlags
<ul>
<li>paint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="path"><a class="header-anchor" href="#path">¶</a>Path</h3>
<ol>
<li>addXxx
<ul>
<li>addCircle</li>
<li>addOval</li>
<li>addRect</li>
<li>addRoundRect</li>
<li>addArc</li>
<li>addPath</li>
</ul>
</li>
<li>xxxTo
<ul>
<li>lineTo/rLineTo</li>
<li>quadTo / rQuadTo</li>
<li>cubicTo / rCubicTo</li>
<li>moveTo / rMoveTo</li>
<li>arcTo
<ul>
<li>forceMoveTo:true强制移动到新的位置</li>
</ul>
</li>
</ul>
</li>
<li>close()封闭当前子图形</li>
<li>Path.setFillType
<ul>
<li>EVEN_ODD
<ul>
<li>even-odd rule （奇偶原则）：对于平面中的任意一点，向任意方向射出一条射线，这条射线和图形相交的次数（相交才算，相切不算哦）如果是奇数，则这个点被认为在图形内部，是要被涂色的区域；如果是偶数，则这个点被认为在图形外部，是不被涂色的区域。</li>
</ul>
</li>
<li>WINDING （默认值）
<ul>
<li>非零环绕数原则</li>
</ul>
</li>
<li>INVERSE_EVEN_ODD</li>
<li>INVERSE_WINDING</li>
</ul>
</li>
<li>setLastPoint
<ul>
<li>重置当前path中最后一个点位置，如果在绘制之前调用，效果和moveTo相同</li>
</ul>
</li>
<li>isEmpty
<ul>
<li>判断Path是否为空</li>
</ul>
</li>
<li>isRect
<ul>
<li>判断Path是否是一个矩形</li>
</ul>
</li>
<li>set
<ul>
<li>用新的路径替换到当前路径所有内容</li>
</ul>
</li>
<li>offset
<ul>
<li>对当前路径之前的操作进行偏移(不会影响之后的操作)</li>
</ul>
</li>
<li>op
<ul>
<li>对两个Path进行布尔运算(即取交集、并集等操作)
<ul>
<li>DIFFERENCE
<ul>
<li>Path1中减去Path2后剩下的部分</li>
</ul>
</li>
<li>REVERSE_DIFFERENCE
<ul>
<li>Path2中减去Path1后剩下的部分</li>
</ul>
</li>
<li>INTERSECT
<ul>
<li>Path1与Path2相交的部分</li>
</ul>
</li>
<li>UNION
<ul>
<li>包含全部Path1和Path2</li>
</ul>
</li>
<li>XOR
<ul>
<li>包含Path1与Path2但不包括两者相交的部分</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>computeBounds
<ul>
<li>计算Path的边界</li>
</ul>
</li>
<li>reset, rewind
<ul>
<li>清除Path中的内容，reset不保留内部数据结构，但会保留FillType.rewind会保留内部的数据结构，但不保留FillType</li>
</ul>
</li>
<li>transform
<ul>
<li>矩阵变换</li>
</ul>
</li>
</ol>
<h3 id="pathmeasure"><a class="header-anchor" href="#pathmeasure">¶</a>PathMeasure</h3>
<ol>
<li>setPath
<ul>
<li>关联一个Path</li>
</ul>
</li>
<li>isClosed
<ul>
<li>是否闭合</li>
</ul>
</li>
<li>getLength
<ul>
<li>获取Path的长度</li>
</ul>
</li>
<li>nextContour
<ul>
<li>跳转到下一个轮廓</li>
</ul>
</li>
<li>getSegment
<ul>
<li>截取片段</li>
</ul>
</li>
<li>getPosTan
<ul>
<li>用于得到路径上某一长度的位置以及该位置的正切值</li>
</ul>
</li>
<li>getMatrix
<ul>
<li>获取指定长度的位置坐标及该点Matrix</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;自定义绘制思维导图&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#自定义绘制思维导图&quot;&gt;¶&lt;/a&gt;自定义绘制思维导图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/5cc1a78ely1fsomf4p6dsj24742doqv6.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自定义控件" scheme="http://yoursite.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="自定义绘制" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%98%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>数据链路层</title>
    <link href="http://yoursite.com/2017/07/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
    <id>http://yoursite.com/2017/07/18/计算机网络-数据链路层/</id>
    <published>2017-07-18T02:22:15.000Z</published>
    <updated>2018-06-26T07:27:18.046Z</updated>
    
    <content type="html"><![CDATA[<h3 id="主要内容"><a class="header-anchor" href="#主要内容">¶</a>主要内容</h3>
<ol>
<li>点对点信道和广播信道的特点，以及两种信道使用的协议（PPP和CSMA/CD）。</li>
<li>数据链路层的三个基本问题：封装成帧、透明传输和差错检测。</li>
<li>以太网MAC层的硬件地址。</li>
<li>适配器、转发器、集线器、网桥、以太网交换机的作用和使用场合。</li>
</ol>
<a id="more"></a>
<h3 id="使用点对点信道的数据链路层"><a class="header-anchor" href="#使用点对点信道的数据链路层">¶</a>使用点对点信道的数据链路层</h3>
<ol>
<li>数据链路和帧</li>
<li>三个基本问题
<ol>
<li>封装成帧：在数据前后分别添加首部和尾部，</li>
<li>透明传输</li>
<li>差错检测</li>
</ol>
</li>
</ol>
<h3 id="点对点协议ppp"><a class="header-anchor" href="#点对点协议ppp">¶</a>点对点协议PPP</h3>
<ol>
<li>PPP协议的特点
<ol>
<li>简单：接收方没收到一个帧，就进行CRC检验，如果CRC检验正确，就收下这个帧，反之，就丢弃这个帧，其他什么都不做。</li>
<li>封装成帧，规定特殊的字符作为帧定界符，以便接收端从收到的比特流中能准确地找出帧的开始和结束位置。</li>
<li>透明性，如果数据中碰巧出现了和帧定界符一样的比特组合时，就要采取有效的措施来解决这个问题。</li>
<li>多种网络层协议，能够在同一条物理链路上同时支持多种网络层协议的运行。</li>
<li>多种类型链路，能够在多种类型的链路上运行。</li>
<li>差错检测，能够对接收端收到的帧进行检测，并立即丢弃有差错的帧。</li>
<li>检测连接状态，能够及时自动检测出链路是否处于正常工作状态。</li>
<li>最大传输单元，对每一种类型的点对点链路设置最大传送单元MTU的标准默认值，促进各种实现之间的互操作性。MTU是数据链路层的帧可以载荷的数据部分的最大长度，而不是帧的总长度。</li>
<li>网络层地址协商，是通信的两个网络层的实体能够通过协商知道或能够配置彼此的网络层地址。</li>
<li>数据压缩协商，提供一种方法来协商使用数据压缩算法。</li>
<li>PPP协议不支持多点线路（即一个主站轮流和链路上的多个从站进行通信），而只支持点对点的链路通信。此外，PPP协议只支持全双工通信。</li>
</ol>
</li>
<li>PPP协议的组成（三个组成部分）
<ol>
<li>将IP数据报封装到串行链路的方法。</li>
<li>建立、配置和测试数据链路连接的链路控制协议LCP。</li>
<li>网络控制协议NCP</li>
</ol>
</li>
<li>PPP协议的帧格式
<ol>
<li>各字段的意义
<ol>
<li>PPP帧的首部和尾部分别为四个字段和两个字段。首部的第一个字段和尾部的第二个字段都是标志F，规定为0x7E，标志字段表示一个帧的开始或结束。因此标志字段是PPP帧的定界符。连续两帧之间只需要用一个标志字段，如果出现连续两个标志字段，就表示一个空帧，应当丢弃。</li>
<li>信息字段的长度是可变的，不超过1500字节。</li>
<li>尾部中的第一个字段是使用CRC的帧检验序列FCS。</li>
</ol>
</li>
<li>字节填充
<ol>
<li>把信息字段中出现的每一个0x7E字节转变成为2字节序列(0x7D,0x5E)</li>
<li>若信息字段中出现一个0X7D的字节。则吧0x7D转变为2字节序列(0x7D,0x5D)</li>
<li>若信息字段中出现ASCII码的控制字符，则在该字符前面加入一个0x7D字节，同时将该字符的编码加以改变。</li>
</ol>
</li>
<li>零比特填充</li>
</ol>
</li>
<li>PPP协议的工作状态</li>
</ol>
<h3 id="使用广播信道的数据链路层"><a class="header-anchor" href="#使用广播信道的数据链路层">¶</a>使用广播信道的数据链路层</h3>
<ol>
<li>局域网的数据链路层
<ol>
<li>局域网的特点
<ol>
<li>具有广播功能，从一个站点可以很方便地访问全网</li>
<li>便于系统的扩展和逐渐演变，各设备的位置可灵活调整和改变</li>
<li>提高了系统的可靠性、可用性和生存性</li>
</ol>
</li>
<li>共享信道的实现
<ol>
<li>静态划分信道</li>
<li>动态媒体接入控制
<ol>
<li>随机接入（以太网采用的是随机接入）</li>
<li>受控接入</li>
</ol>
</li>
</ol>
</li>
<li>以太网的两个标准</li>
<li>适配器的作用</li>
</ol>
</li>
<li>CSMA/CD协议（载波监听多点接入/碰撞检测）
<ol>
<li>多点接入</li>
<li>载波监听</li>
<li>碰撞检测</li>
</ol>
</li>
<li>使用集线器的星形拓扑
<ol>
<li>使用集线器的以太网在逻辑仍是一个总线网，各站共享逻辑上的总线，使用的还是CSMA/CD协议。网络中的各站必须竞争对传输媒体的控制，并且在同一时刻至多只允许一个站发送数据。</li>
<li>一个集线器有许多接口，很像一个多接口的转发器。</li>
<li>集线器工作在物理层，它的每个接口仅仅简单地转发比特。</li>
<li>集线器采用了专门的芯片，进行自适应串音回波抵消。</li>
</ol>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;主要内容&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#主要内容&quot;&gt;¶&lt;/a&gt;主要内容&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;点对点信道和广播信道的特点，以及两种信道使用的协议（PPP和CSMA/CD）。&lt;/li&gt;
&lt;li&gt;数据链路层的三个基本问题：封装成帧、透明传输和差错检测。&lt;/li&gt;
&lt;li&gt;以太网MAC层的硬件地址。&lt;/li&gt;
&lt;li&gt;适配器、转发器、集线器、网桥、以太网交换机的作用和使用场合。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="数据链路层" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>物理层</title>
    <link href="http://yoursite.com/2017/07/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82/"/>
    <id>http://yoursite.com/2017/07/10/计算机网络-物理层/</id>
    <published>2017-07-10T02:22:15.000Z</published>
    <updated>2018-06-26T07:24:47.975Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>物理层的基本概念
<ol>
<li>考虑的是怎样才能在连接各种计算机的传输媒体 上传输数据比特流，而不是指具体的媒体。</li>
<li>确定传输媒体的接口有关的一些特性
<ul>
<li>机械特性</li>
<li>电气特性</li>
<li>功能特性</li>
<li>过程特性</li>
</ul>
</li>
</ol>
</li>
</ol>
<a id="more"></a>
<ol start="2">
<li>数据通信的基础知识
<ol>
<li>数据通信系统的模型
<ul>
<li>源系统：
<ul>
<li>原点</li>
<li>发送器</li>
</ul>
</li>
<li>传输系统</li>
<li>目的系统
<ul>
<li>接收器</li>
<li>终点</li>
</ul>
</li>
<li>模拟信号和数字信号</li>
</ul>
</li>
<li>有关信道的几个基本概念
<ul>
<li>单向通信（单工通信）</li>
<li>双向交替通信（半双工通信）</li>
<li>双向同时通信（全双工通信）</li>
<li>基带调制（编码）和带通调制</li>
<li>常用编码方式
<ul>
<li>不归零制</li>
<li>归零制-</li>
<li>曼彻斯特编码</li>
<li>差分曼彻斯特编码</li>
</ul>
</li>
<li>基本的带通调制方法
<ul>
<li>调幅</li>
<li>调频</li>
<li>调相</li>
<li>正交振幅调制QAM</li>
</ul>
</li>
</ul>
</li>
<li>信道的极限容量
<ul>
<li>限制码元在信道上传输速率的因素有两个
<ul>
<li>信道能够通过的频率范围</li>
<li>信噪比</li>
</ul>
</li>
</ul>
</li>
<li>物理层下面的传输媒体
<ul>
<li>导引型传输媒体
<ul>
<li>双绞线</li>
<li>同轴电缆</li>
<li>光缆：多模光纤和单模光纤</li>
</ul>
</li>
<li>非导引型传输媒体
<ul>
<li>微波接力通信
<ul>
<li>微波波段频率很高，其频段范围也很宽，通信信道的容量很大</li>
<li>因为工业干扰和天电干扰的主要频谱成分比微波频率低得多，对微波通信的危害比对短波和米波通信小得多，因此微波传输质量较高。</li>
<li>与相同容量和长度的电缆载波通信比较，微波接力通信建设投资少，见效快，易于跨越山区，江河。</li>
</ul>
</li>
<li>卫星通信</li>
</ul>
</li>
</ul>
</li>
<li>信道复用技术
<ul>
<li>频分复用</li>
<li>时分复用</li>
<li>统计时分复用</li>
<li>波分复用：光的频分复用</li>
<li>码分复用</li>
</ul>
</li>
<li>数字传输系统</li>
<li>宽带接入技术
<ul>
<li>ADSL非对称数字用户线：用数字技术对现有的模拟电话用户进行改造。</li>
<li>光纤同轴混合网：把原有有线电视网中的同轴电缆主干部分换成光纤，然后通过同轴电缆传送到每个家庭。</li>
<li>FTTx技术</li>
</ul>
</li>
</ol>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;物理层的基本概念
&lt;ol&gt;
&lt;li&gt;考虑的是怎样才能在连接各种计算机的传输媒体 上传输数据比特流，而不是指具体的媒体。&lt;/li&gt;
&lt;li&gt;确定传输媒体的接口有关的一些特性
&lt;ul&gt;
&lt;li&gt;机械特性&lt;/li&gt;
&lt;li&gt;电气特性&lt;/li&gt;
&lt;li&gt;功能特性&lt;/li&gt;
&lt;li&gt;过程特性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="物理层" scheme="http://yoursite.com/tags/%E7%89%A9%E7%90%86%E5%B1%82/"/>
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络概述</title>
    <link href="http://yoursite.com/2017/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/"/>
    <id>http://yoursite.com/2017/06/28/计算机网络-计算机网络概述/</id>
    <published>2017-06-28T10:22:15.000Z</published>
    <updated>2018-06-26T07:18:53.308Z</updated>
    
    <content type="html"><![CDATA[<h3 id="计算机网络在信息时代的作用"><a class="header-anchor" href="#计算机网络在信息时代的作用">¶</a>计算机网络在信息时代的作用</h3>
<ol>
<li>三大网络：电信网络，有线电视网络，计算机网络。</li>
<li>Internet的叫法：因特网，互联网</li>
<li>互联网的两个基本特点：连通性和共享</li>
</ol>
<a id="more"></a>
<h3 id="互联网概述"><a class="header-anchor" href="#互联网概述">¶</a>互联网概述</h3>
<ol>
<li>网络的网络。</li>
<li>计算机网络由结点和链路组成</li>
<li>互联网基础结构发展的三个阶段
<ol>
<li>第一个阶段的互联网不能够叫做互联网，而应该称之为互连网，因为它是把几个计算机网络给互连起来。（ARPANET使用TCP/IP协议将计算机连接起来）</li>
<li>三级计算机网络，分为主干网、地区网和校园网（企业网），覆盖了全美主要的大学和研究所。（NSFNET国家科学基金网）</li>
<li>多层次ISP结构的互联网。（ISP 互联网服务提供者(商)），分主干ISP、地区ISP、和本地ISP。
<ul>
<li>互联网交换点IXP的作用：允许两个网络直接相连并交换分组，不需要通过第三个网络（更高层ISP）来转发分组。</li>
</ul>
</li>
</ol>
</li>
<li>互联网的标准化工作
<ol>
<li>标准化制定过早或过晚都是不好的。</li>
<li>互联网协会对互联网进行全面管理。</li>
<li>互联网正式标准的制定需要经过三个阶段
<ul>
<li>互联网草案</li>
<li>建议标准</li>
<li>互联网标准</li>
</ul>
</li>
</ol>
</li>
</ol>
<h3 id="互联网的组成"><a class="header-anchor" href="#互联网的组成">¶</a>互联网的组成</h3>
<ol>
<li>边缘部分：主机
<ol>
<li>计算机通信方式
<ul>
<li>客户-服务器方式（C/S方式）：客户发起通信，需要知道服务器程序的地址，但是不需要特殊的硬件和复杂的操作系统；服务器需要专门用来提供服务的程序，可以同时处理多个客户端点的请求，需要程序一直运行并被动等待客户端发送过来的通信请求，一般需要强大的硬件和高级的操作系统的支持。</li>
<li>对等连接方式（P2P方式）：不需要区分哪个是服务请求方，哪个是服务提供方。</li>
</ul>
</li>
</ol>
</li>
<li>核心部分：路由器
<ol>
<li>转发收到的分组，实现分组交换的关键构建</li>
<li>电路交换的缺陷：在通话的全部时间内，通话的两个用户怒适中占用端到端的通信资源。</li>
<li>分组交换的优点：
<ul>
<li>高效：在分组传输的过程中动态分配传输带宽，对通信链路逐段占用</li>
<li>灵活：为每一个分组独立地选择最合适的转发路由</li>
<li>迅速：以分组作为传送单位，可以不先建立连接就能向其他主机发送分组</li>
<li>可靠：保证可靠性的网络协议，分布式多路由的分组交换网，使网络由很好的生存性。</li>
</ul>
</li>
</ol>
</li>
</ol>
<h3 id="计算机网络在我国的发展"><a class="header-anchor" href="#计算机网络在我国的发展">¶</a>计算机网络在我国的发展</h3>
<ol>
<li>1994年4月20日用64kbit/s专线正式接入互联网。同年5月中国科学院高能物理研究所设立我国的第一个万维网服务器。同年9月中国公用计算机CHINANET正式启动。
<ol>
<li>中国电信互联网CHINANET（原来的中国公用计算机互联网）</li>
<li>中国联通互联网UNINET</li>
<li>中国移动互联网CMNET</li>
<li>中国教育和科研计算机网CERNET</li>
<li>中国科学技术网CSTNET</li>
</ol>
</li>
</ol>
<h3 id="计算机网络的类别"><a class="header-anchor" href="#计算机网络的类别">¶</a>计算机网络的类别</h3>
<ol>
<li>按照作用范围分类：广域网WAN，城域网MAN，局域网LAN，个人区域网PAN。</li>
<li>按照网络的使用者分类：公用网，专用网</li>
</ol>
<h3 id="计算机网络的性能"><a class="header-anchor" href="#计算机网络的性能">¶</a>计算机网络的性能</h3>
<ol>
<li>速率</li>
<li>带宽</li>
<li>吞吐量</li>
<li>时延：发送时延，传播时延，处理时延，排队时延。</li>
<li>时延带宽积:以比特为单位的链路长度</li>
<li>往返时间RTT：</li>
<li>利用率：D = D。/(1-U)，时延等于空闲时延除以1减去利用率的差。</li>
</ol>
<h3 id="计算机网络的非性能特征"><a class="header-anchor" href="#计算机网络的非性能特征">¶</a>计算机网络的非性能特征</h3>
<ol>
<li>费用</li>
<li>质量</li>
<li>标准化</li>
<li>可靠性</li>
<li>课扩展性和可升级性</li>
<li>易于管理和维护</li>
</ol>
<h3 id="计算机网络体系结构"><a class="header-anchor" href="#计算机网络体系结构">¶</a>计算机网络体系结构</h3>
<ol>
<li>具有五层协议的体系结构
<ol>
<li>开放系统互联基本参考模型（OSI/RM）</li>
<li>计算机网络的各层及其协议的集合就是网络的体系结构</li>
<li>体系结构是抽象的，而实现是具体的，是真正在运行的计算机硬件和软件</li>
<li>应用层：通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。</li>
<li>运输层：负责向两台主机中进程间的通信提供通用的数据传输服务。（传输控制协议TCP,数据传输单位是报文段，用户数据报协议UDP，数据传输单位是用户数据报。）</li>
<li>网络层：把运输层产生的报文段或用户数据报封装成分组或包进行传送。又称为网际层和IP层</li>
<li>数据链路层：把网络层交下来的IP数据报组装成帧，在两个相邻结点间的链路上传送帧。</li>
<li>物理层：传输的数据的单位是比特。</li>
</ol>
</li>
<li>实体、协议、服务和服务访问点
<ol>
<li>实体：任何可发送或接收信息的硬件或软件过程</li>
<li>协议：控制两个对等实体进行通信的规则的集合
<ul>
<li>协议和服务的区别：协议是水平的，是控制对等实体之间的通信规则，服务是垂直的，是有下层向上层通过层间接口提供的。</li>
<li>服务访问点SAP：系统相邻两层的实体进行交互的地方。</li>
</ul>
</li>
</ol>
</li>
<li>TCP/IP的体系结构
<ul>
<li><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsolq0bhxsj20dy06qdgv.jpg" alt=""></li>
<li><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsolpxn0m1j206z04bmx8.jpg" alt=""></li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;计算机网络在信息时代的作用&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#计算机网络在信息时代的作用&quot;&gt;¶&lt;/a&gt;计算机网络在信息时代的作用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;三大网络：电信网络，有线电视网络，计算机网络。&lt;/li&gt;
&lt;li&gt;Internet的叫法：因特网，互联网&lt;/li&gt;
&lt;li&gt;互联网的两个基本特点：连通性和共享&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>用Java实现各种排序</title>
    <link href="http://yoursite.com/2017/06/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%94%A8Java%E5%AE%9E%E7%8E%B0%E5%90%84%E7%A7%8D%E6%8E%92%E5%BA%8F/"/>
    <id>http://yoursite.com/2017/06/18/数据结构-用Java实现各种排序/</id>
    <published>2017-06-18T13:22:15.000Z</published>
    <updated>2018-06-26T07:01:17.049Z</updated>
    
    <content type="html"><![CDATA[<p>用Java实现各种排序。</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sort</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] arrs, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> temp = arrs[i];</div><div class="line">        arrs[i] = arrs[j];</div><div class="line">        arrs[j] = temp;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 冒泡排序基本版</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] arrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrs.length; i++) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = arrs.length - <span class="number">2</span>; j &gt;= i; j--) &#123;</div><div class="line">                System.out.println(<span class="string">"--------------------"</span>);</div><div class="line">                <span class="keyword">if</span> (arrs[j] &gt; arrs[j + <span class="number">1</span>]) &#123;</div><div class="line">                    swap(arrs, j, j + <span class="number">1</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 冒泡排序改进版</div><div class="line">     * 改进版的效率要高很多，遍历的次数明显减少了。</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">bubbleSort2</span><span class="params">(<span class="keyword">int</span>[] arrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrs.length &amp;&amp; flag; i++) &#123;</div><div class="line">            flag = <span class="keyword">false</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = arrs.length - <span class="number">2</span>; j &gt;= i; j--) &#123;</div><div class="line">                System.out.println(<span class="string">"--------------------"</span>);</div><div class="line">                <span class="keyword">if</span> (arrs[j] &gt; arrs[j + <span class="number">1</span>]) &#123;</div><div class="line">                    swap(arrs, j, j + <span class="number">1</span>);</div><div class="line">                    flag = <span class="keyword">true</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBubbleSort</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] arrs = &#123;<span class="number">12</span>, <span class="number">3</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">66</span>, <span class="number">78</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">88</span>&#125;;</div><div class="line">        bubbleSort(arrs);</div><div class="line">        System.out.println(Arrays.toString(arrs));</div><div class="line"></div><div class="line">        bubbleSort2(arrs);</div><div class="line">        System.out.println(Arrays.toString(arrs));</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 简单选择排序算法</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrs.length; i++) &#123;</div><div class="line">            <span class="keyword">int</span> min = i;<span class="comment">//默认定义第一个元素的下标是最小元素的下标</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arrs.length; j++) &#123;</div><div class="line">                System.out.println(<span class="string">"++++++++++++++++++"</span>);</div><div class="line">                <span class="keyword">if</span> (arrs[min] &gt; arrs[j]) &#123;  <span class="comment">//让第一个元素与剩下的所有元素比较，取出最小元素的下标赋值给min</span></div><div class="line">                    min = j;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (i != min) &#123;<span class="comment">//如果最小元素的下标不是第一个了，证明中间有比第一个元素要小的元素，让第一个元素与该元素进行交换</span></div><div class="line">                swap(arrs, i, min);</div><div class="line">                System.out.println(<span class="string">"--------------------"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectSort</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] arrs = &#123;<span class="number">12</span>, <span class="number">3</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">66</span>, <span class="number">78</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">88</span>&#125;;</div><div class="line">        selectSort(arrs);</div><div class="line">        System.out.println(Arrays.toString(arrs));</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 直接插入排序算法</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span>[] arrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arrs.length; i++) &#123;</div><div class="line">            <span class="keyword">int</span> temp = arrs[i]; <span class="comment">//取出一个待插入的记录</span></div><div class="line">            <span class="keyword">int</span> j;</div><div class="line">            <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</div><div class="line">                System.out.println(<span class="string">"--------------------"</span>);</div><div class="line">                <span class="keyword">if</span> (temp &lt; arrs[j]) &#123;   <span class="comment">//从后往前遍历已经排好序的有序表，判断带插入记录与其中每个记录的大小，如果待插入记录要小于有序表中的某个记录，就将有序表中该记录往后移动，空出一个位置，如果不小于，则终止循环。</span></div><div class="line">                    arrs[j + <span class="number">1</span>] = arrs[j];</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            arrs[j + <span class="number">1</span>] = temp;    <span class="comment">//将空出的这个位置赋值为待插入的元素。</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsertSort</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] arrs = &#123;<span class="number">12</span>, <span class="number">3</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">66</span>, <span class="number">78</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">88</span>&#125;;</div><div class="line">        insertSort(arrs);</div><div class="line">        System.out.println(Arrays.toString(arrs));</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 希尔排序</div><div class="line">     * 和直接插入排序的算法形式是一样的，只不过加入了一个步长。</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] arrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> temp;</div><div class="line">        <span class="keyword">int</span> j;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> increment = arrs.length / <span class="number">2</span>; increment &gt; <span class="number">0</span>; increment /= <span class="number">2</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = increment; i &lt; arrs.length; i++) &#123;</div><div class="line">                temp = arrs[i];</div><div class="line">                <span class="keyword">for</span> (j = i - increment; j &gt;= <span class="number">0</span>; j -= increment) &#123;</div><div class="line">                    System.out.println(<span class="string">"--------------------"</span>);</div><div class="line">                    <span class="keyword">if</span> (temp &lt; arrs[j]) &#123;</div><div class="line">                        arrs[j + increment] = arrs[j];</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                arrs[j + increment] = temp;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testShellSort</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] arrs = &#123;<span class="number">12</span>, <span class="number">3</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">66</span>, <span class="number">78</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">88</span>&#125;;</div><div class="line">        shellSort(arrs);</div><div class="line">        System.out.println(Arrays.toString(arrs));</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 堆排序</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">heapSort</span><span class="params">(<span class="keyword">int</span>[] arrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> i;</div><div class="line">        <span class="keyword">for</span> (i = arrs.length / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;<span class="comment">// 构建一个大顶堆</span></div><div class="line">            adjustHeap(arrs, i, arrs.length - <span class="number">1</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (i = arrs.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;<span class="comment">// 将堆顶记录和当前未经排序子序列的最后一个记录交换</span></div><div class="line">            <span class="keyword">int</span> temp = arrs[<span class="number">0</span>];</div><div class="line">            arrs[<span class="number">0</span>] = arrs[i];</div><div class="line">            arrs[i] = temp;</div><div class="line">            adjustHeap(arrs, <span class="number">0</span>, i - <span class="number">1</span>);<span class="comment">// 将a中前i-1个记录重新调整为大顶堆</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">adjustHeap</span><span class="params">(<span class="keyword">int</span>[] arrs, <span class="keyword">int</span> i, <span class="keyword">int</span> len)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> temp, j;</div><div class="line">        temp = arrs[i];</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">2</span> * i; j &lt; len; j *= <span class="number">2</span>) &#123;<span class="comment">// 沿关键字较大的孩子结点向下筛选</span></div><div class="line">            <span class="keyword">if</span> (j &lt; len &amp;&amp; arrs[j] &lt; arrs[j + <span class="number">1</span>])</div><div class="line">                ++j; <span class="comment">// j为关键字中较大记录的下标</span></div><div class="line">            <span class="keyword">if</span> (temp &gt;= arrs[j])</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            arrs[i] = arrs[j];</div><div class="line">            i = j;</div><div class="line">        &#125;</div><div class="line">        arrs[i] = temp;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHeapSort</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] arrs = &#123;<span class="number">12</span>, <span class="number">3</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">66</span>, <span class="number">78</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">88</span>&#125;;</div><div class="line">        heapSort(arrs);</div><div class="line">        System.out.println(Arrays.toString(arrs));</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 归并排序</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] arrs)</span> </span>&#123;</div><div class="line">        mSort(arrs, <span class="number">0</span>, arrs.length - <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">mSort</span><span class="params">(<span class="keyword">int</span>[] arrs, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span>&#123;</div><div class="line"><span class="comment">//      int mid = (low + high) / 2;</span></div><div class="line">        <span class="keyword">int</span> mid = low + (high - low) / <span class="number">2</span>;</div><div class="line">        <span class="keyword">if</span> (low &lt; high) &#123;</div><div class="line">            <span class="comment">//左边</span></div><div class="line">            mSort(arrs, low, mid);</div><div class="line">            <span class="comment">//右边</span></div><div class="line">            mSort(arrs, mid + <span class="number">1</span>, high);</div><div class="line">            <span class="comment">//左右合并</span></div><div class="line">            merge(arrs, low, mid, high);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span>  <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] arrs, <span class="keyword">int</span> low, <span class="keyword">int</span> mid, <span class="keyword">int</span> high)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[high - low + <span class="number">1</span>];</div><div class="line">        <span class="keyword">int</span> i = low;<span class="comment">// 左指针</span></div><div class="line">        <span class="keyword">int</span> j = mid + <span class="number">1</span>;<span class="comment">// 右指针</span></div><div class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</div><div class="line">        <span class="comment">// 把较小的数先移到新数组中</span></div><div class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= high) &#123;</div><div class="line">            <span class="keyword">if</span> (arrs[i] &lt; arrs[j]) &#123;</div><div class="line">                temp[k++] = arrs[i++];</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                temp[k++] = arrs[j++];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 把左边剩余的数移入数组</span></div><div class="line">        <span class="keyword">while</span> (i &lt;= mid) &#123;</div><div class="line">            temp[k++] = arrs[i++];</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 把右边边剩余的数移入数组</span></div><div class="line">        <span class="keyword">while</span> (j &lt;= high) &#123;</div><div class="line">            temp[k++] = arrs[j++];</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 把新数组中的数覆盖nums数组</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k2 = <span class="number">0</span>; k2 &lt; temp.length; k2++) &#123;</div><div class="line">            arrs[k2 + low] = temp[k2];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMergeSort</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] arrs = &#123;<span class="number">12</span>, <span class="number">3</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">9</span>, <span class="number">66</span>, <span class="number">78</span>, <span class="number">0</span>, <span class="number">54</span>, <span class="number">88</span>&#125;;</div><div class="line">        mergeSort(arrs);</div><div class="line">        System.out.println(Arrays.toString(arrs));</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 快速排序</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arrs)</span> </span>&#123;</div><div class="line">        qSort(arrs, <span class="number">0</span>, arrs.length - <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">qSort</span><span class="params">(<span class="keyword">int</span>[] arrs, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> mid;</div><div class="line">        <span class="keyword">if</span> (low &lt; high) &#123;</div><div class="line">            mid = partition(arrs, low, high);</div><div class="line">            qSort(arrs, low, mid);</div><div class="line">            qSort(arrs, mid + <span class="number">1</span>, high);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span>[] arrs, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> midKey = arrs[low]; <span class="comment">//用子表的第一个记录作为枢轴记录</span></div><div class="line">        <span class="keyword">while</span> (low &lt; high) &#123;    <span class="comment">//从表的两端交替向中间扫描</span></div><div class="line">            <span class="keyword">while</span> (low &lt; high &amp;&amp; arrs[high] &gt;= midKey) &#123;</div><div class="line">                high--;</div><div class="line">            &#125;</div><div class="line">            swap(arrs, low, high);  <span class="comment">//将比枢轴记录小的记录交换到左边</span></div><div class="line">            <span class="keyword">while</span> (low &lt; high &amp;&amp; arrs[low] &lt;= midKey) &#123;</div><div class="line">                low++;</div><div class="line">            &#125;</div><div class="line">            swap(arrs, low, high);  <span class="comment">//将比枢轴记录大的记录交换到右边</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> low;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuickSort</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] arrs = &#123;<span class="number">1000</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">418</span>,<span class="number">5</span>,<span class="number">100</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">101</span>,<span class="number">242</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>&#125;;</div><div class="line">        quickSort(arrs);</div><div class="line">        System.out.println(Arrays.toString(arrs));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Java实现各种排序。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="排序" scheme="http://yoursite.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>排序</title>
    <link href="http://yoursite.com/2017/06/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%8E%92%E5%BA%8F/"/>
    <id>http://yoursite.com/2017/06/18/数据结构-排序/</id>
    <published>2017-06-18T13:22:15.000Z</published>
    <updated>2018-06-26T06:47:03.918Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>定义
<ul>
<li>将杂乱无章的数据元素，通过一定的方法按关键字顺序排列的过程叫做排序。（来自百度百科）</li>
</ul>
</li>
<li>排序的稳定性
<ul>
<li>假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，即在原序列中，ri=rj，且ri在rj之前，而在排序后的序列中，ri仍在rj之前，则称这种排序算法是稳定的；否则称为不稳定的。</li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li>内排序与外排序
<ul>
<li>内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。</li>
<li>外排序是由于排序的记录个数太多，不能同时放置在内存，整个排序的过程需要在内外存之间多次交换数据才行。</li>
</ul>
</li>
<li>内排序排序算法的性能
<ul>
<li>时间性能
<ul>
<li>尽量减少关键字比较次数和记录移动次数。</li>
</ul>
</li>
<li>辅助空间
<ul>
<li>除了存放待排序所占用的存储空间外，还包括执行算法所需要的其他存储空间。</li>
</ul>
</li>
<li>算法的复杂性</li>
</ul>
</li>
<li>七种排序算法
<ul>
<li>简单算法：冒泡排序，简单选择排序，直接插入排序。</li>
<li>改进算法：希尔排序，堆排序，归并排序，快速排序。</li>
</ul>
</li>
<li>冒泡排序
<ul>
<li>两两比较相邻记录的关键字，如果反序则交换，直到没有反序的记录为止。</li>
<li>最简单的排序时间是两个for循环正向遍历，不符合两两比较的原则；冒泡排序是大循环正向，内循环从后往前遍历，在不断遍历过程中，除了将目标关键字排好序之外，其他关键字也会同时前移，效率会提高不少。</li>
<li>冒泡排序算法的优化：排序过程中添加标记flag，如果一次循环中，没有交换元素，证明已经排序好了，避免不必要的遍历。</li>
<li>时间复杂度分析：
<ul>
<li>最优情况：遍历n-1次</li>
<li>最坏情况：遍历1 + 2 + 3 + (n - 1 ) = n(n - 1)/2次</li>
<li>时间复杂度为O(n2)</li>
</ul>
</li>
</ul>
</li>
<li>简单选择排序
<ul>
<li>通过 n - i 次关键字间的比较，从n - i + 1个记录中选出关键字最小的记录，并与第 i 个记录交换之。</li>
<li>时间复杂度分析：无论最好还是最差的情况，比较的次数都是一样多。比较的次数为 n(n - 1)/2，但是交换的次数只有 n - 1 次，最终的排序时间是基于比较和交换次数总和，时间复杂度为O(n2)；性能优于冒泡排序。</li>
</ul>
</li>
<li>直接插入排序
<ul>
<li>将一个记录插入到已经排好序的列表中，从而得到一个新的、记录数增1的有序表。</li>
<li>时间复杂度分析：空间上，只需要一个记录的辅助空间。时间复杂度，最好情况为O(n)，最坏的情况，需要比较2 + 3 + … + n = (n + 2)(n - 1)/2 次，记录的移动次数为3 + … + n + 1 = (n + 4)(n - 1)/2次。 平均移动和比较的次数为n2/4次。时间复杂度为O(n2)，但是性能要优于冒泡排序和简单选择排序。</li>
</ul>
</li>
<li>希尔排序
<ul>
<li>把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。</li>
<li>复杂度分析：时间复杂度为O(n3/2)。</li>
<li>增量序列的最后一个增量值必须等于1才行；另外由于记录是跳跃式的移动，希尔排序并不是稳定的排序算法。</li>
</ul>
</li>
<li>堆排序
<ul>
<li>堆是具有下列性质的完全二叉树：每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆；或者每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆。</li>
<li>堆排序就是利用堆进行排序的方法。基本思想是，将待排序的序列构造成一个大顶堆，此时，整个序列的最大值就是堆顶的根结点，将其与堆数组的末尾元素交换，然后将剩余的n-1个序列重新构造成一个堆，用同样的方法取得n个元素的次小值，重复执行以上步骤，便可以得到一个有序序列。</li>
<li>复杂度分析：整个构建堆的时间复杂度是O(n)，第i次重建堆时间复杂度为O(logi)，所有重建堆的时间复杂度为O(nlogn)，总体来说，时间复杂度为O(nlogn)。最好，最坏和评价的时间复杂度都是一样；初始构建堆所需要比较的次数多，不适合排序序列个数较少的情况。</li>
</ul>
</li>
<li>归并排序
<ul>
<li>时间复杂度为O(nlogn)。是稳定的排序算法。</li>
</ul>
</li>
<li>快速排序
<ul>
<li><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsokuz8dm1j20ws0yidk9.jpg" alt=""></li>
</ul>
</li>
<li>几种排序算法的比较
<ul>
<li><img src="https://ws1.sinaimg.cn/large/5cc1a78ely1fsokv96z52j20my06s0tr.jpg" alt=""></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;定义
&lt;ul&gt;
&lt;li&gt;将杂乱无章的数据元素，通过一定的方法按关键字顺序排列的过程叫做排序。（来自百度百科）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;排序的稳定性
&lt;ul&gt;
&lt;li&gt;假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，即在原序列中，ri=rj，且ri在rj之前，而在排序后的序列中，ri仍在rj之前，则称这种排序算法是稳定的；否则称为不稳定的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="排序" scheme="http://yoursite.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
